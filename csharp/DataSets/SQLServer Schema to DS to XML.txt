Create your schema with all constraints as you like it in SQL server... then perform these steps:

Make VS 2005+ aware of your SQL Server:

1. Create a new project in VS2005 or  better.. (console)
2. View/Server Explorer
3. R-Click Data Connections
4. Add Connection...
5. Server Name: your server

Get AutoGenerated classes for your schema:

1. Data/Add New Data Source...
2. Database/Next>
3. Complete rest as needed (security, etc.)
4. Pick Tables of interest then 'Finish'
5. Pick 'View/Class View' 
6. there should be a DataSet as you named in the previous steps... there should also
   be a set of TableAdapters.  Each TableAdapter will start with a name of one of
   the tables from the database schema.  So if there is a Configurations table, expect a
   ConfigurationsTableAdapter.
7. Write the code to read the tables from the DB into a dataset.. i.e.:

        static void Main(string[] args)
        {
            test_oneDataSet tst1DS = 
                new test_oneDataSet();
                
            test_oneDataSetTableAdapters.ConfigurationsTableAdapter configsTA = 
                new DataWiz2.test_oneDataSetTableAdapters.ConfigurationsTableAdapter();
            configsTA.Fill(tst1DS.Configurations);
            
            test_oneDataSetTableAdapters.deviceKeysTableAdapter deviceKeysTA = 
                new DataWiz2.test_oneDataSetTableAdapters.deviceKeysTableAdapter();
            deviceKeysTA.Fill(tst1DS.deviceKeys);
            
            test_oneDataSetTableAdapters.DevicesTableAdapter DevicesTA = 
                new DataWiz2.test_oneDataSetTableAdapters.DevicesTableAdapter();
            DevicesTA.Fill(tst1DS.Devices);
            
            test_oneDataSetTableAdapters.LearnedKeysTableAdapter LearnedKeysTA = 
                new DataWiz2.test_oneDataSetTableAdapters.LearnedKeysTableAdapter();
            LearnedKeysTA.Fill(tst1DS.LearnedKeys);
            
            test_oneDataSetTableAdapters.UsersTableAdapter UsersTA = 
                new DataWiz2.test_oneDataSetTableAdapters.UsersTableAdapter();
            UsersTA.Fill(tst1DS.Users);

-        }

   Note how in the above example the dataset is not used directly in the Fill calls.. you must
   use the custom built dataset's properties to get the correct table reference for the fill..
   The wizard makes use of the dataset and the table adapters type safe!

8. and write the code to write out the xml schema (and data if you wish):


            tst1DS.WriteXmlSchema("configs.xsd");
            tst1DS.WriteXml("configs.xml");


The process of reading the schema and data could NOT be easier:

            ConfigsDS.ReadXmlSchema("test_one_Schema.xsd");
            ConfigsDS.ReadXml("test_one.xml");

