<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<checkers version="1.3">
    <severitytable hiddenStart="11" max="10" warningStart="5">
        <severity name="Critical" number="1"/>
        <severity name="Severe" number="2"/>
        <severity name="Error" number="3"/>
        <severity name="Unexpected" number="4"/>
        <severity name="Investigate" number="5"/>
        <severity name="Warning" number="6"/>
        <severity name="Suggestion" number="7"/>
        <severity name="Style" number="8"/>
        <severity name="Review" number="9"/>
        <severity name="Info" number="10"/>
    </severitytable>
    <categories name="C and C++">
        <category name="Attempt to Use Memory after Free">
            <error id="CL.FFM.ASSIGN"/>
            <error id="CL.FFM.COPY"/>
            <error id="LOCRET.ARG"/>
            <error id="LOCRET.GLOB"/>
            <error id="LOCRET.RET"/>
            <error id="UFM.DEREF.MIGHT"/>
            <error id="UFM.DEREF.MUST"/>
            <error id="UFM.FFM.MIGHT"/>
            <error id="UFM.FFM.MUST"/>
            <error id="UFM.RETURN.MIGHT"/>
            <error id="UFM.RETURN.MUST"/>
            <error id="UFM.USE.MIGHT"/>
            <error id="UFM.USE.MUST"/>
        </category>
        <category name="Buffer Overflow">
            <error id="ABR"/>
            <error id="ABV.ANY_SIZE_ARRAY"/>
            <error id="ABV.ITERATOR"/>
            <error id="ABV.STACK"/>
            <error id="ABV.TAINTED"/>
            <error id="ABV.UNICODE.BOUND_MAP"/>
            <error id="ABV.UNICODE.FAILED_MAP"/>
            <error id="ABV.UNICODE.NNTS_MAP"/>
            <error id="NNTS.MIGHT"/>
            <error id="NNTS.MUST"/>
            <error id="NNTS.TAINTED"/>
            <error id="SV.FMT_STR.BAD_SCAN_FORMAT"/>
            <error id="SV.STRBO.BOUND_COPY"/>
            <error id="SV.STRBO.BOUND_SPRINTF"/>
            <error id="SV.STRBO.GETS"/>
            <error id="SV.STRBO.UNBOUND_COPY"/>
            <error id="SV.STRBO.UNBOUND_SPRINTF"/>
            <error id="SV.USAGERULES.UNBOUNDED_STRING_COPY"/>
            <error id="SV.USAGERULES.UNBOUNDED_STRING_COPY.INPUT"/>
        </category>
        <category name="C/C++ Warnings">
            <error id="CWARN.COPY.NOASSIGN"/>
            <error id="CWARN.DTOR.NONVIRT.DELETE"/>
            <error id="CWARN.DTOR.NONVIRT.NOTEMPTY"/>
            <error id="CWARN.NOEFFECT.SELF_ASSIGN"/>
            <error id="CWARN.NOEFFECT.UCMP.GE"/>
            <error id="CWARN.NOEFFECT.UCMP.GE.MACRO"/>
            <error id="CWARN.NOEFFECT.UCMP.LT"/>
            <error id="CWARN.NOEFFECT.UCMP.LT.MACRO"/>
            <error id="CWARN.NULLCHECK.FUNCNAME"/>
            <error id="CWARN.OVERRIDE.CONST"/>
            <error id="CWARN.PASSBYVALUE.ARG"/>
            <error id="CWARN.PASSBYVALUE.EXC"/>
        </category>
        <category name="COM defects">
            <category name="BSTR related defects">
                <error id="BSTR.CAST.C"/>
                <error id="BSTR.CAST.CPP"/>
                <error id="BSTR.FUNC.ALLOC"/>
                <error id="BSTR.FUNC.FREE"/>
                <error id="BSTR.FUNC.LEN"/>
                <error id="BSTR.FUNC.REALLOC"/>
                <error id="BSTR.IA.ASSIGN"/>
                <error id="BSTR.IA.INIT"/>
                <error id="BSTR.OPS.ARITHM"/>
                <error id="BSTR.OPS.COMP"/>
                <error id="BSTR.OPS.EQS"/>
                <error id="CCOMBSTR.OPS.TERN"/>
            </category>
        </category>
        <category name="Calculated Values Never Used">
            <error id="VA_UNUSED.GEN"/>
            <error id="VA_UNUSED.INIT"/>
        </category>
        <category name="Concurrency">
            <error id="CONC.DL"/>
            <error id="CONC.NO_UNLOCK"/>
            <error id="CONC.SLEEP"/>
        </category>
        <category name="DNS Spoofing">
            <error id="SV.BFC.USING_STRUCT"/>
            <error id="SV.USAGERULES.SPOOFING"/>
        </category>
        <category name="Ignored Return Values">
            <error id="SV.PAIRS.NO_CHECK"/>
            <error id="SV.PAIRS.NO_CHECK_GLE"/>
            <error id="SV.RVT.RETVAL_NOTTESTED"/>
        </category>
        <category name="Improper Memory Deallocation">
            <error id="CL.FMM"/>
            <error id="FMM.MIGHT"/>
            <error id="FMM.MUST"/>
            <error id="FNH.MIGHT"/>
            <error id="FNH.MUST"/>
            <error id="FUM.GEN.MIGHT"/>
            <error id="FUM.GEN.MUST"/>
        </category>
        <category name="Inappropriate Iterator Usage">
            <error id="ITER.CONTAINER.INAPPROPRIATE"/>
            <error id="ITER.CONTAINER.MODIFIED"/>
            <error id="ITER.END.DEREF"/>
        </category>
        <category name="Memory Leaks">
            <error id="CL.MLK"/>
            <error id="CL.MLK.VIRTUAL"/>
            <error id="CL.SELF-ASSIGN"/>
            <error id="FREE.INCONSISTENT"/>
            <error id="MLK.MIGHT"/>
            <error id="MLK.MUST"/>
            <error id="SYM.MLK"/>
        </category>
        <category name="Mismatched Return Types">
            <error id="CL.RETURN-THIS"/>
            <error id="FUNCRET.GEN"/>
            <error id="FUNCRET.IMPLICIT"/>
            <error id="RETVOID.GEN"/>
            <error id="RETVOID.IMPLICIT"/>
            <error id="VOIDRET"/>
        </category>
        <category name="Null Pointer Dereference">
            <error id="NPD.CHECK.CALL.MIGHT"/>
            <error id="NPD.CHECK.CALL.MUST"/>
            <error id="NPD.CHECK.MIGHT"/>
            <error id="NPD.CHECK.MUST"/>
            <error id="NPD.CONST.CALL"/>
            <error id="NPD.CONST.DEREF"/>
            <error id="NPD.FUNC.CALL.MIGHT"/>
            <error id="NPD.FUNC.CALL.MUST"/>
            <error id="NPD.FUNC.MIGHT"/>
            <error id="NPD.FUNC.MUST"/>
            <error id="NPD.GEN.CALL.MIGHT"/>
            <error id="NPD.GEN.CALL.MUST"/>
            <error id="NPD.GEN.MIGHT"/>
            <error id="NPD.GEN.MUST"/>
            <error id="RNPD.CALL"/>
            <error id="RNPD.DEREF"/>
        </category>
        <category name="Parse warning defects">
            <error id="CWARN.BOOLOP.INC"/>
            <error id="CWARN.CMPCHR.EOF"/>
            <error id="CWARN.CONSTCOND.DO"/>
            <error id="CWARN.CONSTCOND.IF"/>
            <error id="CWARN.CONSTCOND.SWITCH"/>
            <error id="CWARN.CONSTCOND.TERNARY"/>
            <error id="CWARN.CONSTCOND.WHILE"/>
            <error id="CWARN.EMPTY.LABEL"/>
            <error id="CWARN.EMPTY.TYPEDEF"/>
            <error id="CWARN.FUNCADDR"/>
            <error id="CWARN.HIDDEN.PARAM"/>
            <error id="CWARN.IMPLICITINT"/>
            <error id="CWARN.INLINE.NONFUNC"/>
            <error id="CWARN.PACKED.TYPEDEF"/>
            <error id="CWARN.RET.MAIN"/>
            <error id="CWARN.SIGNEDBIT"/>
        </category>
        <category name="Porting issues">
            <error id="PORTING.BITFIELDS"/>
            <error id="PORTING.BSWAP.MACRO"/>
            <error id="PORTING.BYTEORDER.SIZE"/>
            <error id="PORTING.CAST.FLTPNT"/>
            <error id="PORTING.CAST.PTR"/>
            <error id="PORTING.CAST.PTR.FLTPNT"/>
            <error id="PORTING.CAST.PTR.SIZE"/>
            <error id="PORTING.CAST.SIZE"/>
            <error id="PORTING.CMPSPEC.EFFECTS.ASSIGNMENT"/>
            <error id="PORTING.CMPSPEC.TYPE.BOOL"/>
            <error id="PORTING.CMPSPEC.TYPE.LONGLONG"/>
            <error id="PORTING.MACRO.NUMTYPE"/>
            <error id="PORTING.OPTS"/>
            <error id="PORTING.PRAGMA.ALIGN"/>
            <error id="PORTING.PRAGMA.PACK"/>
            <error id="PORTING.SIGNED.CHAR"/>
            <error id="PORTING.STORAGE.STRUCT"/>
            <error id="PORTING.STRUCT.BOOL"/>
            <error id="PORTING.UNIONS"/>
            <error id="PORTING.UNSIGNEDCHAR.OVERFLOW.FALSE"/>
            <error id="PORTING.UNSIGNEDCHAR.OVERFLOW.TRUE"/>
            <error id="PORTING.UNSIGNEDCHAR.RELOP"/>
            <error id="PORTING.VAR.EFFECTS"/>
        </category>
        <category name="Print functions format">
            <error id="SV.FMT_STR.PRINT_FORMAT_MISMATCH.BAD"/>
            <error id="SV.FMT_STR.PRINT_FORMAT_MISMATCH.UNDESIRED"/>
            <error id="SV.FMT_STR.PRINT_IMPROP_LENGTH"/>
            <error id="SV.FMT_STR.PRINT_PARAMS_WRONGNUM.FEW"/>
            <error id="SV.FMT_STR.PRINT_PARAMS_WRONGNUM.MANY"/>
            <error id="SV.FMT_STR.UNKWN_FORMAT"/>
        </category>
        <category name="Registry Manipulation">
            <error id="SV.BRM.CONST"/>
            <error id="SV.BRM.HKEY_LOCAL_MACHINE"/>
            <error id="SV.BRM.VAR.MIGHT"/>
            <error id="SV.BRM.VAR.MUST"/>
        </category>
        <category name="Resource Handling Issues">
            <error id="RH.LEAK"/>
            <error id="SV.INCORRECT_RESOURCE_HANDLING.URH"/>
            <error id="SV.INCORRECT_RESOURCE_HANDLING.WRONG_STATUS"/>
        </category>
        <category name="Scan functions format">
            <error id="SV.FMT_STR.SCAN_FORMAT_MISMATCH"/>
            <error id="SV.FMT_STR.SCAN_IMPROP_LENGTH"/>
            <error id="SV.FMT_STR.SCAN_PARAMS_WRONGNUM.FEW"/>
            <error id="SV.FMT_STR.SCAN_PARAMS_WRONGNUM.MANY"/>
            <error id="SV.FMT_STR.UNKWN_FORMAT.SCAN"/>
        </category>
        <category name="Strong Type Checkers">
            <error id="STRONG.TYPE.ASSIGN"/>
            <error id="STRONG.TYPE.ASSIGN.ARG"/>
            <error id="STRONG.TYPE.ASSIGN.CONST"/>
            <error id="STRONG.TYPE.ASSIGN.INIT"/>
            <error id="STRONG.TYPE.ASSIGN.RETURN"/>
            <error id="STRONG.TYPE.ASSIGN.ZERO"/>
            <error id="STRONG.TYPE.EXTRACT"/>
            <error id="STRONG.TYPE.JOIN.CMP"/>
            <error id="STRONG.TYPE.JOIN.CONST"/>
            <error id="STRONG.TYPE.JOIN.EQ"/>
            <error id="STRONG.TYPE.JOIN.OTHER"/>
            <error id="STRONG.TYPE.JOIN.ZERO"/>
        </category>
        <category name="Suspicious Code Practices">
            <error id="ASSIGCOND.CALL"/>
            <error id="ASSIGCOND.GEN"/>
            <error id="BYTEORDER.HTON.SEND"/>
            <error id="BYTEORDER.HTON.WRITE"/>
            <error id="BYTEORDER.NTOH.READ"/>
            <error id="BYTEORDER.NTOH.RECV"/>
            <error id="EFFECT"/>
            <error id="INCONSISTENT.LABEL"/>
            <error id="INCORRECT.ALLOC_SIZE"/>
            <error id="LA_UNUSED"/>
            <error id="PRECISION.LOSS"/>
            <error id="PRECISION.LOSS.CALL"/>
            <error id="SEMICOL"/>
            <error id="SV.CODE_INJECTION.SHELL_EXEC"/>
            <error id="SV.FIU.PERMISSIONS"/>
            <error id="SV.FIU.PROCESS_VARIANTS"/>
            <error id="SV.FMTSTR.GENERIC"/>
            <error id="SV.TOCTOU.FILE_ACCESS"/>
            <error id="SV.USAGERULES.FILE_VARIANTS"/>
            <error id="SV.USAGERULES.PERMISSIONS"/>
            <error id="SV.USAGERULES.PROCESS_VARIANTS"/>
            <error id="SV.USAGERULES.UNINTENDED_COPY"/>
        </category>
        <category name="Unreachable Code">
            <error id="UNREACH.GEN"/>
            <error id="UNREACH.RETURN"/>
        </category>
        <category name="Unused Local Variables">
            <error id="LV_UNUSED.GEN"/>
        </category>
        <category name="Unvalidated User Input">
            <error id="SV.CUDS.MISSING_ABSOLUTE_PATH"/>
            <error id="SV.STR_PAR.UNDESIRED_STRING_PARAMETER"/>
            <error id="SV.TAINTED.ALLOC_SIZE"/>
            <error id="SV.TAINTED.CALL.INDEX_ACCESS"/>
            <error id="SV.TAINTED.CALL.LOOP_BOUND"/>
            <error id="SV.TAINTED.FMTSTR"/>
            <error id="SV.TAINTED.GENERIC"/>
            <error id="SV.TAINTED.INDEX_ACCESS"/>
            <error id="SV.TAINTED.INJECTION"/>
            <error id="SV.TAINTED.LOOP_BOUND"/>
        </category>
        <category name="Use of Uninitialized Data">
            <error id="UNINIT.CTOR.MIGHT"/>
            <error id="UNINIT.CTOR.MUST"/>
            <error id="UNINIT.HEAP.MIGHT"/>
            <error id="UNINIT.HEAP.MUST"/>
            <error id="UNINIT.STACK.ARRAY.MIGHT"/>
            <error id="UNINIT.STACK.ARRAY.MUST"/>
            <error id="UNINIT.STACK.ARRAY.PARTIAL.MUST"/>
            <error id="UNINIT.STACK.MIGHT"/>
            <error id="UNINIT.STACK.MUST"/>
        </category>
        <category name="Weak Encryption">
            <error id="SV.FIU.POOR_ENCRYPTION"/>
            <error id="SV.PCC.CONST"/>
            <error id="SV.PCC.INVALID_TEMP_PATH"/>
            <error id="SV.PCC.MISSING_TEMP_CALLS.MUST"/>
            <error id="SV.PCC.MISSING_TEMP_FILENAME"/>
            <error id="SV.PCC.MODIFIED_BEFORE_CREATE"/>
            <error id="SV.WEAK_CRYPTO.WEAK_HASH"/>
        </category>
    </categories>
    <categories name="C#">
        <category name="KAST checkers">
            <error id="CS.ASSIGN.SELF"/>
            <error id="CS.CMP.VAL.NULL"/>
            <error id="CS.CONSTCOND.DO"/>
            <error id="CS.CONSTCOND.IF"/>
            <error id="CS.CONSTCOND.SWITCH"/>
            <error id="CS.CONSTCOND.TERNARY"/>
            <error id="CS.CONSTCOND.WHILE"/>
            <error id="CS.CTOR.VIRTUAL"/>
            <error id="CS.EMPTY.CATCH"/>
            <error id="CS.FLOAT.EQCHECK"/>
            <error id="CS.FRACTION.LOSS"/>
            <error id="CS.HIDDEN.MEMBER.LOCAL.CLASS"/>
            <error id="CS.HIDDEN.MEMBER.LOCAL.STRUCT"/>
            <error id="CS.HIDDEN.MEMBER.PARAM.CLASS"/>
            <error id="CS.HIDDEN.MEMBER.PARAM.STRUCT"/>
            <error id="CS.IFACE.EMPTY"/>
            <error id="CS.LOOP.STR.CONCAT"/>
            <error id="CS.OVRD.EQUALS"/>
            <error id="CS.WRONGSIG.CMPTO"/>
            <error id="CS.WRONGUSE.REFEQ"/>
        </category>
        <category name="Path checkers">
            <error id="CS.NRE.CHECK.CALL.MIGHT"/>
            <error id="CS.NRE.CHECK.CALL.MUST"/>
            <error id="CS.NRE.CHECK.MIGHT"/>
            <error id="CS.NRE.CHECK.MUST"/>
            <error id="CS.NRE.CONST.CALL"/>
            <error id="CS.NRE.CONST.DEREF"/>
            <error id="CS.NRE.FUNC.CALL.MIGHT"/>
            <error id="CS.NRE.FUNC.CALL.MUST"/>
            <error id="CS.NRE.FUNC.MIGHT"/>
            <error id="CS.NRE.FUNC.MUST"/>
            <error id="CS.NRE.GEN.CALL.MIGHT"/>
            <error id="CS.NRE.GEN.CALL.MUST"/>
            <error id="CS.NRE.GEN.MIGHT"/>
            <error id="CS.NRE.GEN.MUST"/>
            <error id="CS.RLK"/>
            <error id="CS.RNRE"/>
            <error id="CS.UNCHECKED.CAST"/>
            <error id="CS.UNCHECKED.LOOPITER.CAST"/>
            <error id="CS.WRONG.CAST"/>
            <error id="CS.WRONG.CAST.MIGHT"/>
        </category>
    </categories>
    <categories name="Java">
        <category name="Android Issues">
            <error id="ANDROID.NPE"/>
            <error id="ANDROID.RLK.MEDIAPLAYER"/>
            <error id="ANDROID.RLK.MEDIARECORDER"/>
            <error id="ANDROID.RLK.SQLCON"/>
            <error id="ANDROID.RLK.SQLOBJ"/>
            <error id="ANDROID.UF.BITMAP"/>
            <error id="ANDROID.UF.CAMERA"/>
            <error id="ANDROID.UF.MEDIAPLAYER"/>
            <error id="ANDROID.UF.MEDIARECORDER"/>
        </category>
        <category name="Cloning Issues">
            <error id="SV.CLONE.SUP"/>
        </category>
        <category name="Cross-site Scripting (XSS)">
            <error id="SV.XSS.DB"/>
            <error id="SV.XSS.REF"/>
        </category>
        <category name="Data Injection">
            <error id="SV.DATA.BOUND"/>
            <error id="SV.DATA.DB"/>
            <error id="SV.LDAP"/>
            <error id="SV.SQL"/>
            <error id="SV.SQL.DBSOURCE"/>
        </category>
        <category name="Denial of Service">
            <error id="SV.DOS.ARRINDEX"/>
            <error id="SV.DOS.ARRSIZE"/>
            <error id="SV.DOS.TMPFILEDEL"/>
            <error id="SV.DOS.TMPFILEEXIT"/>
            <error id="SV.INT_OVF"/>
        </category>
        <category name="Equality and Hash Code Issues">
            <error id="CMP.CLASS"/>
            <error id="CMP.OBJ"/>
            <error id="CMP.STR"/>
            <error id="CMPF.FLOAT"/>
            <error id="COV.CMP"/>
            <error id="EHC.EQ"/>
            <error id="EHC.HASH"/>
        </category>
        <category name="Ignored Return Values">
            <error id="RI.IGNOREDCALL"/>
            <error id="RI.IGNOREDNEW"/>
            <error id="RR.IGNORED"/>
        </category>
        <category name="Information Leaks">
            <error id="SV.IL.DEV"/>
            <error id="SV.IL.FILE"/>
        </category>
        <category name="Maintainability Issues">
            <error id="FSC.PRT"/>
            <error id="FSC.PRV"/>
            <error id="FSC.PUB"/>
            <error id="JD.OVER"/>
            <error id="MNA.CAP"/>
            <error id="RTC.CALL"/>
            <error id="UMC.EXIT"/>
            <error id="UMC.GC"/>
            <error id="UMC.SYSERR"/>
            <error id="UMC.SYSOUT"/>
        </category>
        <category name="Performance Issues">
            <error id="ESCMP.EMPTYSTR"/>
            <error id="FIN.EMPTY"/>
            <error id="STRCON.LOOP"/>
            <error id="SYNCH.NESTED"/>
            <error id="SYNCH.NESTEDS"/>
            <error id="UC.BOOLB"/>
            <error id="UC.BOOLS"/>
            <error id="UC.STRS"/>
            <error id="UC.STRV"/>
            <error id="UMC.TOSTRING"/>
        </category>
        <category name="Poor Error Handling">
            <error id="ECC.EMPTY"/>
            <error id="EXC.BROADTHROWS"/>
            <error id="JD.CATCH"/>
            <error id="JD.FINRET"/>
            <error id="JD.UNCAUGHT"/>
        </category>
        <category name="Possible Runtime Failures">
            <error id="JD.CAST.COL"/>
            <error id="JD.CAST.KEY"/>
            <error id="JD.CAST.SUSP"/>
            <error id="JD.CAST.UPCAST"/>
            <error id="JD.CONCUR"/>
            <error id="JD.NEXT"/>
            <error id="JD.UNMOD"/>
            <error id="NPE.COND"/>
            <error id="NPE.CONST"/>
            <error id="NPE.RET"/>
            <error id="NPE.RET.UTIL"/>
            <error id="NPE.STAT"/>
        </category>
        <category name="Process and Path Injection">
            <error id="SV.EXEC"/>
            <error id="SV.EXEC.DIR"/>
            <error id="SV.EXEC.ENV"/>
            <error id="SV.PATH"/>
            <error id="SV.PATH.INJ"/>
            <error id="SV.TMPFILE"/>
        </category>
        <category name="Redundant Code">
            <error id="JD.IFBAD"/>
            <error id="JD.IFEMPTY"/>
            <error id="JD.RC.EXPR.CHECK"/>
            <error id="JD.RC.EXPR.DEAD"/>
            <error id="JD.UN.MET"/>
            <error id="JD.UN.PMET"/>
            <error id="JD.VNU"/>
            <error id="JD.VNU.NULL"/>
            <error id="REDUN.DEF"/>
            <error id="REDUN.EQ"/>
            <error id="REDUN.EQNULL"/>
            <error id="REDUN.FINAL"/>
            <error id="REDUN.NULL"/>
            <error id="REDUN.OP"/>
            <error id="RNU.THIS"/>
        </category>
        <category name="Resource Leaks">
            <error id="RLK.AWT"/>
            <error id="RLK.FIELD"/>
            <error id="RLK.HIBERNATE"/>
            <error id="RLK.IMAGEIO"/>
            <error id="RLK.IN"/>
            <error id="RLK.JNDI"/>
            <error id="RLK.MAIL"/>
            <error id="RLK.MICRO"/>
            <error id="RLK.NIO"/>
            <error id="RLK.OUT"/>
            <error id="RLK.SOCK"/>
            <error id="RLK.SQLCON"/>
            <error id="RLK.SQLOBJ"/>
            <error id="RLK.SWT"/>
            <error id="RLK.ZIP"/>
        </category>
        <category name="Serialization API Issues">
            <error id="SV.SERIAL.INON"/>
            <error id="SV.SERIAL.NON"/>
            <error id="SV.SERIAL.NOREAD"/>
            <error id="SV.SERIAL.NOWRITE"/>
            <error id="SV.SERIAL.SIG"/>
        </category>
        <category name="Special Rules">
            <error id="SV.CLEXT.CLLOADER"/>
            <error id="SV.CLEXT.POLICY"/>
            <error id="SV.STRBUF.CLEAN"/>
            <error id="SV.USE.POLICY"/>
        </category>
        <category name="Struts Issues">
            <error id="SV.STRUTS.NOTRESET"/>
            <error id="SV.STRUTS.NOTVALID"/>
            <error id="SV.STRUTS.PRIVATE"/>
            <error id="SV.STRUTS.RESETMET"/>
            <error id="SV.STRUTS.STATIC"/>
            <error id="SV.STRUTS.VALIDMET"/>
        </category>
        <category name="Suspicious Code Practices">
            <error id="FIN.NOSUPER"/>
            <error id="JD.BITCMP"/>
            <error id="JD.BITMASK"/>
            <error id="JD.BITR"/>
            <error id="JD.CALL.WRONGSTATIC"/>
            <error id="JD.EQ.ARR"/>
            <error id="JD.EQ.UTA"/>
            <error id="JD.EQ.UTC"/>
            <error id="JD.INF.AREC"/>
            <error id="JD.INST.TRUE"/>
            <error id="JD.LIST.ADD"/>
            <error id="JD.ST.POS"/>
            <error id="JD.UMC.FINALIZE"/>
            <error id="JD.UMC.RUNFIN"/>
            <error id="MNA.CNS"/>
            <error id="MNA.SUS"/>
        </category>
        <category name="Threads and Synchronization Issues">
            <error id="JD.LOCK"/>
            <error id="JD.LOCK.NOTIFY"/>
            <error id="JD.LOCK.SLEEP"/>
            <error id="JD.LOCK.WAIT"/>
            <error id="JD.SYNC.DCL"/>
            <error id="JD.SYNC.IN"/>
            <error id="JD.THREAD.RUN"/>
            <error id="JD.UMC.WAIT"/>
            <error id="SV.SHARED.VAR"/>
        </category>
        <category name="Unsafe Code Practices">
            <error id="SV.CLLOADER"/>
            <error id="SV.SOCKETS"/>
            <error id="SV.UMC.EXIT"/>
            <error id="SV.UMC.JDBC"/>
            <error id="SV.UMC.THREADS"/>
            <error id="SV.UMD.MAIN"/>
        </category>
        <category name="Unvalidated User Input">
            <error id="SV.EMAIL"/>
            <error id="SV.HTTP_SPLIT"/>
            <error id="SV.LOG_FORGING"/>
            <error id="SV.TAINT"/>
            <error id="SV.TAINT_NATIVE"/>
            <error id="SV.XPATH"/>
        </category>
        <category name="Use After Free">
            <error id="UF.IMAGEIO"/>
            <error id="UF.IN"/>
            <error id="UF.JNDI"/>
            <error id="UF.MAIL"/>
            <error id="UF.MICRO"/>
            <error id="UF.NIO"/>
            <error id="UF.OUT"/>
            <error id="UF.SOCK"/>
            <error id="UF.SQLCON"/>
            <error id="UF.SQLOBJ"/>
            <error id="UF.ZIP"/>
        </category>
        <category name="Weak Encapsulation">
            <error id="SV.EXPOSE.FIELD"/>
            <error id="SV.EXPOSE.FIN"/>
            <error id="SV.EXPOSE.IFIELD"/>
            <error id="SV.EXPOSE.MUTABLEFIELD"/>
            <error id="SV.EXPOSE.RET"/>
            <error id="SV.EXPOSE.STORE"/>
        </category>
        <category name="Weak Encryption">
            <error id="SV.PASSWD.HC"/>
            <error id="SV.PASSWD.HC.EMPTY"/>
            <error id="SV.PASSWD.PLAIN"/>
            <error id="SV.RANDOM"/>
        </category>
    </categories>
    <checkergroup api="path" directory="" language="Java">
        <checker class="com.klocwork.jdefects.checkers.dfa.deadexpr.DeadExprChecker" id="JD.RC.EXPR">
            <error enabled="false" id="JD.RC.EXPR.DEAD" message="Redundant check causing dead code." severity="4" title="Redundant check causing dead code" upkid="177"/>
            <error enabled="true" id="JD.RC.EXPR.CHECK" message="Test expression is always true." severity="7" title="Test expression is always true" upkid="176"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.vnu.VNUChecker" id="JD.VNU">
            <error enabled="true" id="JD.VNU" message="Variable '{0}' was never read after being assigned." severity="8" title="Variable was never read after being assigned" upkid="189"/>
            <error enabled="true" id="JD.VNU.NULL" message="Variable '{0}' was never read after null being assigned." severity="8" title="Variable was never read after null being assigned" upkid="190"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.redunnull.RedunNullChecker" id="REDUN.NULL">
            <error enabled="true" id="REDUN.NULL" message="Variable '{0}' is always 'null' in this expression." severity="4" title="Usage of variable instead of null constant" upkid="256"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SourceSinkChecker" id="UF">
            <error enabled="true" id="UF.IMAGEIO" message="ImageIO stream {3} used after it was closed." severity="2" title="Usage of closed ImageIO stream" upkid="419">
                <parameter name="kbsection" value="uf/imageio.jkb"/>
            </error>
            <error enabled="true" id="UF.IN" message="Input stream {3} used after it was closed." severity="2" title="Usage of closed input stream" upkid="420">
                <parameter name="kbsection" value="uf/in.jkb"/>
                <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
            </error>
            <error enabled="true" id="UF.JNDI" message="JNDI context {3} used after it was closed." severity="2" title="Usage of closed JNDI context" upkid="421">
                <parameter name="kbsection" value="uf/jndi.jkb"/>
            </error>
            <error enabled="true" id="UF.MAIL" message="Java mail object {3} used after it was closed." severity="2" title="Usage of closed Java mail object" upkid="422">
                <parameter name="kbsection" value="uf/mail.jkb"/>
            </error>
            <error enabled="true" id="UF.MICRO" message="Java Microedition connection {3} used after it was closed." severity="2" title="Usage of closed Java Microedition connection" upkid="423">
                <parameter name="kbsection" value="uf/me.jkb"/>
            </error>
            <error enabled="true" id="UF.NIO" message="NIO object {3} used after it was closed." severity="2" title="Usage of closed NIO object" upkid="424">
                <parameter name="kbsection" value="uf/nio.jkb"/>
            </error>
            <error enabled="true" id="UF.OUT" message="Output stream {3} used after it was closed." severity="2" title="Usage of closed output stream" upkid="425">
                <parameter name="kbsection" value="uf/out.jkb"/>
            </error>
            <error enabled="true" id="UF.SOCK" message="Socket {3} used after it was closed." severity="2" title="Usage of closed socket" upkid="426">
                <parameter name="kbsection" value="uf/sock.jkb"/>
            </error>
            <error enabled="true" id="UF.SQLCON" message="SQL connection {3} used after it was closed." severity="2" title="Usage of closed SQL connection" upkid="427">
                <parameter name="kbsection" value="uf/sqlcon.jkb"/>
            </error>
            <error enabled="true" id="UF.SQLOBJ" message="SQL object {3} used after it was closed." severity="2" title="Usage of closed SQL object" upkid="428">
                <parameter name="kbsection" value="uf/sqlobj.jkb"/>
            </error>
            <error enabled="true" id="UF.ZIP" message="Zip file {3} used after it was closed." severity="2" title="Usage of closed zip file" upkid="429">
                <parameter name="kbsection" value="uf/zip.jkb"/>
            </error>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.ExitFragment"/>
            <parameter name="kbsection" value="shared/out.stream.prop.jkb"/>
            <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SourceSinkChecker" id="ANDROID.UF">
            <error enabled="true" id="ANDROID.UF.BITMAP" message="Bitmap {3} used after it was recycled." severity="2" title="Usage of recycled bitmap" upkid="15">
                <parameter name="kbsection" value="android/uf/bitmap.jkb"/>
            </error>
            <error enabled="true" id="ANDROID.UF.CAMERA" message="Camera {3} used after it was released." severity="2" title="Usage of released camera" upkid="16">
                <parameter name="kbsection" value="android/uf/camera.jkb"/>
            </error>
            <error enabled="true" id="ANDROID.UF.MEDIAPLAYER" message="Media player {3} used after it was released." severity="2" title="Usage of released media player" upkid="17">
                <parameter name="kbsection" value="android/uf/mediaplayer.jkb"/>
            </error>
            <error enabled="true" id="ANDROID.UF.MEDIARECORDER" message="Media recorder {3} used after it was released." severity="2" title="Usage of released media recorder" upkid="18">
                <parameter name="kbsection" value="android/uf/mediarecorder.jkb"/>
            </error>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.RLKChecker" id="JD.LOCK">
            <error enabled="true" id="JD.LOCK" message="Lock {1} acquired but not released." severity="2" title="Lock without unlock" upkid="170"/>
            <parameter name="kbsection" value="jd.lock.jkb"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.RLKChecker" id="SV.DOS.TMPFILE">
            <error enabled="true" id="SV.DOS.TMPFILEDEL" message="File {3} scheduled for 'delete on exit' meaning it will remain for the lifetime of the JVM." severity="2" title="Leaving temporary file for lifetime of JVM" upkid="312">
                <parameter name="kbsection" value="sv.dos.tmpfiledel.jkb"/>
            </error>
            <error enabled="true" id="SV.DOS.TMPFILEEXIT" message="File {3} is created as temporary file but not deleted on exit" severity="2" title="Leaving temporary file" upkid="313">
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.rlk.RLKFragment"/>
            </error>
            <parameter name="kbsection" value="sv.dos.tmpfile.jkb"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.RLKChecker" id="RLK">
            <error enabled="true" id="RLK.AWT" message="AWT object {3} is not disposed on exit." severity="3" title="AWT object is not disposed on exit" upkid="263">
                <parameter name="kbsection" value="rlk/awt.jkb"/>
            </error>
            <error enabled="true" id="RLK.HIBERNATE" message="Hibernate object {3} is not closed on exit." severity="3" title="Hibernate object is not closed on exit" upkid="265">
                <parameter name="kbsection" value="rlk/hibernate.jkb"/>
            </error>
            <error enabled="true" id="RLK.IN" message="Input stream {3} is not closed on exit." severity="3" title="Input stream is not closed on exit" upkid="267">
                <parameter name="kbsection" value="rlk/in.jkb"/>
            </error>
            <error enabled="true" id="RLK.IMAGEIO" message="ImageIO stream {3} is not closed on exit." severity="3" title="ImageIO stream is not closed on exit" upkid="266">
                <parameter name="kbsection" value="rlk/imageio.jkb"/>
            </error>
            <error enabled="true" id="RLK.JNDI" message="JNDI context {3} is not closed on exit." severity="3" title="JNDI context is not closed on exit" upkid="268">
                <parameter name="kbsection" value="rlk/jndi.jkb"/>
            </error>
            <error enabled="true" id="RLK.MAIL" message="Java mail object {3} is not closed on exit." severity="3" title="Java mail object is not closed on exit" upkid="269">
                <parameter name="kbsection" value="rlk/mail.jkb"/>
            </error>
            <error enabled="true" id="RLK.MICRO" message="Java Microedition connection {3} is not closed on exit." severity="3" title="Java Microedition connection is not closed on exit" upkid="270">
                <parameter name="kbsection" value="rlk/me.jkb"/>
            </error>
            <error enabled="true" id="RLK.NIO" message="NIO object {3} is not closed on exit." severity="3" title="NIO object is not closed on exit" upkid="271">
                <parameter name="kbsection" value="rlk/nio.jkb"/>
            </error>
            <error enabled="true" id="RLK.OUT" message="Output stream {3} is not closed on exit." severity="3" title="Output stream is not closed on exit" upkid="272">
                <parameter name="kbsection" value="rlk/out.jkb"/>
            </error>
            <error enabled="true" id="RLK.SQLCON" message="Sql connection {3} is not closed on exit." severity="3" title="Sql connection is not closed on exit" upkid="274">
                <parameter name="kbsection" value="rlk/sqlcon.jkb"/>
            </error>
            <error enabled="true" id="RLK.SOCK" message="Socket {3} is not closed on exit." severity="3" title="Socket is not closed on exit" upkid="273">
                <parameter name="kbsection" value="rlk/sock.jkb"/>
            </error>
            <error enabled="true" id="RLK.SQLOBJ" message="Sql object {3} is not closed on exit." severity="3" title="Sql object is not closed on exit" upkid="275">
                <parameter name="kbsection" value="rlk/sqlobj.jkb"/>
            </error>
            <error enabled="true" id="RLK.SWT" message="SWT object {3} is not disposed on exit." severity="3" title="SWT object is not disposed on exit" upkid="276">
                <parameter name="kbsection" value="rlk/swt.jkb"/>
            </error>
            <error enabled="true" id="RLK.ZIP" message="Zip file {3} is not closed on exit." severity="3" title="Zip file is not closed on exit" upkid="277">
                <parameter name="kbsection" value="rlk/zip.jkb"/>
            </error>
            <parameter name="kbsection" value="shared/out.stream.prop.jkb"/>
            <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
            <parameter name="kbsection" value="rlk/xslt.jkb"/>
            <parameter name="kbsection" value="rlk.jkb"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.RLKChecker" id="SV.STRBUF.CLEAN">
            <error enabled="false" id="SV.STRBUF.CLEAN" message="String buffer {3} not cleaned before garbage collection" severity="9" title="String buffer not cleaned" upkid="376"/>
            <parameter name="kbsection" value="sv.strbuf.jkb"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.RLKChecker" id="ANDROID.RLK">
            <error enabled="true" id="ANDROID.RLK.MEDIAPLAYER" message="Media player {3} is not released on exit." severity="3" title="Media player is not released on exit" upkid="11">
                <parameter name="kbsection" value="android/rlk/mediaplayer.jkb"/>
            </error>
            <error enabled="true" id="ANDROID.RLK.MEDIARECORDER" message="Media recorder {3} is not released on exit." severity="3" title="Media recorder is not released on exit" upkid="12">
                <parameter name="kbsection" value="android/rlk/mediarecorder.jkb"/>
            </error>
            <error enabled="true" id="ANDROID.RLK.SQLCON" message="Sql connection {3} is not closed on exit." severity="3" title="Sql connection is not closed on exit" upkid="13">
                <parameter name="kbsection" value="android/rlk/sqlcon.jkb"/>
            </error>
            <error enabled="true" id="ANDROID.RLK.SQLOBJ" message="Sql object {3} is not closed on exit." severity="3" title="Sql object is not closed on exit" upkid="14">
                <parameter name="kbsection" value="android/rlk/sqlobj.jkb"/>
            </error>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SourceSinkChecker" id="JD.UNMOD">
            <error enabled="true" id="JD.UNMOD" message="An attempt to modify an unmodifiable collection" severity="1" title="Modification of unmodifiable collection" upkid="188">
                <parameter name="kbsection" value="jd.unmod.jkb"/>
            </error>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SourceSinkChecker" id="JD.NEXT">
            <error enabled="true" id="JD.NEXT" message="Possible 'NoSuchElementException': iterator {2} should be checked before usage." severity="5" title="Possible 'NoSuchElementException'" upkid="174">
                <parameter name="kbsection" value="jd.next.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.next.NextFragment"/>
            </error>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SourceSinkChecker" id="NPE.CONST">
            <error enabled="true" id="NPE.CONST" message="Null pointer dereference of {3} where null comes from constant" severity="1" title="Null pointer dereference where null comes from constant" upkid="220">
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.npd.NPDConstFragment"/>
            </error>
            <error enabled="true" id="NPE.COND" message="Null pointer dereference of {3} where null comes from condition" severity="1" title="Null pointer dereference where null comes from condition" upkid="219">
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.npd.NPDCondFragment"/>
            </error>
            <error enabled="true" id="NPE.RET" message="Null pointer dereference of {3} where null is returned from a method" severity="1" title="Dereference of a null value which is returned from a method" upkid="221">
                <parameter name="kbsection" value="npd.ret.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.npd.NPDRetFragment"/>
            </error>
            <error enabled="true" id="NPE.RET.UTIL" message="Null pointer dereference of {3} where null is returned from a map or a collection" severity="1" title="Dereference of a null value which is returned from a map or a collection" upkid="222">
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.npd.NPDCollectionKBFragment"/>
            </error>
            <error enabled="false" id="NPE.STAT" message="Possible NPE by dereferencing {3}. Statistics showed that calls to this method are frequently followed by a check for null." severity="6" title="Null pointer dereference of a return value (statistical)" upkid="223">
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.npd.NPDStatFragment"/>
            </error>
            <error enabled="true" id="ANDROID.NPE" message="Null pointer dereference of {3} in an Android application" severity="6" title="Dereference of a null value in an Android application" upkid="10">
                <parameter name="kbsection" value="android/npd.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.android.AndroidNPEFragment"/>
            </error>
            <parameter name="pathListener" value="com.klocwork.jdefects.controlflow.paths.PathAnalyzerListener"/>
            <parameter name="kbsection" value="npd.jkb"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.npd.NPDFragment"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.ExitFragment"/>
            <parameter name="kbstrategy" value="com.klocwork.jdefects.checkers.dfa.sourcesink.npd.NPDKBStrategy"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SourceSinkChecker" id="SV.INT_OVF">
            <error enabled="true" id="SV.INT_OVF" message="Tainted data {2} that comes from {1} is used in an arithmetic operation and can cause an integer overflow or unexpected result" severity="2" title="Tainted data may lead to Integer Overflow" upkid="345">
                <parameter name="kbsection" value="shared/taint.struts.jkb"/>
                <parameter name="kbsection" value="shared/arrays.jkb"/>
                <parameter name="kbsection" value="shared/prop.jkb"/>
                <parameter name="kbsection" value="shared/utilprop.jkb"/>
                <parameter name="kbsection" value="shared/numberprop.jkb"/>
                <parameter name="kbsection" value="shared/ioprop.jkb"/>
                <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
                <parameter name="kbsection" value="shared/string.jkb"/>
                <parameter name="kbsection" value="shared/taint.sck.jkb"/>
                <parameter name="kbsection" value="shared/taint.soap.jkb"/>
                <parameter name="kbsection" value="shared/taint.streams.jkb"/>
                <parameter name="kbsection" value="shared/taint.dom.jkb"/>
                <parameter name="kbsection" value="shared/taint.http.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.gwt.GWTFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.struts.StrutsFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.nullcheck.NullCheckFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.arrays.ArraysPropFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.PropFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.int_ovf.InrOvfFragment"/>
            </error>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.PASSWD.PLAIN">
            <error enabled="true" id="SV.PASSWD.PLAIN" message="Password used at {0} was obtained from {1}. This means password was stored or transmitted in plain-text, unless external encryption applied (such as SSL)" severity="2" title="Plain-text Password" upkid="352">
                <parameter name="kbsection" value="shared/taint.streams.jkb"/>
                <parameter name="kbsection" value="shared/taint.dom.jkb"/>
                <parameter name="kbsection" value="shared/taint.http.jkb"/>
                <parameter name="kbsection" value="shared/passwdsinks.jkb"/>
                <parameter name="kbsection" value="sv.passwd.plain.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.gwt.GWTFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.hc.HCSinkFragment"/>
            </error>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.PASSWD.HC">
            <error enabled="true" id="SV.PASSWD.HC" message="String {2} used as a password or its part: source code is bad storage for secrets." severity="2" title="Hardcoded Password" upkid="350">
                <parameter name="kbsection" value="shared/passwdsinks.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.hc.HCSinkFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.hc.HCFragment"/>
            </error>
            <error enabled="true" id="SV.PASSWD.HC.EMPTY" message="String {2} used as password or its part: leaving empty password in application is major security hole" severity="2" title="Empty Password" upkid="351">
                <parameter name="kbsection" value="sv.passwd.hc.empty.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.hc.HCEmptyFragment"/>
            </error>
            <parameter name="kbsection" value="shared/numberprop.jkb"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.DOS.ARRINDEX">
            <error enabled="true" id="SV.DOS.ARRINDEX" message="Unvalidated user input {1} used for array index - attacker can specify a large number leading to ArrayOutOfBounds exception and a DOS attack." severity="3" title="Tainted index used for array access" upkid="310">
                <parameter name="kbsection" value="sv.dos.arrindex.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.arr.ArrIndexFragment"/>
            </error>
            <error enabled="true" id="SV.DOS.ARRSIZE" message="Unvalidated user input {1} used for array size - attacker can specify a large number leading to high resource usage on the server and a DOS attack." severity="1" title="Tainted size used for array allocation" upkid="311">
                <parameter name="kbsection" value="sv.dos.arrsize.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.arr.ArrSizeFragment"/>
            </error>
            <parameter name="kbsection" value="shared/ioprop.jkb"/>
            <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
            <parameter name="kbsection" value="shared/numberprop.jkb"/>
            <parameter name="kbsection" value="shared/taint.streams.jkb"/>
            <parameter name="kbsection" value="shared/taint.dom.jkb"/>
            <parameter name="kbsection" value="shared/taint.http.jkb"/>
            <parameter name="kbsection" value="shared/taint.sck.jkb"/>
            <parameter name="kbsection" value="shared/taint.soap.jkb"/>
            <parameter name="kbsection" value="shared/taint.struts.jkb"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.gwt.GWTFragment"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.struts.StrutsFragment"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.HTTP_SPLIT">
            <error enabled="true" id="SV.HTTP_SPLIT" message="Unvalidated user input {1} is used as part of the http header - can be used for an Http Response Splitting attack." severity="1" title="Http Response Splitting" upkid="340">
                <parameter name="kbsection" value="shared/taint.sck.jkb"/>
                <parameter name="kbsection" value="shared/taint.struts.jkb"/>
                <parameter name="kbsection" value="shared/taint.dbsource.jkb"/>
                <parameter name="kbsection" value="shared/taint.soap.jkb"/>
                <parameter name="kbsection" value="shared/taint.streams.jkb"/>
                <parameter name="kbsection" value="shared/taint.dom.jkb"/>
                <parameter name="kbsection" value="shared/ioprop.jkb"/>
                <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
                <parameter name="kbsection" value="shared/taint.http.jkb"/>
                <parameter name="kbsection" value="sv.http_split.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.gwt.GWTFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.struts.StrutsFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
            </error>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.PATH">
            <error enabled="true" id="SV.PATH" message="Unvalidated user input {1} is being used for all or part of a path or file name leading to a possible Path Injection attack." severity="2" title="Path and file name injection" upkid="353">
                <parameter name="kbsection" value="sv.path.jkb"/>
            </error>
            <error enabled="true" id="SV.PATH.INJ" message="Unvalidated user input {1} being used as a name to create a file or directory. This can be used to inject information in an arbitrary file on the server." severity="1" title="File injection" upkid="354">
                <parameter name="kbsection" value="sv.path.inj.jkb"/>
            </error>
            <error enabled="true" id="SV.TMPFILE" message="Unvalidated user input {1} is being used for a temporary file name. This can be used to create temporary files in arbitrary locations allowing access escalation or denial of service." severity="2" title="Temporary file path tampering" upkid="394">
                <parameter name="kbsection" value="sv.tmpfile.jkb"/>
            </error>
            <parameter name="kbsection" value="shared/taint.struts.jkb"/>
            <parameter name="kbsection" value="shared/fileprop.jkb"/>
            <parameter name="kbsection" value="shared/ioprop.jkb"/>
            <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
            <parameter name="kbsection" value="shared/taint.dbsource.jkb"/>
            <parameter name="kbsection" value="shared/taint.streams.jkb"/>
            <parameter name="kbsection" value="shared/taint.zip.jkb"/>
            <parameter name="kbsection" value="shared/taint.dom.jkb"/>
            <parameter name="kbsection" value="shared/taint.http.jkb"/>
            <parameter name="kbsection" value="shared/taint.sck.jkb"/>
            <parameter name="kbsection" value="shared/taint.soap.jkb"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.gwt.GWTFragment"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.struts.StrutsFragment"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.XSS">
            <error enabled="true" id="SV.XSS.DB" message="Cross Site Scripting (Stored XSS) vulnerability: unvalidated user input {1} stored in the database is used for web application output." severity="1" title="Cross Site Scripting (Stored XSS)" upkid="410">
                <parameter name="kbsection" value="shared/taint.dbsource.jkb"/>
            </error>
            <error enabled="true" id="SV.XSS.REF" message="Cross Site Scripting (Reflected XSS) vulnerability: unvalidated user input {1} is used for web application output." severity="1" title="Cross Site Scripting (Reflected XSS)" upkid="411">
                <parameter name="kbsection" value="shared/taint.struts.jkb"/>
                <parameter name="kbsection" value="shared/taint.sck.jkb"/>
                <parameter name="kbsection" value="shared/taint.soap.jkb"/>
                <parameter name="kbsection" value="shared/taint.dom.jkb"/>
                <parameter name="kbsection" value="shared/taint.http.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.gwt.GWTFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.struts.StrutsFragment"/>
            </error>
            <parameter name="kbsection" value="shared/xss.jkb"/>
            <parameter name="kbsection" value="shared/exceptionprop.jkb"/>
            <parameter name="kbsection" value="shared/ioprop.jkb"/>
            <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
            <parameter name="kbsection" value="shared/fileprop.jkb"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.xss.XSSKBFragment"/>
            <parameter name="pathListener" value="com.klocwork.jdefects.checkers.dfa.sourcesink.xss.PathAnalyzerListener"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.IL.FILE">
            <error enabled="true" id="SV.IL.FILE" message="File name from {1} leaking through {0}. This is sensitive information that can be used by an attacker to predict the location of other files to achieve unauthorized access." severity="1" title="File Name Leaking" upkid="342">
                <parameter name="kbsection" value="sv.il.file.jkb"/>
            </error>
            <parameter name="kbsection" value="shared/exceptionprop.jkb"/>
            <parameter name="kbsection" value="shared/xss.jkb"/>
            <parameter name="kbsection" value="shared/fileprop.jkb"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.xss.XSSKBFragment"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.IL.DEV">
            <error enabled="true" id="SV.IL.DEV" message="Application is revealing design information {0} back to the web interface. Design information leakage can reveal important clues to attackers." severity="3" title="Design information leakage" upkid="341">
                <parameter name="kbsection" value="sv.il.dev.jkb"/>
                <parameter name="kbsection" value="sysinfo.jkb"/>
            </error>
            <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
            <parameter name="kbsection" value="shared/exceptionprop.jkb"/>
            <parameter name="kbsection" value="shared/xss.jkb"/>
            <parameter name="kbsection" value="shared/fileprop.jkb"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.xss.XSSKBFragment"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.SQL.INJECTION">
            <error enabled="true" id="SV.SQL" message="Unchecked user input {1} is used in SQL statements executed on the database. This can be exploited to inject arbitrary SQL statements." severity="1" title="Sql Injection" upkid="369">
                <parameter name="kbsection" value="shared/taint.struts.jkb"/>
                <parameter name="kbsection" value="shared/taint.awt.jkb"/>
                <parameter name="kbsection" value="shared/taint.swing.jkb"/>
                <parameter name="kbsection" value="shared/taint.soap.jkb"/>
                <parameter name="kbsection" value="shared/taint.sck.jkb"/>
                <parameter name="kbsection" value="shared/taint.streams.jkb"/>
                <parameter name="kbsection" value="shared/taint.dom.jkb"/>
                <parameter name="kbsection" value="shared/taint.http.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.gwt.GWTFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.struts.StrutsFragment"/>
            </error>
            <error enabled="true" id="SV.SQL.DBSOURCE" message="Unchecked information {1} from the database is used in SQL statements executed on the same or another database. This can be exploited to inject arbitrary SQL statements." severity="3" title="Unchecked information from the database is used in SQL statements" upkid="370">
                <parameter name="kbsection" value="shared/taint.dbsource.jkb"/>
            </error>
            <parameter name="kbsection" value="sv.sql.jkb"/>
            <parameter name="kbsection" value="shared/fileprop.jkb"/>
            <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
            <parameter name="kbsection" value="shared/ioprop.jkb"/>
            <parameter name="kbsection" value="shared/sql.prop.jkb"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.DATA.DB">
            <error enabled="true" id="SV.DATA.DB" message="Data {1} coming from an untrusted source is stored in the database without validation. This can be used for indirect SQL code injections, stored XSS attacks or to compromise data integrity." severity="3" title="Data injection" upkid="309">
                <parameter name="kbsection" value="shared/taint.struts.jkb"/>
                <parameter name="kbsection" value="shared/fileprop.jkb"/>
                <parameter name="kbsection" value="shared/taint.awt.jkb"/>
                <parameter name="kbsection" value="shared/taint.swing.jkb"/>
                <parameter name="kbsection" value="shared/taint.sck.jkb"/>
                <parameter name="kbsection" value="shared/taint.soap.jkb"/>
                <parameter name="kbsection" value="shared/ioprop.jkb"/>
                <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
                <parameter name="kbsection" value="shared/taint.streams.jkb"/>
                <parameter name="kbsection" value="shared/taint.dom.jkb"/>
                <parameter name="kbsection" value="shared/taint.http.jkb"/>
                <parameter name="kbsection" value="shared/sql.prop.jkb"/>
                <parameter name="kbsection" value="sv.data.db.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.gwt.GWTFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.struts.StrutsFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
            </error>
            <error enabled="true" id="SV.DATA.BOUND" message="Unvalidated user input from {1} stored at {0}. This is considered to be trusted storage and its users might not perform data validation extracting from it" severity="4" title="Untrusted Data leaks into trusted storage" upkid="308">
                <parameter name="kbsection" value="sv.data.bound.jkb"/>
            </error>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.EXEC">
            <error enabled="true" id="SV.EXEC" message="Unvalidated user input {1} is being used for all or part of the command used for process creation. The server is vulnerable to dangerous command execution by attackers." severity="1" title="Process Injection" upkid="315">
                <parameter name="kbsection" value="shared/taint.struts.jkb"/>
                <parameter name="kbsection" value="shared/fileprop.jkb"/>
                <parameter name="kbsection" value="shared/ioprop.jkb"/>
                <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
                <parameter name="kbsection" value="shared/taint.dbsource.jkb"/>
                <parameter name="kbsection" value="shared/taint.streams.jkb"/>
                <parameter name="kbsection" value="shared/taint.zip.jkb"/>
                <parameter name="kbsection" value="shared/taint.dom.jkb"/>
                <parameter name="kbsection" value="shared/taint.http.jkb"/>
                <parameter name="kbsection" value="shared/taint.sck.jkb"/>
                <parameter name="kbsection" value="shared/taint.soap.jkb"/>
                <parameter name="kbsection" value="sv.exec.jkb"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.gwt.GWTFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.struts.StrutsFragment"/>
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
            </error>
            <error enabled="true" id="SV.EXEC.DIR" message="Unvalidated user input {0} from {1} is being used for all or part of the directory used for process creation. Attacker may modify the starting directory for command execution." severity="1" title="Process Injection. Working Directory" upkid="316">
                <parameter name="kbsection" value="sv.exec.dir.jkb"/>
            </error>
            <error enabled="true" id="SV.EXEC.ENV" message="Unvalidated user input {0} from {1} is being used for all or part of a host system environment variable. Attacker may change environment variables to modify behavior of the application" severity="1" title="Process Injection. Environment Variables" upkid="317">
                <parameter name="kbsection" value="sv.exec.env.jkb"/>
            </error>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.dfa.sourcesink.SVChecker" id="SV.TAINT">
            <error enabled="false" id="SV.TAINT" message="Unvalidated user input {0} from {1}. Potential tainted data vulnerability. Unchecked user data entering a security-sensitive method." severity="3" title="Tainted data" upkid="384">
                <parameter name="kbsection" value="sv.taint.jkb"/>
            </error>
            <error enabled="true" id="SV.TAINT_NATIVE" message="Tainted data {1} goes to native code calls which can have BufferOverflows and other critical errors" severity="2" title="Tainted data goes to native code" upkid="393">
                <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.taint_native.NativeFragment"/>
            </error>
            <error enabled="true" id="SV.LOG_FORGING" message="Unvalidated user input goes into {0} from {1}. This allows log forging - possibility to manipulate log records in advantage of the attacker." severity="5" title="Log Forging" upkid="347">
                <parameter name="kbsection" value="sv.log_forging.jkb"/>
            </error>
            <error enabled="true" id="SV.EMAIL" message="Unvalidated user input {1} is used as an e-mail address. The address could contain arbitrary MIME content." severity="1" title="Unchecked e-mail" upkid="314">
                <parameter name="kbsection" value="sv.email.jkb"/>
            </error>
            <error enabled="true" id="SV.LDAP" message="Unvalidated user input {0} from {1} is used as LDAP filter. This filter could contain arbitrary content." severity="1" title="Unvalidated user input is used as LDAP filter" upkid="346">
                <parameter name="kbsection" value="sv.ldap.jkb"/>
            </error>
            <error enabled="true" id="SV.XPATH" message="Unvalidated user input {0} from {1} is used as an XPath expression." severity="3" title="Unvalidated user input is used as an XPath expression" upkid="409">
                <parameter name="kbsection" value="sv.xpath.jkb"/>
            </error>
            <parameter name="kbsection" value="shared/taint.struts.jkb"/>
            <parameter name="kbsection" value="shared/fileprop.jkb"/>
            <parameter name="kbsection" value="shared/ioprop.jkb"/>
            <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
            <parameter name="kbsection" value="shared/taint.streams.jkb"/>
            <parameter name="kbsection" value="shared/taint.zip.jkb"/>
            <parameter name="kbsection" value="shared/taint.dom.jkb"/>
            <parameter name="kbsection" value="shared/taint.http.jkb"/>
            <parameter name="kbsection" value="shared/taint.sck.jkb"/>
            <parameter name="kbsection" value="shared/taint.soap.jkb"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.gwt.GWTFragment"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.struts.StrutsFragment"/>
            <parameter name="kbfragment" value="com.klocwork.jdefects.checkers.dfa.sourcesink.shared.constant.ConstantEqualityFragment"/>
        </checker>
    </checkergroup>
    <checkergroup api="tree" directory="" language="Java">
        <checker class="com.klocwork.jdefects.checkers.ast.CMP_OBJ" id="CMP.OBJ">
            <error enabled="true" id="CMP.OBJ" message="Comparing objects '{0}' and '{1}' with ==" severity="9" title="Comparing objects with ==" upkid="47"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.CMP_STR" id="CMP.STR">
            <error enabled="true" id="CMP.STR" message="Comparing strings '{0}' and '{1}' with ==" severity="5" title="Comparing strings with ==" upkid="48"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.CMPF_FLOAT" id="CMPF.FLOAT">
            <error enabled="true" id="CMPF.FLOAT" message="Equality checks on floating point types should be avoided" severity="6" title="Equality checks on floating point types should be avoided" upkid="49"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.ECC_EMPTY" id="ECC.EMPTY">
            <error enabled="true" id="ECC.EMPTY" message="Empty catch clause" severity="5" title="Empty catch clause" upkid="122"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.COV_CMP" id="COV.CMP">
            <error enabled="true" id="COV.CMP" message="Method compareTo(..) should have signature 'public int compareTo(Object)'" severity="6" title="Method compareTo() should have signature 'public int compareTo(Object)'" upkid="53"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.EHC_EQ" id="EHC.EQ">
            <error enabled="true" id="EHC.EQ" message="Class defines hashCode() but does not define equals()" severity="6" title="Class defines hashCode() but does not define equals()" upkid="124"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.EHC_HASH" id="EHC.HASH">
            <error enabled="true" id="EHC.HASH" message="Class defines equals() but does not define hashCode()" severity="6" title="Class defines equals() but does not define hashCode()" upkid="125"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.ESCMP_EMPTYSTR" id="ESCMP.EMPTYSTR">
            <error enabled="true" id="ESCMP.EMPTYSTR" message="Comparing strings {0} and {1} using equals(), instead of length() == 0" severity="7" title="Inefficient empty string comparison" upkid="126"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.EXC_BROADTHROWS" id="EXC.BROADTHROWS">
            <error enabled="true" id="EXC.BROADTHROWS" message="The '{0}' method throws a generic exception '{1}'" severity="8" title="Method has an overly broad throws declaration" upkid="127"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.FIN_EMPTY" id="FIN.EMPTY">
            <error enabled="true" id="FIN.EMPTY" message="Empty finalize() method should be removed" severity="7" title="Empty finalize() method should be removed" upkid="128"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_BIT" id="JD.BIT">
            <error enabled="true" id="JD.BITCMP" message="Questionable use of bit operation '{0}' in expression. Did you mean '{1}'?" severity="2" title="Using non short-circuit logic in expression" upkid="151"/>
            <error enabled="true" id="JD.BITMASK" message="Incompatible bitmasks '{0}' and '{1}' cause the expression to always be '{2}'." severity="2" title="Possible error in bit operations" upkid="152"/>
            <error enabled="true" id="JD.BITR" message="Expression '{0}' is always '{1}'. Is there a typo?" severity="2" title="Redundant expression" upkid="153"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_IFBAD" id="JD.IFBAD">
            <error enabled="true" id="JD.IFBAD" message="Redundant 'if' statement. The cause is probably a misplaced semicolon." severity="2" title="Redundant 'if' statement" upkid="165"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_IFEMPTY" id="JD.IFEMPTY">
            <error enabled="true" id="JD.IFEMPTY" message="Redundant 'if' statement. This may be unfinished code." severity="6" title="Redundant 'if' statement. Unfinished code" upkid="166"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_CALL_WRONGSTATIC" id="JD.CALL.WRONGSTATIC">
            <error enabled="true" id="JD.CALL.WRONGSTATIC" message="Call to static method '{0}' via instance reference." severity="6" title="Call to static method via instance reference" upkid="154"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_THREAD_RUN" id="JD.THREAD.RUN">
            <error enabled="true" id="JD.THREAD.RUN" message="There is a call to the 'Thread.run()' method. This method is not meant to be called explicitly. Should probably be replaced with 'Thread.start()'?" severity="4" title="Explicit call to a 'Thread.run' method" upkid="181"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.FSC" id="FSC">
            <error enabled="false" id="FSC.PUB" message="Class '{0}' hides field '{2}' of superclass '{1}' by declaring a public field with the same name" severity="6" title="Class and its superclass have public fields with the same name" upkid="137"/>
            <error enabled="false" id="FSC.PRT" message="Class '{0}' hides field '{2}' of superclass '{1}' by declaring a protected or package-private field with the same name" severity="9" title="Class and its superclass have protected fields with the same name" upkid="135"/>
            <error enabled="false" id="FSC.PRV" message="Class '{0}' hides field '{2}' of superclass '{1}' by declaring a private field with the same name" severity="9" title="Class and its superclass have private fields with the same name" upkid="136"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_CATCH" id="JD.CATCH">
            <error enabled="true" id="JD.CATCH" message="Catching '{0}' explicitly is usually a bad practice. Use preventive checks on data instead." severity="5" title="Catching runtime exception" upkid="159"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_EQ" id="JD.EQ">
            <error enabled="true" id="JD.EQ.ARR" message="Comparison of arrays using the 'equals' method. For arrays, 'equals' compares the identities of the two arrays - not the values of the array contents. Should probably be replaced with java.util.Arrays.equals(...) call." severity="2" title="Calling 'equals' on array" upkid="161"/>
            <error enabled="true" id="JD.EQ.UTA" message="Comparing an array with a non-array type always returns false." severity="2" title="Calling 'equals' on incompatible types (array and non-array)" upkid="162"/>
            <error enabled="true" id="JD.EQ.UTC" message="Calling equals on incompatible types '{0}' and '{1}'." severity="2" title="Calling equals on incompatible types" upkid="163"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_INST_TRUE" id="JD.INST.TRUE">
            <error enabled="true" id="JD.INST.TRUE" message="Condition '{0}' is redundant and can be replaced with '!=null'." severity="6" title=" Redundant 'instanceof' condition" upkid="168"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.RI_IGNORED" id="RI.IGNORED">
            <error enabled="true" id="RI.IGNOREDCALL" message="The value returned by '{0}.{1}()' is ignored" severity="3" title="The value returned by a method called on immutable object is ignored" upkid="261"/>
            <error enabled="true" id="RI.IGNOREDNEW" message="Newly created object of type '{0}' is ignored" severity="3" title="Newly created object is ignored" upkid="262"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.RR_IGNORED" id="RR.IGNORED">
            <error enabled="true" id="RR.IGNORED" message="The value returned by '{0}'() method is ignored" severity="3" title="The returned value is ignored" upkid="281"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.MNA" id="MNA">
            <error enabled="true" id="MNA.CAP" message="Method name should start with non-capital letter '{0}'" severity="8" title="Method name should start with non-capital letter" upkid="199"/>
            <error enabled="true" id="MNA.SUS" message="Suspicious method name '{0}', did you mean '{1}'?" severity="2" title="Suspicious method name" upkid="201"/>
            <error enabled="true" id="MNA.CNS" message="Suspicious method name '{0}', same as constructor name but it is not a constructor because it has return type" severity="1" title="Method name is same as constructor name but it is not a constructor" upkid="200"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.UC_BOOL" id="UC.BOOL">
            <error enabled="true" id="UC.BOOLS" message="Unnecessary object creation, new Boolean(string expression) method can be replaced with Boolean.valueOf(string expression)" severity="7" title="Unnecessary creation of new Boolean object from a string expression" upkid="416"/>
            <error enabled="true" id="UC.BOOLB" message="Unnecessary object creation, new Boolean(boolean expression) method can be replaced with Boolean.valueOf(boolean expression), or with singletons Boolean.TRUE and Boolean.FALSE" severity="7" title="Unnecessary creation of new Boolean object from a boolean expression" upkid="415"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.UC_STR" id="UC.STR">
            <error enabled="true" id="UC.STRS" message="Unnecessary object creation, new String(string expression) method can be replaced with string expression" severity="7" title="Unnecessary creation of new String object from a string expression" upkid="417"/>
            <error enabled="true" id="UC.STRV" message="Unnecessary object creation, new String() method can be replaced with empty string" severity="7" title="Unnecessary creation of empty String object" upkid="418"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.UMC_TOSTRING" id="UMC.TOSTRING">
            <error enabled="true" id="UMC.TOSTRING" message="Unnecessary toString() method is called for String argument. Use argument instead" severity="7" title="Unnecessary toString() method called for a String argument" upkid="442"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_FINRET" id="JD.FINRET">
            <error enabled="true" id="JD.FINRET" message="A 'return' in a finally block can cause exceptions to be ignored." severity="4" title="Return inside finally" upkid="164"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_LIST_ADD" id="JD.LIST.ADD">
            <error enabled="true" id="JD.LIST.ADD" message="Container '{1}' calls '{0}' with itself as an argument. This code does nothing, or there is simpler way to do it. Probably a typo." severity="2" title="Container added to itself" upkid="169"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.SV_RANDOM" id="SV.RANDOM">
            <error enabled="true" id="SV.RANDOM" message="Use of insecure Random number generator '{0}'" severity="9" title="Use of insecure Random number generator" upkid="360"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.FIN_NOSUPER" id="FIN.NOSUPER">
            <error enabled="true" id="FIN.NOSUPER" message="Implementation of the finalize() method should call super.finalize()" severity="4" title="Implementation of the finalize() method should call super.finalize()" upkid="129"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.RTC_CALL" id="RTC.CALL">
            <error enabled="true" id="RTC.CALL" message="Type cast from '{0}' to '{1}' is redundant because method '{3}' is defined in '{2}'" severity="7" title="Type cast is redundant" upkid="282"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_ST_POS" id="JD.ST.POS">
            <error enabled="true" id="JD.ST.POS" message="Result of method '{0}' should be checked for >=0 or &lt;0 instead of >0." severity="4" title="Incorrect check for method 'indexOf'" upkid="178"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_UN_METHOD" id="JD.UN.METHOD">
            <error enabled="false" id="JD.UN.MET" message="Method '{0}()' is never called in the analyzed context." severity="7" title="Unused non-private method" upkid="185"/>
            <error enabled="true" id="JD.UN.PMET" message="Private method '{0}' is unused." severity="6" title="Unused private method" upkid="186"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_UNCAUGHT" id="JD.UNCAUGHT">
            <error enabled="true" id="JD.UNCAUGHT" message="Method '{0}' does not catch exceptions '{1}'." severity="6" title="Uncaught exception" upkid="187"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_CAST" id="JD.CAST">
            <error enabled="true" id="JD.CAST.UPCAST" message="Suspicious cast of '{0}' to '{2}', where '{2}' is a subtype of '{1}'. This object can hold other subtypes of '{1}' which can cause a ClassCastException." severity="6" title="Possible ClassCastException for subtypes" upkid="158"/>
            <error enabled="true" id="JD.CAST.SUSP" message="Suspicious cast of '{0}' from '{1}' to '{2}', where types are unrelated." severity="4" title="Possible ClassCastException for different types" upkid="157"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_LOCK" id="JD.LOCK">
            <error enabled="true" id="JD.LOCK.SLEEP" message="Calling '{1}' with locks '{0}' held could cause a deadlock." severity="4" title="Method 'sleep' called with locks held" upkid="172"/>
            <error enabled="true" id="JD.LOCK.WAIT" message="Calling '{1}' with two or more locks held '{0}' could cause a deadlock." severity="4" title="Method 'wait' called with locks held" upkid="173"/>
            <error enabled="true" id="JD.LOCK.NOTIFY" message="Calling '{1}' with two or more locks held '{0}' could cause a deadlock." severity="4" title="Method 'notify' called with locks held" upkid="171"/>
            <error enabled="true" id="JD.SYNC.IN" message="Field '{0}' synchronized inconsistently." severity="6" title="Inconsistent synchronization" upkid="180"/>
            <error enabled="true" id="SV.SHARED.VAR" message="Unsynchronized access to static variable '{0}' accessible from servlet code" severity="3" title="Unsynchronized access to static variable from servlet" upkid="367"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.REDUN" id="REDUN">
            <error enabled="true" id="REDUN.EQ" message="Suspicious equals() called with '{0}' on both sides" severity="2" title="Suspicious equals() called with same expression on both sides" upkid="253"/>
            <error enabled="true" id="REDUN.EQNULL" message="Suspicious equals() called with '{0}' and null (never true)" severity="2" title="Suspicious equals() called with expression and null (never true)" upkid="254"/>
            <error enabled="true" id="REDUN.OP" message="Suspicious operation with '{0}' on both sides" severity="2" title="Suspicious operation with same expression on both sides" upkid="257"/>
            <error enabled="true" id="REDUN.DEF" message="Assignment of '{0}' to itself" severity="2" title="Assignment of expression to itself" upkid="252"/>
            <error enabled="true" id="REDUN.FINAL" message="Redundant 'final' modifier" severity="10" title="Redundant 'final' modifier" upkid="255"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.SYNCH_NESTED" id="SYNCH.NESTED">
            <error enabled="true" id="SYNCH.NESTED" message="Synchronized method calls another synchronized method '{0}' with the same lock held" severity="7" title="Synchronized method calls another synchronized method with the same lock held" upkid="413"/>
            <error enabled="true" id="SYNCH.NESTEDS" message="Synchronized static method calls another synchronized static method '{0}' with the same lock held" severity="7" title="Synchronized static method calls another synchronized static method with the same lock held" upkid="414"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.STRCON_LOOP" id="STRCON.LOOP">
            <error enabled="true" id="STRCON.LOOP" message="Using append for string '{0}' in a loop" severity="7" title="Using append for string in a loop" upkid="284"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_CAST_COL" id="JD.CAST.COL">
            <error enabled="true" id="JD.CAST.COL" message="Suspicious cast to '{0}' of collection element. Object was put into the collection as '{1}'." severity="3" title="Possible ClassCastException for collection" upkid="155"/>
            <error enabled="true" id="JD.CAST.KEY" message="Suspicious key of type '{0}' used to retrieve a collection element. Object was put into the collection with key of type '{1}'." severity="6" title="Suspicious key type used to retrieve an element from collection" upkid="156"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.SV_SERIAL" id="SV.SERIAL">
            <error enabled="false" id="SV.SERIAL.NOREAD" message="Class '{0}' implements 'java.io.Serializable', but method 'private void readObject(java.io.ObjectInputStream in) throws IOException, ClassNotFoundException' is not defined" severity="10" title="Method readObject() should be defined for a serializable class" upkid="364"/>
            <error enabled="false" id="SV.SERIAL.NOWRITE" message="Class '{0}' implements 'java.io.Serializable', but method 'private void writeObject(java.io.ObjectOutputStream out) throws IOException' is not defined" severity="10" title="Method writeObject() should be defined for a serializable class" upkid="365"/>
            <error enabled="false" id="SV.SERIAL.SIG" message="Class '{0}' implements 'java.io.Serializable', but method '{1}' '{2}'" severity="10" title="Methods readObject() and writeObject() in serializable classes should have correct signature" upkid="366"/>
            <error enabled="false" id="SV.SERIAL.INON" message="Interface '{0}' extends 'java.io.Serializable'." severity="10" title="Interface extends 'Serializable'" upkid="362"/>
            <error enabled="false" id="SV.SERIAL.NON" message="Class '{0}' implements 'java.io.Serializable'." severity="10" title="Class implements 'Serializable'" upkid="363"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.RNU_THIS" id="RNU.THIS">
            <error enabled="true" id="RNU.THIS" message="Compare this and null but this cannot be null" severity="5" title="Compare this and null but this cannot be null" upkid="280"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_OVER" id="JD.OVER">
            <error enabled="true" id="JD.OVER" message="Possible incorrect override for method '{0}'. Maybe '{1}' from class '{2}' is what was intended to be overridden." severity="8" title="Mismatched override" upkid="175"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_INF_AREC" id="JD.INF.AREC">
            <error enabled="true" id="JD.INF.AREC" message="Apparent infinite recursion by calling '{0}' from itself" severity="4" title="Apparent infinite recursion" upkid="167"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.SV_CLLOADER" id="SV.CLLOADER">
            <error enabled="false" id="SV.CLLOADER" message="Classloader is used directly '{0}'" severity="9" title="Direct use of Classloader" upkid="304"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.SV_EXPOSE" id="SV.EXPOSE">
            <error enabled="false" id="SV.EXPOSE.FIN" message="Method finalize() should have protected access modifier, not public" severity="6" title="Method finalize() should have protected access modifier, not public" upkid="319"/>
            <error enabled="false" id="SV.EXPOSE.FIELD" message="Non-final public or protected static field '{0}' could be changed by malicious code or by accident from another package." severity="4" title="Static field may be changed by malicious code" upkid="318"/>
            <error enabled="false" id="SV.EXPOSE.IFIELD" message="Non-final public instance field '{0}' could be changed by malicious code or by accident." severity="9" title="Instance field should be made final" upkid="320"/>
            <error enabled="false" id="SV.EXPOSE.MUTABLEFIELD" message="Public or protected static final field '{0}' references a mutable object of type '{1}'. This object could be changed by malicious code or by accident from another package" severity="5" title="Static mutable field can be accessed by malicious code" upkid="321"/>
            <error enabled="false" id="SV.EXPOSE.RET" message="Method returns reference to mutable object '{0}'. Internal state of object can be modified by malicious user." severity="6" title="Internal representation may be exposed" upkid="322"/>
            <error enabled="false" id="SV.EXPOSE.STORE" message="Method stores reference to mutable object '{0}'. Internal state of object can be modified by malicious user." severity="6" title="Method stores reference to mutable object" upkid="323"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.CMP_CLASS" id="CMP.CLASS">
            <error enabled="false" id="CMP.CLASS" message="Comparing by classname" severity="6" title="Comparing by classname" upkid="46"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.UMC" id="UMC">
            <error enabled="false" id="UMC.SYSERR" message="Debug print using System.err method calls is unwanted" severity="9" title="Debug print using System.err method calls is unwanted" upkid="440"/>
            <error enabled="false" id="UMC.SYSOUT" message="Debug print using System.out method calls is unwanted" severity="9" title="Debug print using System.out method calls is unwanted" upkid="441"/>
            <error enabled="true" id="JD.UMC.RUNFIN" message="There is a call to method '{0}'. This method is inherently unsafe." severity="2" title="runFinalizersOnExit() is called" upkid="183"/>
            <error enabled="true" id="JD.UMC.FINALIZE" message="There is a call to a 'finalize()' method. This method is not intended to be called explicitly." severity="6" title="Explicit call to method 'Object.finalize'" upkid="182"/>
            <error enabled="true" id="JD.UMC.WAIT" message="There is a call to method '{0}'. Should use method '{1}' instead." severity="2" title="Wait called on incorrect object" upkid="184"/>
            <error enabled="false" id="SV.UMC.THREADS" message="Method '{0}' is used. Thread management is deprecated in many cases (e.g. in EJBs). Also, it is always highly error prone" severity="10" title="Bad practices: use of thread management" upkid="398"/>
            <error enabled="false" id="SV.SOCKETS" message="Using sockets directly should be avoided in many cases (e.g. in Applets, EJBs). This might cause security problems" severity="10" title="Bad practices: use of sockets" upkid="368"/>
            <error enabled="false" id="SV.UMC.EXIT" message="'{0}()' method call should not be used in servlets code" severity="9" title="The System.exit() and Runtime.exit() method calls should not be used in servlets code" upkid="396"/>
            <error enabled="false" id="UMC.EXIT" message="The System.exit() method call is unwanted" severity="9" title="The System.exit() method call is unwanted" upkid="438"/>
            <error enabled="false" id="UMC.GC" message="The System.gc() method call is unwanted" severity="9" title="The System.gc() method call is unwanted" upkid="439"/>
            <error enabled="false" id="SV.USE.POLICY" message="Method '{0}' from '{1}' is used directly." severity="9" title="Direct use methods of Policy" upkid="407"/>
            <error enabled="false" id="SV.UMC.JDBC" message="Application should avoid calling to DriverManager.getConnection() directly" severity="9" title="Application should avoid calling to DriverManager.getConnection() directly" upkid="397"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.SV_UMD_MAIN" id="SV.UMD.MAIN">
            <error enabled="false" id="SV.UMD.MAIN" message="The main() method definition provides entry point to application, remove all unused main methods." severity="9" title="Leftover debug code - main method" upkid="399"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.SV_CLEXT" id="SV.CLEXT">
            <error enabled="false" id="SV.CLEXT.CLLOADER" message="Class '{0}' extends '{1}'." severity="9" title="Class extends 'java.lang.ClassLoader'" upkid="302"/>
            <error enabled="false" id="SV.CLEXT.POLICY" message="Class '{0}' extends '{1}'." severity="9" title="Class extends 'java.security.Policy'" upkid="303"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.SV_CLONE_SUP" id="SV.CLONE">
            <error enabled="false" id="SV.CLONE.SUP" message="Class '{0}' implements 'clone' method but does not implement Cloneable, which makes Object clone implementation throw an exception" severity="9" title="Class implements 'clone' method but does not implement Cloneable" upkid="305"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.SV_STRUTS" id="SV.STRUTS">
            <error enabled="false" id="SV.STRUTS.VALIDMET" message="Struts: Form '{0}' does not have method 'validate' defined" severity="9" title="Struts Forms: validate method" upkid="382"/>
            <error enabled="false" id="SV.STRUTS.RESETMET" message="Struts: Form '{0}' does not have method 'reset' defined" severity="9" title="Struts Forms: reset method" upkid="380"/>
            <error enabled="false" id="SV.STRUTS.STATIC" message="Struts: Static form field variables '{0}' should be final" severity="9" title="Struts Forms: static fields" upkid="381"/>
            <error enabled="false" id="SV.STRUTS.PRIVATE" message="Struts: Form field '{0}' should be private" severity="9" title="Struts Forms: non-private fields" upkid="379"/>
            <error enabled="false" id="SV.STRUTS.NOTRESET" message="Struts: Form field '{1}' '{0}' is not reset by 'reset' method" severity="6" title="Struts Forms: inconsistent reset" upkid="377"/>
            <error enabled="false" id="SV.STRUTS.NOTVALID" message="Struts: Form field '{1}' '{0}' is not validated by 'validate' method" severity="5" title="Struts Forms: inconsistent validate" upkid="378"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_CONCUR" id="JD.CONCUR">
            <error enabled="true" id="JD.CONCUR" message="Possible 'ConcurrentModificationException' can be thrown by method '{0}' while iterating over '{1}'." severity="1" title="Possible ConcurrentModificationException" upkid="160"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.JD_SYNC_DCL" id="JD.SYNC.DCL">
            <error enabled="true" id="JD.SYNC.DCL" message="Double-checked locking for '{0}' -- idiom that does not achieve its goal." severity="6" title="Double-checked locking" upkid="179"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.RLK_FIELD" id="RLK.FIELD">
            <error enabled="true" id="RLK.FIELD" message="Possible leak of system resource '{0}' stored in field '{1}'. Resource is not closed in any of the class methods." severity="3" title="Possible leak of system resource stored in a field" upkid="264"/>
            <parameter name="kbsection" value="shared/out.stream.prop.jkb"/>
            <parameter name="kbsection" value="shared/in.stream.prop.jkb"/>
            <parameter name="kbsection" value="rlk/sqlcon.jkb"/>
            <parameter name="kbsection" value="rlk/sock.jkb"/>
            <parameter name="kbsection" value="rlk/in.jkb"/>
            <parameter name="kbsection" value="rlk/out.jkb"/>
            <parameter name="kbsection" value="rlk/nio.jkb"/>
            <parameter name="kbsection" value="rlk.jkb"/>
        </checker>
        <checker class="com.klocwork.jdefects.checkers.ast.npestatistics.StatisticsChecker" id="NPE.STATISTICS">
            <parameter name="enabledAlways" value="true"/>
        </checker>
    </checkergroup>
    <checkergroup api="preprocessor" directory="C:\Klocwork\User 9.2\plugins" id="PORTING.PREPROCESSOR" language="C/C++">
        <checker id="PORTING.PRAGMA">
            <error autogroupby="0" enabled="false" id="PORTING.PRAGMA.PACK" identification="" message="#pragma pack is used" severity="6" title="#pragma pack usage" upkid="241"/>
            <error autogroupby="0" enabled="false" id="PORTING.PRAGMA.ALIGN" identification="" message="#pragma align is used" severity="6" title="#pragma align usage" upkid="240"/>
        </checker>
        <checker id="PORTING.BSWAP.MACROS">
            <error autogroupby="0" enabled="false" id="PORTING.BSWAP.MACRO" identification="" message="A custom byte swap macro is used without checking endian" severity="6" title="A custom byte swap macro is used without checking endian" upkid="228"/>
        </checker>
        <checker id="PORTING.OPTS">
            <error enabled="false" id="PORTING.OPTS" identification="" message="{0} compiler option is used" severity="6" title="Compiler dependant option is used" upkid="239">
                <parameterlist name="option-macros-list">
                    <parameter name="KW_NO_RTTI" value="-fno-rtti"/>
                    <parameter name="KW_OPENMP" value="-fopenmp or -openmp"/>
                    <parameter name="KW_ARCH" value="-march=..."/>
                    <parameter name="KW_TUNE" value="-mtune=..."/>
                    <parameter name="KW_SOFT_FLOAT" value="-msoft-float"/>
                    <parameter name="KW_32" value="-m32"/>
                    <parameter name="KW_64" value="-m64"/>
                    <parameter name="KW_ALIGN" value="-align"/>
                </parameterlist>
            </error>
        </checker>
        <checker id="PORTING.MACRO">
            <error autogroupby="0" enabled="false" id="PORTING.MACRO.NUMTYPE" identification="" message="Macro describing a builtin numeric type is used" severity="6" title="Macro '{0}' describing a builtin numeric type is used" upkid="238">
                <parameterlist name="numtype-macros-list">
                    <parameter name="CHAR_BIT" value=""/>
                    <parameter name="CHAR_MAX" value=""/>
                    <parameter name="CHAR_MIN" value=""/>
                    <parameter name="MB_LEN_MAX" value=""/>
                    <parameter name="INT_MAX" value=""/>
                    <parameter name="INT_MIN" value=""/>
                    <parameter name="LONG_MAX" value=""/>
                    <parameter name="LONG_MIN" value=""/>
                    <parameter name="SCHAR_MAX" value=""/>
                    <parameter name="SCHAR_MIN" value=""/>
                    <parameter name="SHRT_MAX" value=""/>
                    <parameter name="SHRT_MIN" value=""/>
                    <parameter name="UCHAR_MAX" value=""/>
                    <parameter name="UINT_MAX" value=""/>
                    <parameter name="ULONG_MAX" value=""/>
                    <parameter name="USHRT_MAX" value=""/>
                    <parameter name="DBL_DIG" value=""/>
                    <parameter name="DBL_EPSILON" value=""/>
                    <parameter name="DBL_MANT_DIG" value=""/>
                    <parameter name="DBL_MAX" value=""/>
                    <parameter name="DBL_MAX_10_EXP" value=""/>
                    <parameter name="DBL_MAX_EXP" value=""/>
                    <parameter name="DBL_MIN" value=""/>
                    <parameter name="DBL_MIN_10_EXP" value=""/>
                    <parameter name="DBL_MIN_EXP" value=""/>
                    <parameter name="FLT_DIG" value=""/>
                    <parameter name="FLT_EPSILON" value=""/>
                    <parameter name="FLT_MANT_DIG" value=""/>
                    <parameter name="FLT_MAX" value=""/>
                    <parameter name="FLT_MAX_10_EXP" value=""/>
                    <parameter name="FLT_MAX_EXP" value=""/>
                    <parameter name="FLT_MIN" value=""/>
                    <parameter name="FLT_MIN_10_EXP" value=""/>
                    <parameter name="FLT_MIN_EXP" value=""/>
                    <parameter name="FLT_RADIX" value=""/>
                    <parameter name="FLT_ROUNDS" value=""/>
                    <parameter name="LDBL_DIG" value=""/>
                    <parameter name="LDBL_EPSILON" value=""/>
                    <parameter name="LDBL_MANT_DIG" value=""/>
                    <parameter name="LDBL_MAX" value=""/>
                    <parameter name="LDBL_MAX_10_EXP" value=""/>
                    <parameter name="LDBL_MAX_EXP" value=""/>
                    <parameter name="LDBL_MIN" value=""/>
                    <parameter name="LDBL_MIN_10_EXP" value=""/>
                    <parameter name="LDBL_MIN_EXP" value=""/>
                </parameterlist>
            </error>
        </checker>
    </checkergroup>
    <checkergroup api="preprocessor" directory="C:\Klocwork\User 9.2\plugins" id="_.UTILS" language="C/C++">
        <checker id="_.UTILS">
            <error enabled="false" hidden="true" id="_.ENDIAN.MACROS" identification="" message="" severity="8" title="_.ENDIAN.MACROS" upkid="457">
                <parameterlist name="endian-macros-list">
                    <parameter name="BIG_ENDIAN" value=""/>
                    <parameter name="LITTLE_ENDIAN" value=""/>
                </parameterlist>
            </error>
        </checker>
    </checkergroup>
    <checkergroup api="tree" directory="C:\Klocwork\User 9.2\plugins" id="builtin tree plugins" language="C/C++">
        <checker id="LA_UNUSED">
            <error autogroupby="0" enabled="false" id="LA_UNUSED" identification="0x020200;*" message="Label '{0}' is never used" severity="5" title="Label unused" upkid="191"/>
        </checker>
        <checker id="SEMICOL">
            <error enabled="false" id="SEMICOL" identification="" message="Suspiciously placed semicolon" severity="4" title="Suspiciously placed semicolon" upkid="283"/>
        </checker>
        <checker id="ASSIGCOND">
            <error enabled="false" id="ASSIGCOND.GEN" identification="" message="Assignment in condition" severity="4" title="Assignment in condition" upkid="20"/>
            <error enabled="false" id="ASSIGCOND.CALL" identification="" message="Assignment in condition, call" severity="4" title="Assignment in condition (call)" upkid="19"/>
        </checker>
    </checkergroup>
    <checkergroup api="path" directory="C:\Klocwork\User 9.2\plugins" id="builtin path plugins" language="C/C++">
        <checker id="RETURN">
            <error enabled="false" id="VOIDRET" identification="" message="void function returns value" severity="4" title="Void function returns value" upkid="456"/>
            <error enabled="false" id="RETVOID.GEN" identification="" message="Non-void function returns void value" severity="4" title="Non-void function returns void value" upkid="258"/>
            <error enabled="false" id="RETVOID.IMPLICIT" identification="" message="Implicitly non-void function returns void value" severity="4" title="Implicitly int function returns void value" upkid="259"/>
            <error enabled="false" id="FUNCRET.GEN" identification="" message="Non-void function does not return value" severity="3" title="Non-void function does not return value" upkid="140"/>
            <error enabled="false" id="FUNCRET.IMPLICIT" identification="" message="Function implicitly returning int does not return value" severity="4" title="Non-void function implicitly returning int does not return value" upkid="141"/>
        </checker>
        <checker id="NPDKB"/>
        <checker id="FREEKB"/>
        <checker id="ALLOCKB"/>
        <checker id="ABVKB"/>
        <checker id="GENERAL_KB"/>
        <checker id="READ"/>
        <checker id="WRITE"/>
        <checker id="READKB"/>
        <checker id="WRITEKB"/>
        <checker id="ByteOrderConversionKBGenerator"/>
        <checker id="NPD">
            <error autogroupby="0" enabled="true" id="NPD.GEN.MUST" identification="" message="Null pointer '{0}' that comes from line {1} will be dereferenced at line {2}." severity="1" title="Null pointer will be dereferenced" upkid="218">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="no"/>
            </error>
            <error autogroupby="0" enabled="true" id="NPD.GEN.MIGHT" identification="" message="Null pointer '{0}' that comes from line {1} may be dereferenced at line {2}." severity="1" title="Null pointer may be dereferenced" upkid="217">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="no"/>
            </error>
            <error autogroupby="0" enabled="true" id="NPD.GEN.CALL.MIGHT" identification="" message="Null pointer '{0}' that comes from line {1} may be passed to function and can be dereferenced there by passing argument {2} to function '{3}' at line {4}." severity="1" title="Null pointer may be passed to function that may dereference it" upkid="215">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="no"/>
            </error>
            <error autogroupby="0" enabled="true" id="NPD.GEN.CALL.MUST" identification="" message="Null pointer '{0}' that comes from line {1} will be passed to function and can be dereferenced there by passing argument {2} to function '{3}' at line {4}." severity="1" title="Null pointer will be passed to function that may dereference it" upkid="216">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="no"/>
            </error>
            <error autogroupby="0" enabled="false" id="NPD.FUNC.CALL.MUST" identification="" message="Pointer '{0}' returned from call to function '{1}' at line {2} may be NULL, will be passed to function and may be dereferenced there by passing argument {3} to function '{4}' at line {5}." severity="3" title="Result of function that may return NULL will be passed to another function that may dereference it" upkid="212">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="no"/>
            </error>
            <error autogroupby="0" enabled="false" id="NPD.FUNC.CALL.MIGHT" identification="" message="Pointer '{0}' returned from call to function '{1}' at line {2} may be NULL, may be passed to function and may be dereferenced there by passing argument {3} to function '{4}' at line {5}." severity="3" title="Result of function that may return NULL may be passed to another function that may dereference it" upkid="211">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="no"/>
            </error>
            <error autogroupby="0" enabled="true" id="NPD.CHECK.MUST" identification="" message="Pointer '{0}' checked for NULL at line {1} will be dereferenced at line {2}." severity="3" title="Pointer will be dereferenced after it was positively checked for NULL" upkid="208">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="yes"/>
            </error>
            <error autogroupby="0" enabled="true" id="NPD.CHECK.MIGHT" identification="" message="Pointer '{0}' checked for NULL at line {1} may be dereferenced at line {2}." severity="3" title="Pointer may be dereferenced after it was positively checked for NULL" upkid="207">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="yes"/>
            </error>
            <error autogroupby="0" enabled="true" id="NPD.CHECK.CALL.MIGHT" identification="" message="Pointer '{0}' checked for NULL at line {1} may be passed to function and may be dereferenced there by passing argument {2} to function '{3}' at line {4}." severity="3" title="Pointer may be passed to function that can dereference it after it was positively checked for NULL" upkid="205">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="yes"/>
            </error>
            <error autogroupby="0" enabled="true" id="NPD.CHECK.CALL.MUST" identification="" message="Pointer '{0}' checked for NULL at line {1} will be passed to function and may be dereferenced there by passing argument {2} to function '{3}' at line {4}." severity="3" title="Pointer will be passed to function that may dereference it after it was positively checked for NULL" upkid="206">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="yes"/>
            </error>
            <error autogroupby="0" enabled="true" id="NPD.FUNC.MUST" identification="" message="Pointer '{0}' returned from call to function '{1}' at line {2} may be NULL and will be dereferenced at line {3}." severity="3" title="Result of function that may return NULL will be dereferenced" upkid="214">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="no"/>
            </error>
            <error autogroupby="0" enabled="true" id="NPD.FUNC.MIGHT" identification="" message="Pointer '{0}' returned from call to function '{1}' at line {2} may be NULL and may be dereferenced at line {3}." severity="3" title="Result of function that can return NULL may be dereferenced" upkid="213">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="no"/>
            </error>
            <error enabled="false" id="NPD.CONST.DEREF" identification="" message="Constant NULL pointer is dereferenced at line {2}." severity="3" title="NULL is dereferenced" upkid="210">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="no"/>
            </error>
            <error enabled="false" id="NPD.CONST.CALL" identification="" message="Constant NULL may be dereferenced by passing argument {2} to function '{3}' at line {4}." severity="3" title="NULL is passed to function that can dereference it" upkid="209">
                <deplist>
                    <requires id="NPDKB"/>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="no"/>
            </error>
        </checker>
        <checker id="RNPD">
            <error autogroupby="0" enabled="true" id="RNPD.DEREF" identification="" message="Suspicious dereference of pointer '{0}' before NULL check at line {1}" severity="3" title="Suspicious dereference of pointer before NULL check" upkid="279">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="yes"/>
            </error>
            <error autogroupby="0" enabled="true" id="RNPD.CALL" identification="" message="Suspicious dereference of pointer '{0}' by passing argument {2} to function '{3}' at line {4} before NULL check at line {1}" severity="3" title="Suspicious dereference of pointer in function call before NULL check" upkid="278">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="NPDKB"/>
                </deplist>
                <parameter name="SuppressNullSourceFromMACRO" value="yes"/>
            </error>
        </checker>
        <checker id="UMR">
            <error autogroupby="0" enabled="true" id="UNINIT.STACK.MIGHT" identification="" message="'{0}' might be used uninitialized in this function." severity="3" title="Uninitialized Variable - possible" upkid="450">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UNINIT.STACK.MUST" identification="" message="'{0}' is used uninitialized in this function." severity="3" title="Uninitialized Variable" upkid="451">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UNINIT.STACK.ARRAY.MIGHT" identification="" message="'{0}' array elements might be used uninitialized in this function." severity="3" title="Uninitialized Array - possible" upkid="447">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UNINIT.STACK.ARRAY.MUST" identification="" message="'{0}' array elements are used uninitialized in this function." severity="3" title="Uninitialized Array" upkid="448">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UNINIT.STACK.ARRAY.PARTIAL.MUST" identification="" message="'{0}' array elements are used uninitialized in this function with index range: {1}." severity="3" title="Partialy Uninitialized Array" upkid="449">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UNINIT.CTOR.MIGHT" identification="" message="'{0}' might not be initialized in this constructor." severity="3" title="Uninitialized Variable in Constructor - possible" upkid="443">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="false" id="UNINIT.CTOR.MUST" identification="" message="'{0}' is not initialized in this constructor." severity="3" title="Uninitialized Variable in Constructor" upkid="444">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UNINIT.HEAP.MIGHT" identification="" message="'{0}' may get its value from uninitialized heap memory area." severity="3" title="Uninitialized Heap Use - possible" upkid="445">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UNINIT.HEAP.MUST" identification="" message="'{0}' gets its value from uninitialized heap memory area." severity="3" title="Uninitialized Heap Use" upkid="446">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
        </checker>
        <checker id="CLASSLEVEL">
            <error autogroupby="0" enabled="true" id="CL.FMM" identification="" message="Possible freeing of mismatched memory from '{1}' in class '{0}'. Memory referenced by '{1}' allocated in constructor at line {3} is illegally freed in destructor at line {4}." severity="2" title="Freeing Mismatched Memory - in destructor" upkid="41"/>
            <error autogroupby="0" enabled="true" id="CL.MLK" identification="" message="Possible memory leak in class '{0}'. Memory referenced by '{1}' allocated in constructor at line {2} is not deallocated in destructor." severity="3" title="Memory Leak - in destructor" upkid="42"/>
            <error autogroupby="0" enabled="true" id="CL.MLK.VIRTUAL" identification="" message="Possible memory leak in class '{0}'. Memory referenced by '{1}' may be not deallocated in destructor at line {2}. The destructor of base class '{3}' is not virtual." severity="3" title="Memory Leak - possible in destructor" upkid="43"/>
            <error enabled="true" id="CL.SELF-ASSIGN" identification="" message="Possible memory leak in method '{0}'. Check for assignment to self in operator=." severity="3" title="Memory Leak - in operator=" upkid="45"/>
            <error autogroupby="0" enabled="true" id="CL.FFM.COPY" identification="" message="Double freeing of freed memory may be in class '{0}'. Copy constructor is not defined." severity="2" title="Use of free memory (double free) - no copy constructor" upkid="40"/>
            <error autogroupby="0" enabled="true" id="CL.FFM.ASSIGN" identification="" message="Double freeing of freed memory may be in class '{0}'. Operator= is not defined." severity="2" title="Use of free memory (double free) - no operator=" upkid="39"/>
            <error enabled="true" id="CL.RETURN-THIS" identification="" message="'{0}' should return a reference to *this." severity="2" title="Operator= return a reference to *this" upkid="44"/>
        </checker>
        <checker id="SYMBIAN">
            <error autogroupby="0" enabled="false" id="SYM.MLK" identification="" message="Dynamic memory stored in '{0}' allocated through function '{1}' at line {2} may be lost if a leave occurs during the call to function '{3}' at line {4}" severity="3" title="Symbian Memory Leak" upkid="412">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="ALLOCKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
        </checker>
        <checker id="FREE">
            <error autogroupby="0" enabled="true" id="UFM.RETURN.MIGHT" identification="" message="Object '{0}' is returned after it was freed. Object '{0}' was used at line {1} after being freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Use of freed memory (return) - possible" upkid="434">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UFM.RETURN.MUST" identification="" message="Object '{0}' is returned after it was freed. Object '{0}' was used at line {1} after being freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Use of Freed Memory on Return" upkid="435">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UFM.DEREF.MIGHT" identification="" message="Dereference of freed memory pointed by '{0}'. Object '{0}' was used at line {1} after being freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Use of free memory (access) - possible" upkid="430">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="FREEKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UFM.DEREF.MUST" identification="" message="Dereference of freed memory pointed by '{0}'. Object '{0}' was used at line {1} after being freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Use of Freed Memory by Pointer" upkid="431">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="FREEKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UFM.FFM.MIGHT" identification="" message="Double freeing of freed memory pointed by '{0}'. Object '{0}' was used at line {1} after being freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Use of free memory (double free) - possible" upkid="432">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="FREEKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UFM.FFM.MUST" identification="" message="Double freeing of freed memory pointed by '{0}'. Object '{0}' was used at line {1} after being freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Freeing Freed Memory" upkid="433">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UFM.USE.MIGHT" identification="" message="Object '{0}' is used after it was freed. Object '{0}' was used at line {1} after being freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Use of free memory - possible" upkid="436">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="UFM.USE.MUST" identification="" message="Object '{0}' is used after it was freed. Object '{0}' was used at line {1} after being freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Use of Freed Memory" upkid="437">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="FNH.MIGHT" identification="" message="Possible freeing of non-heap memory from '{0}'. Memory referenced by '{1}' is illegally freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Freeing Non-Heap Memory - possible" upkid="132">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="FNH.MUST" identification="" message="Freeing of non-heap memory from '{0}'. Memory referenced by '{1}' is illegally freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Freeing Non-Heap Memory" upkid="133">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="FREEKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="FMM.MIGHT" identification="" message="Possible freeing of mismatched memory from '{0}'. Memory referenced by '{1}' allocated through function '{2}' at line {3} is illegally freed by passing argument {4} to function '{5}' at line {6}" severity="3" title="Freeing Mismatched Memory - possible" upkid="130">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                    <requires id="ALLOCKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="FMM.MUST" identification="" message="Freeing mismatched memory from '{0}'. Memory referenced by '{1}' allocated through function '{2}' at line {3} is illegally freed by passing argument {4} to function '{5}' at line {6}" severity="3" title="Freeing Mismatched Memory" upkid="131">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                    <requires id="ALLOCKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="FUM.GEN.MIGHT" identification="" message="Possible freeing of unallocated memory from '{0}'. Memory referenced by '{1}' was freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Freeing Unallocated Memory - possible" upkid="138">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="FUM.GEN.MUST" identification="" message="Freeing of unallocated memory from '{0}'. Memory referenced by '{1}' was freed by passing argument {2} to function '{3}' at line {4}" severity="2" title="Freeing Unallocated Memory" upkid="139">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="false" id="FREE.INCONSISTENT" identification="" message="Memory pointed by '{0}' is freed at this point, but this memory is not freed upon function exits at line(s) {1}." severity="2" title="Inconsistent Freeing of Memory" upkid="134">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="FREEKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
        </checker>
        <checker id="EFFECT">
            <error enabled="false" id="EFFECT" identification="" message="Statement has no effect" severity="9" title="Statement has no effect" upkid="123"/>
        </checker>
        <checker id="UNUSEDVALUE">
            <error autogroupby="0" enabled="false" id="VA_UNUSED.GEN" identification="0x030300;*" message="Value of '{0}' is never used after assignment" severity="9" title="Value is Never Used after Assignment" upkid="454">
                <deplist>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="false" id="VA_UNUSED.INIT" identification="0x030301;*" message="Value of '{0}' is never used after initialization" severity="9" title="Value is Never Used after Initialization" upkid="455">
                <deplist>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
        </checker>
        <checker id="UNUSEDVAR">
            <error autogroupby="0" enabled="false" id="LV_UNUSED.GEN" identification="0x020300;*" message="Local variable '{0}' is never used" severity="9" title="Local variable unused" upkid="196"/>
        </checker>
        <checker id="MLK">
            <error autogroupby="0" enabled="true" id="MLK.MIGHT" identification="0x030700;*" message="Possible memory leak. Dynamic memory stored in '{0}' allocated through function '{1}' at line {2} can be lost at line {3}" severity="3" title="Memory Leak - possible" upkid="197">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="ALLOCKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="MLK.MUST" identification="0x030780;*" message="Memory leak. Dynamic memory stored in '{0}' allocated through function '{1}' at line {2} is lost at line {3}" severity="3" title="Memory Leak" upkid="198">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="ALLOCKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="FREEKB"/>
                </deplist>
            </error>
        </checker>
        <checker id="DEADCODE">
            <error enabled="false" id="UNREACH.GEN" identification="" message="Code is unreachable" severity="4" title="Unreachable code" upkid="452">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error enabled="false" id="UNREACH.RETURN" identification="" message="Unreachable return" severity="5" title="Unreachable Void Return" upkid="453">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
        </checker>
        <checker id="Concurrency">
            <error autogroupby="2" enabled="true" id="CONC.NO_UNLOCK" identification="" message="Variable '{0}' locked on line {1} was not unlocked." severity="3" title="Missing unlock for variable" upkid="51">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="2" enabled="true" id="CONC.SLEEP" identification="" message="Function may block while holding lock on variable '{0}' which was locked on line {1}." severity="5" title="Function may block in critical section" upkid="52">
                <deplist>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
        </checker>
        <checker id="RLK">
            <error autogroupby="0" enabled="true" id="RH.LEAK" identification="" message="Resource acquired to '{1}' at line {2} may be lost here." severity="5" title="Resource leak" upkid="260">
                <deplist>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
        </checker>
        <checker id="DEADLOCK">
            <error autogroupby="1" enabled="false" id="CONC.DL" identification="" message="Possible deadlock between {0} threads using resources {1}." severity="3" title="Deadlock" upkid="50">
                <deplist/>
            </error>
        </checker>
        <checker id="CheckLocAddrRet">
            <error autogroupby="0" enabled="true" id="LOCRET.RET" identification="" message="Address of a local variable is returned via return statement expression '{0}'." severity="2" title="Function returns address of local variable" upkid="195">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="LOCRET.ARG" identification="" message="Address of a local variable is returned through formal argument '{0}'." severity="2" title="Function returns address of local variable" upkid="193">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="LOCRET.GLOB" identification="" message="Address of a local variable is returned through global variable '{0}'." severity="2" title="Function returns address of local variable" upkid="194">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
        </checker>
        <checker id="SECURITY">
            <error enabled="true" id="SV.STRBO.GETS" identification="" message="Do not use 'gets', this function does not check buffer boundaries and is very likely to cause buffer overflow vulnerabilities" severity="1" title="Usage of 'gets'" upkid="373"/>
            <error autogroupby="0" enabled="false" id="SV.STRBO.UNBOUND_SPRINTF" identification="" message="function '{0}' does not check buffer boundaries but outputs to the buffer '{1}' of fixed size ({2})" severity="1" title="Buffer Overflow in Unbound sprintf" upkid="375"/>
            <error autogroupby="0" enabled="false" id="SV.STRBO.BOUND_SPRINTF" identification="" message="function '{0}' may incorrectly check buffer boundaries and may overflow buffer '{1}' of fixed size ({2})" severity="1" title="Buffer Overflow in Bound sprintf" upkid="372"/>
            <error autogroupby="0" enabled="false" id="SV.STRBO.BOUND_COPY" identification="" message="function '{0}' may incorrectly check buffer boundaries and may overflow buffer '{1}' of fixed size ({2})" severity="1" title="Buffer Overflow in Bound String Copy" upkid="371"/>
            <error autogroupby="0" enabled="false" id="SV.STRBO.UNBOUND_COPY" identification="" message="function '{0}' does not check buffer boundaries but outputs to buffer '{1}' of fixed size ({2})" severity="1" title="Buffer Overflow in Unbound String Copy" upkid="374"/>
            <error autogroupby="0" enabled="false" id="SV.WEAK_CRYPTO.WEAK_HASH" identification="" message="function '{0}' is a weak hash function, use stronger hashing. Weak hash functions can be easily be deciphered. Use a stronger cryptographic function." severity="5" title="Weak Hash Function" upkid="408"/>
            <error autogroupby="0" enabled="false" id="SV.TOCTOU.FILE_ACCESS" identification="" message="function '{0}' operates on file names and is vulnerable to race conditions. Files can be manipulated by attackers between creation and access time." severity="5" title="Time of Creation/Time of Use Race condition in File Access" upkid="395"/>
            <error autogroupby="0" enabled="false" id="SV.FMTSTR.GENERIC" identification="" message="function '{0}' possibly accepts format string that may be influenced by user, causing format string vulnerability. Undefined string lengths can lead to buffer overflows and potential exploitation by attackers. Use a defined value for string lengths." severity="2" title="Format String Vulnerability" upkid="327"/>
            <error autogroupby="0" enabled="false" id="SV.CODE_INJECTION.SHELL_EXEC" identification="" message="function '{0}' possibly accepts command line that may be influenced by user, causing execution of arbitrary code. Arbitrary commands can be executed by an attacker. Check the length and content of strings used for command execution." severity="1" title="Command Injection into Shell Execution" upkid="306"/>
        </checker>
        <checker id="TaintedStringKB"/>
        <checker id="TaintedAllocKB"/>
        <checker id="TaintedString">
            <error autogroupby="0" enabled="true" id="SV.TAINTED.FMTSTR" identification="" message="Unvalidated string '{0}' is received from an external function through call to '{1}' at line {2} can be used as a format string through call to '{3}' at line {4}. This can lead to buffer overflows within the string buffer which in turn can lead to arbitrary code execution from user input. Check the length and content of strings used in format string operations." severity="1" title="Use of Unvalidated Data in a Format String" upkid="388">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="TaintedStringKB"/>
                    <requires id="TaintedAllocKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="false" id="SV.TAINTED.GENERIC" identification="" message="Unvalidated string '{0}' is received from an external function through a call to '{1}' at line {2} can be passed to '{3}' at line {4}. Unvalidated data is potentially dangerous. Check strings for length and content." severity="3" title="Use of Unvalidated String Data" upkid="389">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="TaintedStringKB"/>
                    <requires id="TaintedAllocKB"/>
                </deplist>
                <parameter name="FBKBKey" value="TSSinkGen"/>
            </error>
            <error autogroupby="0" enabled="true" id="SV.TAINTED.INJECTION" identification="" message="Unvalidated string '{0}' is received from an external function through a call to '{1}' at line {2} this can be run as command line through call to '{3}' at line {4}. User input can be used to cause arbitrary command execution on the host system. Check strings for length and content when used for command execution." severity="1" title="Command Injection" upkid="391">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="TaintedStringKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="TaintedAllocKB"/>
                </deplist>
                <parameter name="FBKBKey" value="TSSinkInj"/>
            </error>
        </checker>
        <checker id="TaintedAlloc">
            <error autogroupby="0" enabled="true" id="SV.TAINTED.ALLOC_SIZE" identification="" message="Unvalidated integer value '{0}' is received from an external function through a call to '{1}' at line {2} which can be used to alter memory allocation size through call to '{3}' at line {4}. Use of unvalidated input for memory allocation can lead to a denial of service condition. Check integers for reasonable limits." severity="1" title="Use of Unvalidated Integer in Memory Allocation" upkid="385">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="TaintedAllocKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="SV.TAINTED.CALL.INDEX_ACCESS" identification="" message="Unvalidated integer value '{0}' is received from an external function through a call to '{1}' at line {2} which can be used to access an array through call to '{3}' at line {4}. Use of unvalidated user input for array index can lead to a buffer overflow and denial of service condition. Check integers for reasonable limits." severity="1" title="Use of Unvalidated Integer as Array Index by Function Call" upkid="386">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="TaintedAllocKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="SV.TAINTED.INDEX_ACCESS" identification="" message="Unvalidated integer value '{0}' is received from an external function through a call to '{1}' at line {2} which can be used to access array at line {3}. Use of unvalidated user input for array index can lead to a buffer overflow and denial of service condition. Check integers for reasonable limits." severity="1" title="Use of Unvalidated Integer as Array Index" upkid="390">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="TaintedAllocKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="SV.TAINTED.CALL.LOOP_BOUND" identification="" message="Unvalidated integer value '{0}' is received from an external function through a call to '{1}' at line {2} which can be used in a loop condition through a call to '{3}' at line {4}. Use of unvalidated input for a loop condition can lead to a denial of service condition. Check integers for reasonable limits." severity="1" title="Use of Unvalidated Integer in Loop Condition through a Function Call" upkid="387">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="TaintedAllocKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="SV.TAINTED.LOOP_BOUND" identification="" message="Unvalidated integer value '{0}' is received from an external function through a call to '{1}' at line {2} which can be used in a loop condition at line {3}. Use of unvalidated input for a loop condition can lead to a denial of service condition. Check integers for reasonable limits." severity="1" title="Use of Unvalidated Integer in Loop Condition" upkid="392">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="TaintedAllocKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
        </checker>
        <checker id="PathABV">
            <error autogroupby="0" enabled="true" id="ABR" identification="" message="Buffer overflow, array index of '{0}' may be out of bounds. {1}" severity="1" title="Buffer Overflow - Array Index Out of Bounds" upkid="1">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="ABVKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="ABV.STACK" identification="" message="Buffer overflow, array index of '{0}' may be out of bounds. {1}" severity="1" title="Buffer Overflow - Local Array Index Out of Bounds" upkid="5">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="ABVKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="ABV.ITERATOR" identification="" message="Buffer overflow, pointer '{0}' is used when its value may exceed array '{1}' bounds. Pointer '{2}' is assigned to '{3}' and iterated until {4} at line {5}." severity="2" title="Buffer Overflow - Array Index may be out of Bounds" upkid="4">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="ABVKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="ABV.TAINTED" identification="" message="Buffer overflow from unvalidated input used as an array index of '{0}' which may be out of bounds. {1}" severity="1" title="Buffer Overflow from Unvalidated Input" upkid="6">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="TaintedString"/>
                    <requires id="ABVKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="NNTS.MUST" identification="" message="Buffer overflow of '{0}' due to non null terminated string '{1}'" severity="1" title="Buffer Overflow - Non-null Terminated String" upkid="203">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="ABVKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="NNTS.MIGHT" identification="" message="Buffer overflow of '{0}' due to non null terminated string '{1}'" severity="1" title="Buffer Overflow - Non-null Terminated String" upkid="202">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="ABVKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="NNTS.TAINTED" identification="" message="Buffer overflow of '{0}' caused by unvalidated user input due to non null terminated string '{1}'" severity="1" title="Unvalidated User Input Causing Buffer Overflow - Non-Null Terminated String" upkid="204">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="TaintedString"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="ABVKB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="ABV.ANY_SIZE_ARRAY" identification="" message="Buffer overflow, array index of '{0}' may be out of bounds. {1}" severity="1" title="Buffer Overflow - Array Index Out of Bounds" upkid="3">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="ABVKB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                </deplist>
            </error>
            <error enabled="false" id="ABV.UNICODE.FAILED_MAP" identification="" message="Invalid parameter. {0}" severity="1" title="Maping function failed" upkid="8"/>
            <error enabled="false" id="ABV.UNICODE.BOUND_MAP" identification="" message="Function '{0}' may incorrectly check buffer boundaries and may overflow buffer '{1}' of size ({2})." severity="1" title="Buffer overflow in mapping character function" upkid="7"/>
            <error enabled="false" id="ABV.UNICODE.NNTS_MAP" identification="" message="Function '{0}' may incorrectly check buffer boundaries and may overflow buffer '{1}' of size ({2})." severity="1" title="Buffer overflow in mapping character function" upkid="9"/>
        </checker>
        <checker id="ByteOrderConversionChecker">
            <error autogroupby="2" enabled="false" id="BYTEORDER.NTOH.RECV" identification="" message="Value '{2}' is used in network byte order, but it should be in host byte order" severity="3" title="Missed conversion from network to host byte order" upkid="37">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="ByteOrderConversionKBGenerator"/>
                </deplist>
            </error>
            <error autogroupby="2" enabled="false" id="BYTEORDER.HTON.SEND" identification="" message="Value '{2}' is used in host byte order, but it should be in network byte order" severity="3" title="Missed conversion from host to network byte order" upkid="34">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="ByteOrderConversionKBGenerator"/>
                </deplist>
            </error>
            <error autogroupby="2" enabled="false" id="BYTEORDER.NTOH.READ" identification="" message="Value '{2}' is used in environment/network byte order, but it should be in host byte order" severity="3" title="Missed conversion from network to host byte order" upkid="36">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="ByteOrderConversionKBGenerator"/>
                </deplist>
            </error>
            <error autogroupby="2" enabled="false" id="BYTEORDER.HTON.WRITE" identification="" message="Value '{2}' is used in host byte order, but it should be in environment/network byte order" severity="3" title="Missed conversion from host to network byte order" upkid="35">
                <deplist>
                    <requires id="GENERAL_KB"/>
                    <requires id="READKB"/>
                    <requires id="WRITEKB"/>
                    <requires id="ByteOrderConversionKBGenerator"/>
                </deplist>
            </error>
        </checker>
        <checker id="DEPRECATED">
            <error autogroupby="0" deprecated="true" enabled="false" id="ABR.HEAP" identification="" message="array index of '{0}' may be outside the bounds. {1}" severity="3" title="ABR.HEAP" upkid="2"/>
            <error autogroupby="0" deprecated="true" enabled="false" id="BO.HEAP.MIGHT" identification="" message="overflow of buffer '{0}' allocated in heap. {1}" severity="3" title="BO.HEAP.MIGHT" upkid="21"/>
            <error autogroupby="0" deprecated="true" enabled="false" id="BO.HEAP.MUST" identification="" message="overflow of buffer '{0}' allocated in heap. {1}" severity="3" title="BO.HEAP.MUST" upkid="22"/>
            <error autogroupby="0" deprecated="true" enabled="false" id="NUL.GEN.MUST" identification="" message="The dereferenced pointer '{0}' is null. {1} {2}" severity="1" title="Null Pointer Dereference" upkid="226"/>
            <error autogroupby="0" deprecated="true" enabled="false" id="NUL.GEN.MIGHT" identification="" message="The dereferenced pointer '{0}' might be null. {1} {2}" severity="1" title="Null Pointer Dereference - possible" upkid="225"/>
            <error autogroupby="0" deprecated="true" enabled="false" id="NUL.FUNC.MIGHT" identification="" message="The dereferenced pointer '{0}' might be null. {1} {2}" severity="1" title="Null Pointer Dereference from Function" upkid="224"/>
            <error autogroupby="0" deprecated="true" enabled="false" id="INC_CONTEXT_USAGE" identification="" message="File '{0}' contextually uses file '{1}' due to usage of object '{2}', but file '{1}' cannot be directly included because of contextual restrictions" severity="10" title="INC_CONTEXT_USAGE" upkid="145"/>
            <error deprecated="true" enabled="false" id="INC_EXTRA_REJ" identification="" message="No one identifier from {1} is used, but it cannot be safely removed because of unresolved dependancy" severity="10" title="INC_EXTRA_REJ" upkid="146"/>
            <error autogroupby="0" deprecated="true" enabled="false" id="INC_EXTRA_TRANS" identification="" message="For '{0}' no identifiers from file '{1}' are used, but file '{1}' cannot be safely removed because of other dependency" severity="10" title="INC_EXTRA_TRANS" upkid="147"/>
            <error autogroupby="0" deprecated="true" enabled="false" id="LOCRET" identification="" message="function '{0}' returns reference to local variable" severity="2" title="Function returns reference to local variable" upkid="192">
                <deplist>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" deprecated="true" enabled="false" id="IF_CYCLE" identification="" message="Cycle in include files: {0} in context {1}" severity="6" title="Cycle in include files" upkid="142"/>
        </checker>
    </checkergroup>
    <checkergroup api="tree" directory="C:\Klocwork\User 9.2\plugins" id="kwsecliba" language="C/C++">
        <checker id="PoritngStorageStruct">
            <error autogroupby="0" enabled="false" id="PORTING.STORAGE.STRUCT" identification="" message="Byte position of elements in a structure could be changed depending on alignment and packing attributes." severity="8" title="Byte position of elements in a structure could depend on alignment and packing attributes." upkid="243"/>
        </checker>
        <checker id="PortingVarEffects">
            <error autogroupby="0" enabled="false" id="PORTING.VAR.EFFECTS" identification="" message="Variable '{0}' used twice in one expression where one usage is subject to side-effects" severity="6" title="Variable used twice in one expression where one usage is subject to side-effects" upkid="249"/>
        </checker>
        <checker id="CheckIfFunctionIsUsed">
            <error enabled="false" id="SV.FIU.POOR_ENCRYPTION" identification="" message="Be sure to use an MD5 salt otherwise this encryption can be deciphered easily." severity="2" title="Use of Poor Encryption" upkid="325">
                <parameterlist name="rule-list">
                    <parameterlist name="rule">
                        <parameter name="function" value="encrypt"/>
                        <parameter name="category" value="Poor Encryption"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function" value="crypt"/>
                        <parameter name="category" value="Poor Encryption"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function" value="setkey"/>
                        <parameter name="category" value="Poor Encryption"/>
                    </parameterlist>
                </parameterlist>
            </error>
            <error autogroupby="0" enabled="false" id="SV.FIU.PERMISSIONS" identification="" message="Be careful in your use of {0}, constrain code that needs to be run at high privilege." severity="2" title="Use of Privilege Elevation" upkid="324">
                <parameterlist name="rule-list">
                    <parameterlist name="rule">
                        <parameter name="function" value="setegid"/>
                        <parameter name="category" value="Permissions"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function" value="seteuid"/>
                        <parameter name="category" value="Permissions"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function" value="setuid"/>
                        <parameter name="category" value="Permissions"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function" value="setergid"/>
                        <parameter name="category" value="Permissions"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function" value="seteruid"/>
                        <parameter name="category" value="Permissions"/>
                    </parameterlist>
                </parameterlist>
            </error>
            <error enabled="false" id="SV.FIU.PROCESS_VARIANTS" identification="" message="It is easy to run arbitrary commands through environment variables.  Use fork, execve, and pipes instead." severity="2" title="Use of Dangerous Process Creation" upkid="326">
                <parameterlist name="rule-list">
                    <parameterlist name="rule">
                        <parameter name="function" value="execlp"/>
                        <parameter name="category" value="ProcessVariants"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function" value="execvp"/>
                        <parameter name="category" value="ProcessVariants"/>
                    </parameterlist>
                </parameterlist>
            </error>
        </checker>
        <checker id="CheckStringParameter">
            <error autogroupby="0" enabled="false" id="SV.STR_PAR.UNDESIRED_STRING_PARAMETER" identification="" message="Call to '{0}' potentially dangerous string parameter for file path. Manipulation of file locations is possible leading to exposure of security-sensitive data." severity="5" title="Undesired String for File Path" upkid="383">
                <parameterlist name="rule-list">
                    <parameterlist name="rule">
                        <parameter name="function-name" value="open"/>
                        <parameter name="parameter" value="1"/>
                        <parameterlist name="pattern-list">
                            <parameter name="wrong-pattern" value="/"/>
                            <parameter name="correct-pattern" value="/usr/local"/>
                            <parameter name="correct-pattern" value="/usr/local/*"/>
                            <parameter name="wrong-pattern" value="/usr"/>
                            <parameter name="wrong-pattern" value="/usr/*"/>
                            <parameter name="correct-pattern" value="/*"/>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="creat"/>
                        <parameter name="parameter" value="1"/>
                        <parameterlist name="pattern-list">
                            <parameter name="wrong-pattern" value="/"/>
                            <parameter name="correct-pattern" value="/usr/local"/>
                            <parameter name="correct-pattern" value="/usr/local/*"/>
                            <parameter name="wrong-pattern" value="/usr"/>
                            <parameter name="wrong-pattern" value="/usr/*"/>
                            <parameter name="correct-pattern" value="/*"/>
                        </parameterlist>
                    </parameterlist>
                </parameterlist>
            </error>
        </checker>
        <checker id="FormatString">
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.BAD_SCAN_FORMAT" identification="" message="Width is not specified for 's' conversion specifier. This can result in an overflow of the buffer provided in argument {1} of a call to '{0}'" severity="3" title="Input format specifier error" upkid="328">
                <parameterlist name="scan-function-set">
                    <parameterlist name="scan-function">
                        <parameter name="name" value="scanf"/>
                        <parameter name="parameter" value="1"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="fscanf"/>
                        <parameter name="parameter" value="2"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="sscanf"/>
                        <parameter name="parameter" value="2"/>
                        <parameter name="string" value="1"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="snscanf"/>
                        <parameter name="parameter" value="3"/>
                        <parameter name="string" value="1"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="wscanf"/>
                        <parameter name="parameter" value="1"/>
                        <parameter name="wide" value="1"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="fwscanf"/>
                        <parameter name="parameter" value="2"/>
                        <parameter name="wide" value="1"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="swscanf"/>
                        <parameter name="parameter" value="2"/>
                        <parameter name="wide" value="1"/>
                        <parameter name="string" value="1"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="swnscanf"/>
                        <parameter name="parameter" value="3"/>
                        <parameter name="wide" value="1"/>
                        <parameter name="string" value="1"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="vscanf"/>
                        <parameter name="parameter" value="1"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="vfscanf"/>
                        <parameter name="parameter" value="2"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="vsscanf"/>
                        <parameter name="parameter" value="2"/>
                        <parameter name="string" value="1"/>
                    </parameterlist>
                    <parameterlist name="scan-function">
                        <parameter name="name" value="_cscanf"/>
                        <parameter name="parameter" value="1"/>
                    </parameterlist>
                </parameterlist>
            </error>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.PRINT_FORMAT_MISMATCH.BAD" identification="" message="{0} format specification '{1}' expects type '{2}' for '{3}', but parameter {4} has incompatible type '{5}'" severity="3" title="Incompatible type of a print function parameter" upkid="329">
                <parameterlist name="print-function-set">
                    <parameterlist name="print-function">
                        <parameter name="name" value="printf"/>
                        <parameter name="parameter" value="1"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="fprintf"/>
                        <parameter name="parameter" value="2"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="sprintf"/>
                        <parameter name="parameter" value="2"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="snprintf"/>
                        <parameter name="parameter" value="3"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="wprintf"/>
                        <parameter name="parameter" value="1"/>
                        <parameter name="wide" value="1"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="fwprintf"/>
                        <parameter name="parameter" value="2"/>
                        <parameter name="wide" value="1"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="swprintf"/>
                        <parameter name="parameter" value="2"/>
                        <parameter name="wide" value="1"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="swnprintf"/>
                        <parameter name="parameter" value="3"/>
                        <parameter name="wide" value="1"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="vprintf"/>
                        <parameter name="parameter" value="1"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="vfprintf"/>
                        <parameter name="parameter" value="2"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="vsprintf"/>
                        <parameter name="parameter" value="2"/>
                    </parameterlist>
                    <parameterlist name="print-function">
                        <parameter name="name" value="_cprintf"/>
                        <parameter name="parameter" value="1"/>
                    </parameterlist>
                </parameterlist>
            </error>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.PRINT_FORMAT_MISMATCH.UNDESIRED" identification="" message="{0} format specification '{1}' expects type '{2}' for '{3}', but parameter {4} has a different type '{5}'" severity="6" title="Unexpected type of a print function parameter" upkid="330"/>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.PRINT_IMPROP_LENGTH" identification="" message="'{0}' length modifier is used with '{1}' type character in {2} format specification" severity="6" title="Improper use of length modifier in a print function call" upkid="331"/>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.PRINT_PARAMS_WRONGNUM.FEW" identification="" message="Too few parameters provided for {0} function" severity="3" title="Too few arguments in a print function call" upkid="332"/>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.PRINT_PARAMS_WRONGNUM.MANY" identification="" message="Too many parameters provided for {0} function" severity="6" title="Too many arguments in a print function call" upkid="333"/>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.UNKWN_FORMAT" identification="" message="Unknown {0} format specifier '{1}'" severity="4" title="Unknown format specifier in a print function call" upkid="338"/>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.SCAN_FORMAT_MISMATCH" identification="" message="{0} format specification '{1}' expects type '{2}' for '{3}', but parameter {4} has incompatible type '{5}'" severity="3" title="Incompatible type of a scan function parameter" upkid="334"/>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.SCAN_IMPROP_LENGTH" identification="" message="'{0}' length modifier is used with '{1}' type character in {2} format specification" severity="6" title="Improper use of length modifier in a scan function call" upkid="335"/>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.SCAN_PARAMS_WRONGNUM.FEW" identification="" message="Too few parameters provided for {0} function" severity="3" title="Too few arguments in a scan function call" upkid="336"/>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.SCAN_PARAMS_WRONGNUM.MANY" identification="" message="Too many parameters provided for {0} function" severity="6" title="Too many arguments in a scan function call" upkid="337"/>
            <error autogroupby="0" enabled="true" id="SV.FMT_STR.UNKWN_FORMAT.SCAN" identification="" message="Unknown {0} format specifier '{1}'" severity="4" title="Unknown format specifier in a scan function call" upkid="339"/>
        </checker>
        <checker id="RegistryManipulation">
            <error autogroupby="0" enabled="false" id="SV.BRM.HKEY_LOCAL_MACHINE" identification="" message="Function '{0}' is using macro HKEY_LOCAL_MACHINE as parameter {1}.  Use of HKEY_LOCAL_MACHINE makes it impossible for users of the application to run from a regular user (non-Administrator) account." severity="2" title="HKEY_LOCAL_MACHINE Used as 'hkey' Parameter for Registry Manipulation Function" upkid="299"/>
        </checker>
        <checker id="UsageRulesChecker">
            <error enabled="false" id="SV.USAGERULES.PERMISSIONS" identification="" message="Check inheritence bits in the ACE to ensure they are set properly." severity="9" title="Use of function that manipulates Access Control Lists" upkid="401"/>
            <error enabled="false" id="SV.USAGERULES.UNBOUNDED_STRING_COPY" identification="" message="There is no way to limit the number of characters in an environment variable (LC_ALL, LC_MESSAGES).  This function will cause buffer overruns" severity="9" title="Use of Unbounded String Copy" upkid="404"/>
            <error autogroupby="0" enabled="false" id="SV.USAGERULES.UNBOUNDED_STRING_COPY.INPUT" identification="" message="Avoid using {0}, it is very prone to buffer overruns as it is impossible to limit the number of characters being retrieved." severity="9" title="Use of Unbounded String Copy" upkid="405"/>
            <error autogroupby="0" enabled="false" id="SV.USAGERULES.PROCESS_VARIANTS" identification="" message="Use CreateProcess instead of {0}.  This function acts like CreateProcess(NULL,?) and should be avoided." severity="9" title="Use of Dangerous Process Creation Function" upkid="402"/>
            <error autogroupby="0" enabled="false" id="SV.USAGERULES.SPOOFING" identification="" message="Be careful in your use of {0}, it is dependant on data from a hosts server and therefore can be spoofed." severity="9" title="Use of Function Susceptible to Spoofing" upkid="403"/>
            <error autogroupby="0" enabled="false" id="SV.USAGERULES.UNINTENDED_COPY" identification="" message="Be careful using {0} in security sensitive code.  The memory will not be cleaned up and will contain traces of data from past use." severity="9" title="Use of Unintended Copy" upkid="406"/>
            <error autogroupby="0" enabled="false" id="SV.USAGERULES.FILE_VARIANTS" identification="" message="{0} returns an environment variable that may not be trustworthy.  Be careful overwriting important system or application files." severity="9" title="Use of Dangerous File Manipulation Functions" upkid="400"/>
        </checker>
        <checker id="SizeAssignCheck">
            <error autogroupby="0" enabled="false" id="PRECISION.LOSS" identification="" message="Conversion from {0} to {1} may cause loss of data" severity="9" title="Loss of Precision" upkid="250"/>
            <error autogroupby="0" enabled="false" id="PRECISION.LOSS.CALL" identification="" message="Passing argument {2} to function {3} converts {0} to {1} and may cause loss of data" severity="9" title="Loss of Precision during function call" upkid="251"/>
        </checker>
        <checker id="MallocSizeofPointer">
            <error autogroupby="0" enabled="true" id="INCORRECT.ALLOC_SIZE" identification="" message="Memory allocated through argument #{1} of {0} is less than intended" severity="6" title="Incorrect Allocation Size" upkid="144">
                <parameterlist name="alloc-function-set">
                    <parameterlist name="alloc-function">
                        <parameter name="name" value="calloc"/>
                        <parameter name="parameter" value="2"/>
                    </parameterlist>
                    <parameterlist name="alloc-function">
                        <parameter name="name" value="malloc"/>
                        <parameter name="parameter" value="1"/>
                    </parameterlist>
                    <parameterlist name="alloc-function">
                        <parameter name="name" value="realloc"/>
                        <parameter name="parameter" value="2"/>
                    </parameterlist>
                </parameterlist>
            </error>
        </checker>
        <checker id="CheckInconsistentLabels">
            <error autogroupby="0" enabled="true" id="INCONSISTENT.LABEL" identification="" message="Different type of case labels at line {0} and {1} are used in a switch statement" severity="6" title="Inconsistent Case Labels" upkid="143"/>
        </checker>
        <checker id="StrongTypeCheck">
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.ASSIGN" identification="" message="A strongly typed value is assigned to a variable of a different strong type" severity="8" title="Assignment does not respect strong typing" upkid="285">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.ASSIGN.CONST" identification="" message="A value is assigned to a strongly typed variable" severity="8" title="Assignment does not respect strong typing" upkid="287">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.ASSIGN.ZERO" identification="" message="Zero is assigned to a strongly typed variable" severity="8" title="Assignment does not respect strong typing" upkid="290">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.ASSIGN.RETURN" identification="" message="A strongly typed function returns a non strongly-typed value" severity="8" title="Assignment does not respect strong typing" upkid="289">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.ASSIGN.INIT" identification="" message="A strongly typed value is assigned to a variable of a different strong type" severity="8" title="Assignment does not respect strong typing" upkid="288">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.ASSIGN.ARG" identification="" message="A strongly typed value is expected as function call argument" severity="8" title="Assignment does not respect strong typing" upkid="286">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.EXTRACT" identification="" message="A strongly typed value is assigned to a variable of a different type" severity="8" title="Assignment does not respect strong typing" upkid="291">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.JOIN.EQ" identification="" message="A strongly typed value is compared with a value of a different type" severity="8" title="Joining with binary operator does not respect strong typing" upkid="294">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.JOIN.CMP" identification="" message="A strongly typed value is compared with a value of a different type" severity="8" title="Joining with binary operator does not respect strong typing" upkid="292">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.JOIN.OTHER" identification="" message="A strongly typed value is joined with a value of a different type" severity="8" title="Joining with binary operator does not respect strong typing" upkid="295">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.JOIN.CONST" identification="" message="A strongly typed value is joined with constant" severity="8" title="Joining with binary operator does not respect strong typing" upkid="293">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
            <error autogroupby="0" enabled="false" id="STRONG.TYPE.JOIN.ZERO" identification="" message="A strongly typed value is joined with zero" severity="8" title="Joining with binary operator does not respect strong typing" upkid="296">
                <parameterlist name="skipped-strong-type-names"/>
            </error>
        </checker>
    </checkergroup>
    <checkergroup api="path" directory="C:\Klocwork\User 9.2\plugins" id="kwseclibp" language="C/C++">
        <checker id="CheckReturnValueIsTested">
            <error autogroupby="0" enabled="false" id="SV.RVT.RETVAL_NOTTESTED" identification="" message="Return value of '{0}' is not compared with {1}" severity="5" title="Ignored Return Value" upkid="361">
                <parameterlist name="rule-list">
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_mutex_destroy"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_mutex_lock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_mutex_trylock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_mutex_unlock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_mutex_timedlock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_mutex_getprioceiling"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_mutex_setprioceiling"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_cond_init"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_cond_destroy"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_cond_wait"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_cond_timedwait"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_cond_broadcast"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlock_init"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlock_destroy"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlock_rdlock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlock_tryrdlock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlock_timedrdlock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlock_wrlock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlock_trywrlock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlock_timedwrlock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlock_unlock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlockattr_init"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_rwlockattr_destroy"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_spin_init"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_spin_destroy"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_spin_lock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_spin_trylock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_spin_unlock"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_barrier_init"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="pthread_barrier_destroy"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="recv"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="-1"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="function-name" value="socket"/>
                        <parameterlist name="test-list">
                            <parameterlist name="test">
                                <parameter name="operation" value="=="/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="-1"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="test">
                                <parameter name="operation" value="&lt;"/>
                                <parameterlist name="constant">
                                    <parameter name="value" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                </parameterlist>
            </error>
        </checker>
        <checker id="CheckResourceHandling">
            <error autogroupby="0" enabled="false" id="SV.INCORRECT_RESOURCE_HANDLING.WRONG_STATUS" identification="" message="Handler status might be wrong here. Handler '{0}' is the result of call to '{1}'" severity="5" title="Insecure Resource Handling" upkid="344"/>
            <error autogroupby="0" enabled="false" id="SV.INCORRECT_RESOURCE_HANDLING.URH" identification="" message="Handler was released but is used here. Handler '{0}' is the result of call to '{1}'" severity="5" title="Insecure Resource Handling" upkid="343">
                <parameterlist name="rule-list">
                    <parameterlist name="rule">
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="mmap"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="name" value="MAP_FAILED"/>
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="mlock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="munlock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="mprotect"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="msync"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_madvise"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_mem_offset"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="munmap"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Standard I/O: File Descriptors"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="open"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="request-function">
                                <parameter name="name" value="dup"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="request-function">
                                <parameter name="name" value="dup2"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="dup"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="dup2"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="read"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pread"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="write"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pwrite"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="lseek"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fcntl"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fchmod"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fchown"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ftruncate"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fstat"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fdopen"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="mmap"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="5"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_fadvise"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="putmsg"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getmsg"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getpmsg"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="writev"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="readv"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="close"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Standard I/O: File Streams"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="fopen"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="request-function">
                                <parameter name="name" value="freopen"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="request-function">
                                <parameter name="name" value="fdopen"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="request-function">
                                <parameter name="name" value="tmpfile"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="0"/>
                            <parameter name="name" value="NULL"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="fgetc"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fputc"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getc"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="putc"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ungetc"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getc_unlocked"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="putc_unlocked"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fgets"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="3"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fputs"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fread"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="4"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fwrite"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="4"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fscanf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fprintf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="vfprintf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="vfscanf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fgetpos"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fsetpos"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="setbuf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="setvbuf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fseek"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fseeko"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ftell"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ftello"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fileno"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="feof"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ferror"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fflush"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="clearerr"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="rewind"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="flockfile"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="funlockfile"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ftrylockfile"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="fclose"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="release-function">
                                <parameter name="name" value="freopen"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="3"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Standard I/O: Pipe Streams"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="popen"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="0"/>
                            <parameter name="name" value="NULL"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="fgetc"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fputc"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getc"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="putc"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ungetc"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getc_unlocked"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="putc_unlocked"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fgets"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="3"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fputs"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fread"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="4"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fwrite"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="4"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fscanf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fprintf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="vfprintf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="vfscanf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fgetpos"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fsetpos"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="setbuf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="setvbuf"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fseek"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fseeko"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ftell"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ftello"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fileno"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="feof"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ferror"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fflush"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="clearerr"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="rewind"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="flockfile"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="funlockfile"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ftrylockfile"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pclose"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="XSI IPC: Messages"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="msgget"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="msgsnd"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="msgrcv"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="release-function">
                                <parameter name="name" value="msgctl"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="XSI IPC: Semaphores"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="semget"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="semop"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="semctl"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="XSI IPC: Shared memory"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="shmget"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="shmdt"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="shmat"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="shmctl"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Message Queues"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="mq_open"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="mq_send"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="mq_timedsend"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="mq_receive"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="mq_timedreceive"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="mq_notify"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="mq_getattr"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="mq_setattr"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="mq_close"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Semaphores via 'sem_open' - 'sem_close'"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="sem_open"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="name" value="SEM_FAILED"/>
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="sem_getvalue"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="sem_wait"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="sem_trywait"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="sem_post"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="sem_close"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Semaphores via 'sem_init' - 'sem_destroy'"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="sem_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="sem_getvalue"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="sem_wait"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="sem_trywait"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="sem_post"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="sem_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Shared Memory pair 'shm_open' - 'shm_unlink'"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="shm_open"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="shm_unlink"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Shared Memory 'shm_open' and I/O functions"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="shm_open"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="dup"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="dup2"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="read"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pread"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="write"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pwrite"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="lseek"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fcntl"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fchmod"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fchown"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="ftruncate"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fstat"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fdopen"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="mmap"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="5"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_fadvise"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="putmsg"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getmsg"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getpmsg"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="close"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Typed Memory Objects"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="shm_open"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_typed_mem_get_info"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="dup"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="dup2"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="fstat"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="mmap"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="5"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="close"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Spawning"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="posix_spawn_file_actions_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_spawn"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="3"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_spawnp"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="3"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_spawn_file_actions_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Clock"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="clock_getcpuclockid"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_getcpuclockid"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_condattr_getclock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="clock_getres"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="clock_gettime"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="clock_settime"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="clock_nanosleep"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="timer_create"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_condattr_setclock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Timers"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="timer_create"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="3"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="timer_settime"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="timer_gettime"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="timer_getoverrun"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="timer_delete"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Threads"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_create"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_join"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_kill"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set"/>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Thread Attributes"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_attr_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_create"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_getinheritsched"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_setinheritsched"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_getschedparam"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_setschedparam"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_getschedpolicy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_setschedpolicy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_getscope"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_setscope"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_getstack"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_setstack"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_getstackaddr"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_setstackaddr"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_getdetachstate"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_setdetachstate"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_getguardsize"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_attr_setguardsize"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pthread_attr_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Mutexes"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_mutex_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutex_lock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutex_trylock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutex_unlock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_cond_wait"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_cond_timedwait"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pthread_mutex_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Mutex Attributes"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_mutexattr_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutex_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutexattr_getprioceiling"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutexattr_setprioceiling"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutexattr_getprotocol"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutexattr_setprotocol"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutexattr_getpshared"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutexattr_setpshared"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutexattr_gettype"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_mutexattr_settype"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pthread_mutexattr_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Conditional Variables"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_cond_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_cond_wait"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_cond_timedwait"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_cond_signal"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_cond_broadcast"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pthread_cond_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Conditional Variable Attributes"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_condattr_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_cond_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_condattr_getpshared"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_condattr_setpshared"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_condattr_getclock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_condattr_setclock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pthread_condattr_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Barriers"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_barrier_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_barrier_wait"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pthread_barrier_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Barrier Attributes"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_barrierattr_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_barrier_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_barrierattr_getpshared"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_barrierattr_setpshared"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pthread_barrierattr_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: R/W Lock Objects"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_rwlock_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_rwlock_rdlock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_rwlock_tryrdlock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_rwlock_timedrdlock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_rwlock_unlock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pthread_rwlock_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: R/W Lock Object Attributes"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_rwlockattr_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_rwlock_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_rwlockattr_getpshared"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_rwlockattr_setpshared"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pthread_rwlockattr_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Realtime: Spin Lock Objects"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="pthread_spin_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_spin_lock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_spin_trylock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="pthread_spin_unlock"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="pthread_spin_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Sockets"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="socket"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="error-status">
                            <parameter name="value" value="-1"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="listen"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="accept"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="send"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="recv"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="sendmsg"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="recvmsg"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="sendto"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="recvfrom"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getsockopt"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="setsockopt"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getsockname"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="getpeername"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="shutdown"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Traces via 'posix_trace_open' - 'posix_trace_close'"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="posix_trace_open"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_trace_rewind"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_trace_eventid_equal"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_trace_eventid_get_name"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_trace_eventtypelist_getnext_id"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_trace_eventtypelist_rewind"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_trace_get_attr"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_trace_get_status"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_getnext_event"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_trace_close"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Traces via 'posix_trace_create' - 'posix_trace_shutdown'"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="posix_trace_create"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="request-function">
                                <parameter name="name" value="posix_trace_create_withlog"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="0"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_flush"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_clear"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_eventid_equal"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_eventid_get_name"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_eventtypelist_getnext_id"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_eventtypelist_rewind"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_get_attr"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_get_status"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_getnext_event"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_start"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_stop"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_timedgetnext_event"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_trygetnext_event"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_trid_eventid_open"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_get_filter"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_set_filter"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_trace_shutdown"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by value"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                    <parameterlist name="rule">
                        <parameter name="id" value="Trace Attributes"/>
                        <parameterlist name="request-function-set">
                            <parameterlist name="request-function">
                                <parameter name="name" value="posix_trace_attr_init"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="by pointer"/>
                                    <parameter name="passing" value="1"/>
                                </parameterlist>
                                <parameterlist name="status-parameter">
                                    <parameter name="position" value="by value"/>
                                    <parameter name="passing" value="0"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="success-status">
                            <parameter name="value" value="0"/>
                        </parameterlist>
                        <parameterlist name="use-function-set">
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_create"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_create_withlog"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="2"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getclockres"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getcreatetime"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getgenversion"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getname"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_setname"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getinherited"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_setinherited"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getlogfullpolicy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_setlogfullpolicy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getstreamfullpolicy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_setstreamfullpolicy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getlogsize"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_setlogsize"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getmaxdatasize"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_setmaxdatasize"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getmaxsystemeventsize"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getmaxusereventsize"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_getstreamsize"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                            <parameterlist name="use-function">
                                <parameter name="name" value="posix_trace_attr_setstreamsize"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                        <parameterlist name="release-function-set">
                            <parameterlist name="release-function">
                                <parameter name="name" value="posix_trace_attr_destroy"/>
                                <parameterlist name="handler-parameter">
                                    <parameter name="position" value="1"/>
                                    <parameter name="passing" value="by pointer"/>
                                </parameterlist>
                            </parameterlist>
                        </parameterlist>
                    </parameterlist>
                </parameterlist>
            </error>
        </checker>
        <checker id="RegistryManipulationPATH">
            <error autogroupby="0" enabled="false" id="SV.BRM.VAR.MUST" identification="" message="{0} - {1}" severity="5" title="Use of Insecure Parameter for Dangerous Functions" upkid="301"/>
            <error autogroupby="0" enabled="false" id="SV.BRM.VAR.MIGHT" identification="" message="{0} - {1}" severity="5" title="Use of Insecure Parameter for Dangerous Functions - possible" upkid="300"/>
            <error autogroupby="0" enabled="false" id="SV.BRM.CONST" identification="" message="{0} - {1}" severity="5" title="Use of Insecure Macro for Dangerous Functions" upkid="298"/>
        </checker>
        <checker id="PreConditionChecker">
            <error enabled="false" id="SV.PCC.MISSING_TEMP_FILENAME" identification="" message="The function CreateFile is using the FILE_ATTRIBUTE_TEMPORARY macro and is invoked without calling GetTempFileName first. Easily guessed temporary file names can result in security vulnerabilities, especially privacy issues. Use GetTempPath and GetTempFileName to ensure random name creation." severity="2" title="Missing Temporary File Name in Call to CreateFile" upkid="358"/>
            <error enabled="false" id="SV.PCC.INVALID_TEMP_PATH" identification="" message="The function CreateFile is using the FILE_ATTRIBUTE_TEMPORARY macro and is invoked without calling GetTempPath first. Easily guessed temporary file names can result in security vulnerabilities, especially privacy issues. Use GetTempPath and GetTempFileName to ensure random name creation." severity="2" title="Insecure Temporary File Name in Call to CreateFile" upkid="356"/>
            <error enabled="false" id="SV.PCC.CONST" identification="" message="The function CreateFile is using the FILE_ATTRIBUTE_TEMPORARY macro and is invoked using a constant string as the filename. Easily guessed temporary file names can result in security vulnerabilities, especially privacy issues. Use GetTempPath and GetTempFileName to ensure random name creation." severity="2" title="Insecure (Constant) Temporary File Name in Call to CreateFile" upkid="355"/>
            <error autogroupby="0" enabled="false" id="SV.PCC.MODIFIED_BEFORE_CREATE" identification="" message="The function CreateFile is using the FILE_ATTRIBUTE_TEMPORARY macro and is invoked using variable '{0}', as the lpFileName parameter, which has been modified after receiving the TempFileName from the invocation of GetTempFileName." severity="2" title="Modification of Temporary File Name before Call to CreateFile" upkid="359"/>
            <error enabled="false" id="SV.PCC.MISSING_TEMP_CALLS.MUST" identification="" message="The function CreateFile is not preceded by calls to GetTempPath and GetTempFileName. Easily guessed temporary file names can result in security vulnerabilities, especially privacy issues. Use GetTempPath and GetTempFileName to ensure random name creation." severity="2" title="Missing Secure Temporary File Names in Call to CreateFile" upkid="357"/>
        </checker>
        <checker id="BindFunctionCheck">
            <error autogroupby="0" enabled="false" id="SV.BFC.USING_STRUCT" identification="" message="Function call to 'bind' was made using variable '{0}' as sockaddr* parameter.  To protect yourself from server hijacking do not set the sin_addr.s_addr field of '{0}' to INADDR_ANY." severity="2" title="Use of INADDR_ANY in sin_addr.s_addr field of struct sockaddr_in Structure Used for Call to bind Function" upkid="297"/>
        </checker>
        <checker id="ContainsUndesiredString">
            <error autogroupby="0" enabled="false" id="SV.CUDS.MISSING_ABSOLUTE_PATH" identification="" message="Calling '{0}' without a fully qualified path for lpFileName may allow the application to load a DLL from an arbitrary location." severity="2" title="Loading File without Use of Absolute Path" upkid="307"/>
        </checker>
        <checker id="RetCheckGLECheck">
            <error autogroupby="0" enabled="false" id="SV.PAIRS.NO_CHECK_GLE" identification="" message="Function '{0}' was called without checking that both {0}() {2} {1} and (if that condition was satisified) that GetLastError() {4} {3} - {5}" severity="5" title="Ignored Return Values from GetLastError()" upkid="349"/>
            <error autogroupby="0" enabled="false" id="SV.PAIRS.NO_CHECK" identification="" message="Function '{0}' was called without checking that {0}() {2} {1} - {5}" severity="5" title="Ignored Return Values" upkid="348"/>
        </checker>
        <checker id="CheckIterator">
            <error autogroupby="0" enabled="true" id="ITER.END.DEREF" identification="" message="Iterator '{0}' retrieved for container '{1}' at line {2} is dereferenced when it can be equal to value returned by call to [r]end()." severity="3" title="Dereference of 'end' iterator" upkid="150"/>
            <error autogroupby="0" enabled="true" id="ITER.CONTAINER.MODIFIED" identification="" message="Iterator '{0}' retrieved for container '{1}' at line {2} is used when it can be invalidated at line {3}." severity="3" title="Use of invalid iterator" upkid="149"/>
            <error autogroupby="0" enabled="true" id="ITER.CONTAINER.INAPPROPRIATE" identification="" message="Iterator '{0}' retrieved for container '{1}' at line {2} is used inappropriately with another container '{3}'." severity="4" title="Use of iterator with inappropriate container object" upkid="148"/>
        </checker>
    </checkergroup>
    <checkergroup api="tree_pattern" directory="C:\Klocwork\User 9.2\plugins" id="COM_checkers" language="C/C++">
        <checker id="BSTR.IA">
            <libraries>
                <library path="kwCOM"/>
            </libraries>
            <error autogroupby="0" enabled="false" id="BSTR.IA.INIT" identification="" message="BSTR variable '{0}' is initialized with a non-BSTR value" severity="8" title="BSTR variable is initialized with a non-BSTR value" upkid="30">
                <pattern>
                    // InitDeclarator [ Declarator::Declarator [ Ptr::Null ] 
                                                               / DirectDeclarator::DirectDeclarator [ getTypeName() = 'BSTR' ] 
                                                                                                                    [ $0 := getName() ] ]
                                      / Init::CopyInitializer [ not Expr::LiteralExpr [ getIntValue() = 0 ] ]
                                                                              [ not Expr.isBSTRCompatible() ]
           </pattern>
                <pattern>
                    // InitDeclarator [ Declarator::Declarator [ Ptr::Null ]
                                                               / DirectDeclarator::DirectDeclarator [ getTypeName() = 'BSTR' ] 
                                                                                                                    [ $0 := getName() ] ]
                                      / Init::CopyInitializer [ Expr.isPointerToChar() |
                                                                                Expr::* [ isPointerToWChar() ]
                                                                                        [ assembleString().length() != 0 ] ]
           </pattern>
            </error>
            <error enabled="false" id="BSTR.IA.ASSIGN" identification="" message="BSTR variable is assigned a non-BSTR value" severity="8" title="BSTR variable is assigned a non-BSTR value" upkid="29">
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_ASSIGN ] ]
                                  [ Left::* [ getTypeName() = 'BSTR' ] ]
                                  [ not Right::LiteralExpr [ getIntValue() = 0 ] ] 
                                                  [ not Right.isBSTRCompatible() ]
           </pattern>
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_ASSIGN ] ]
                                  [ Left::* [ getTypeName() = 'BSTR' ] ]
                                  [ Right.isPointerToChar() |
                                                    Right::* [ isPointerToWChar() ]
                                                             [ assembleString().length() != 0 ] ]
           </pattern>
            </error>
        </checker>
        <checker id="BSTR.OPS">
            <error enabled="false" id="BSTR.OPS.EQS" identification="" message="Illegal equality comparison of BSTR values" severity="8" title="Illegal equality comparison of BSTR values" upkid="33">
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_EQ |
                                             @Code = KTC_OPCODE_NE ] ]
                                  [ Left::* [ getTypeName() = 'BSTR' ] ]
                                  [ not Right::LiteralExpr [ getIntValue() = 0 ] ]
                                  [ not Right.isBSTRCompatible() ]
           </pattern>
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_EQ |
                                             @Code = KTC_OPCODE_NE ] ]
                                  [ Right::* [ getTypeName() = 'BSTR' ] ]
                                  [ not Left::LiteralExpr [ getIntValue() = 0 ] ]
                                  [ not Left.isBSTRCompatible() ]
           </pattern>
            </error>
            <error enabled="false" id="BSTR.OPS.COMP" identification="" message="Illegal comparison of BSTR values" severity="8" title="Illegal comparison of BSTR values" upkid="32">
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_LT |
                                             @Code = KTC_OPCODE_GT |
                                             @Code = KTC_OPCODE_LE |
                                             @Code = KTC_OPCODE_GE ] ]
                                  [ Left.getTypeName() = 'BSTR' |
                                    Right.getTypeName() = 'BSTR' ]
           </pattern>
            </error>
            <error enabled="false" id="BSTR.OPS.ARITHM" identification="" message="Illegal arithmetic operations with BSTR values" severity="8" title="Illegal arithmetic operations with BSTR values" upkid="31">
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_ADDASSIGN |
                                             @Code = KTC_OPCODE_SUBASSIGN ] ]
                                  [ Left.getTypeName() = 'BSTR' ]
           </pattern>
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_ASSIGN ] ]
                                  [ Left.getTypeName() = 'BSTR' ]
                                  [ Right::BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_ADD |
                                                                 @Code = KTC_OPCODE_ADDASSIGN |
                                                                 @Code = KTC_OPCODE_SUB |
                                                                 @Code = KTC_OPCODE_SUBASSIGN ] ]
                                                      [ Left.getTypeName() = 'BSTR' |
                                                        Right.getTypeName() = 'BSTR' ] ]
           </pattern>
                <pattern>
                    // UnaryExpr [ Op::Op [ @Code = KTC_OPCODE_PREINC |
                                            @Code = KTC_OPCODE_PREDEC |
                                            @Code = KTC_OPCODE_POSTINC |
                                            @Code = KTC_OPCODE_POSTDEC ] ]
                                 [ Expr.getTypeName() = 'BSTR' ]
           </pattern>
            </error>
        </checker>
        <checker id="CCOMBSTR.OPS">
            <error enabled="false" id="CCOMBSTR.OPS.TERN" identification="" message="CComBSTR is used as a condition in conditional operation" severity="8" title="CComBSTR is used as a condition in conditional operation" upkid="38">
                <pattern>
                    // ConditionalExpr [ Cond.getTypeName() = 'CComBSTR' ]
            </pattern>
            </error>
        </checker>
        <checker id="BSTR.FUNC">
            <libraries>
                <library path="kwCOM"/>
            </libraries>
            <error autogroupby="0" enabled="false" id="BSTR.FUNC.ALLOC" identification="" message="Incorrect call to BSTR allocating function '{0}'" severity="8" title="Incorrect call to BSTR allocating function" upkid="25">
                <pattern>
                    // CallExpr [ Func::IdExpr [ @Id = 'SysAllocString' |
                                                 @Id = 'SysAllocStringLen' ] 
                                                               [ $0 := @Id ] ]
                                [ Args[0]::* [ getTypeName() = 'BSTR' |
                                               getTypeName() = 'CComBSTR' ] ]
            </pattern>
            </error>
            <error autogroupby="0" enabled="false" id="BSTR.FUNC.REALLOC" identification="" message="Incorrect call to BSTR reallocating function '{0}'" severity="8" title="Incorrect call to BSTR reallocating function" upkid="28">
                <pattern>
                    // CallExpr [ Func::IdExpr [ @Id = 'SysReAllocString' |
                                                 @Id = 'SysReAllocStringLen' ] 
                                                               [ $0 := @Id ] ]
                                [ not Args[0]::* [ isPointerToBSTR() ] ]
            </pattern>
                <pattern>
                    // CallExpr [ Func::IdExpr [ @Id = 'SysReAllocString' |
                                                 @Id = 'SysReAllocStringLen' ] 
                                                               [ $0 := @Id ] ]
                                [ Args[1]::* [ getTypeName() = 'BSTR' |
                                               getTypeName() = 'CComBSTR' ] ]
            </pattern>
            </error>
            <error autogroupby="0" enabled="false" id="BSTR.FUNC.LEN" identification="" message="Trying to get length of non-BSTR string using BSTR-related function '{0}'" severity="8" title="Trying to get length of non-BSTR string using BSTR-related functions" upkid="27">
                <pattern>
                    // CallExpr [ Func::IdExpr [ @Id = 'SysStringLen' |
                                                 @Id = 'SysStringByteLen' ] 
                                                               [ $0 := @Id ] ]
                                [ Args[0]::* [ $name := getTypeName() ]
                                             [ $name != 'BSTR' ]
                                             [ $name != 'CComBSTR' ]
                                             [ $name != 'bstr_t' ]
                                             [ $name != '_bstr_t' ] ]
            </pattern>
            </error>
            <error enabled="false" id="BSTR.FUNC.FREE" identification="" message="Incorrect call to BSTR freeing function" severity="8" title="Incorrect call to BSTR freeing function" upkid="26">
                <pattern>
                    // CallExpr [ Func::IdExpr [ @Id = 'SysFreeString' ] ]
                                [ Args[0]::* [ $name := getTypeName() ]
                                             [ $name != 'BSTR' ] ]
            </pattern>
            </error>
        </checker>
        <checker id="BSTR.CONV">
            <error enabled="false" id="BSTR.CAST.C" identification="" message="C style type cast to BSTR" severity="8" title="C style type cast to BSTR" upkid="23">
                <pattern>
                     // CastExpr [ getTypeName() = 'BSTR' ]
                                [ not Expr.isBSTRCompatible() ]
            </pattern>
            </error>
            <error enabled="false" id="BSTR.CAST.CPP" identification="" message="C++ style type cast to BSTR" severity="8" title="C++ style type cast to BSTR" upkid="24">
                <pattern>
                    // SpecialCastExpr [ getTypeName() = 'BSTR' ]
                                       [ not Expr.isBSTRCompatible() ]
            </pattern>
            </error>
        </checker>
    </checkergroup>
    <checkergroup api="tree_pattern" directory="C:\Klocwork\User 9.2\plugins" id="CXXX_kast_checkers" language="C/C++">
        <checker id="CWARN.PASSBYVALUE">
            <error autogroupby="0" enabled="false" id="CWARN.PASSBYVALUE.ARG" identification="" message="Argument '{0}' of function '{1}' is too large but passed by value" severity="8" title="Function argument passed by value is too large" upkid="118">
                <pattern>
                                    // FuncDeclarator  [ ancestor::FuncDef ]
                                                       [ $1 := getName() ]
                                                       / Params[*]::Decl [ InitDeclarators[*]::InitDeclarator
                                                  [ $type := getInitialDefinedType() ]
                                                                               [ not $type.isArray() ] 
                                                                               [ not $type.isPointer() ] 
                                                                               [ not $type.isReference() ] 
                                                                               [ $type.getTypeSize() > 128 ] 
                                                                               [ $0 := getName() ] ]
       </pattern>
            </error>
            <error autogroupby="0" enabled="false" id="CWARN.PASSBYVALUE.EXC" identification="" message="Exception object '{0}' passed by value is too large" severity="8" title="Exception object passed by value is too large" upkid="119">
                <pattern>
                                    // Handler / Exception::Exception [ MaybeDeclarator::Declarator  
                                 [ $type := getInitialDefinedType() ]
                                                     [ not $type.isArray() ] 
                                                 [ not $type.isPointer() ] 
                                             [ not $type.isReference() ]  
                                             [ $type.getTypeSize() > 64 ] 
                                                     [ $0 := getName() ] ]
           </pattern>
            </error>
        </checker>
        <checker id="CWARN.NOEFFECT">
            <error enabled="true" id="CWARN.NOEFFECT.UCMP.LT" identification="" message="Comparison of unsigned value against 0 is always false" severity="8" title="Comparison of unsigned value against 0 is always false" upkid="113">
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_LT ] 
                                                           [ not comesFromMacro() ] ]
                                                  [ Left.isUnsigned() ]
                                                  [ Right.getIntValue() = 0 ]
       </pattern>
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_GT ] 
                                                           [ not comesFromMacro() ] ]
                                                  [ Right.isUnsigned() ]
                                                  [ Left.getIntValue() = 0 ]
       </pattern>
            </error>
            <error enabled="true" id="CWARN.NOEFFECT.UCMP.GE" identification="" message="Comparison of unsigned value against 0 is always true" severity="8" title="Comparison of unsigned value against 0 is always true" upkid="111">
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_GE ] 
                                                           [ not comesFromMacro() ] ]
                                                  [ Left.isUnsigned() ]
                                                  [ Right.getIntValue() = 0 ]
       </pattern>
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_LE ] 
                                                           [ not comesFromMacro() ] ]
                                                  [ Right.isUnsigned() ]
                                                  [ Left.getIntValue() = 0 ]
       </pattern>
            </error>
            <error enabled="false" id="CWARN.NOEFFECT.UCMP.LT.MACRO" identification="" message="Comparison of unsigned value against 0 within a macro is always false" severity="8" title="Comparison of unsigned value against 0 within a macro is always false" upkid="114">
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_LT ]
                                                           [ comesFromMacro() ] ]
                                                  [ Left.isUnsigned() ]
                                                  [ Right.getIntValue() = 0 ]
           </pattern>
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_GT ]
                                                           [ comesFromMacro() ] ]
                                                  [ Right.isUnsigned() ]
                                                  [ Left.getIntValue() = 0 ]
       </pattern>
            </error>
            <error enabled="false" id="CWARN.NOEFFECT.UCMP.GE.MACRO" identification="" message="Comparison of unsigned value against 0 within a macro is always true" severity="8" title="Comparison of unsigned value against 0 within a macro is always true" upkid="112">
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_GE ]
                                                           [ comesFromMacro() ] ]
                                                  [ Left.isUnsigned() ]
                                                  [ Right.getIntValue() = 0 ]
           </pattern>
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_LE ]
                                                           [ comesFromMacro() ] ]
                                                  [ Right.isUnsigned() ]
                                                  [ Left.getIntValue() = 0 ]
       </pattern>
            </error>
            <error enabled="false" id="CWARN.NOEFFECT.SELF_ASSIGN" identification="" message="Variable '{0}' is assigned to self" severity="8" title="A variable is assigned to self" upkid="110">
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_ASSIGN ] ]
                                                  [ Right.isVariable() ]
                                                  [ Right.getSemanticInfo() = Left.getSemanticInfo() ]
                </pattern>
                <pattern>
                                    // MemberInitializer [ Name.isVariable() ]
                                                         [ Name.getSemanticInfo() = getSemanticInfo(Args[0]::*) ]
                </pattern>
            </error>
        </checker>
        <checker id="CWARN.OVERRIDE">
            <error autogroupby="0" enabled="true" id="CWARN.OVERRIDE.CONST" identification="" message="Mismatch in 'const' qualifiers when overriding function '{0}'" severity="8" title="Function overriding fails due to mismatch of 'const' qualifiers" upkid="116">
                <pattern>
                                    // MemberDecl [ $isconst := isConst(MemberDeclarators[*]::MemberDeclarator) ]
                                                  [ $rettype := getReturnType(MemberDeclarators[*]::MemberDeclarator) ]
                                                  [ $rettype != 0 ]
                                                  [ $ovrd := getOverridenMethod() ]
                                                  [ $ovrd != 0 ]
                                                  [ $ovrd.isVirtual() ]
                          [ $rettype = $ovrd.getReturnType() ]
                                                  [ $ovrd.isConst() != $isconst ]
                                                  [ $0 := $ovrd.getName() ]
       </pattern>
                <pattern>
                                    // MemberFunc [ $isconst := isConst() ]
                                                  [ $rettype := getReturnType() ]
                                                  [ $rettype != 0 ]
                                                  [ $ovrd := getOverridenMethod() ]
                                                  [ $ovrd != 0 ]
                                                  [ $ovrd.isVirtual() ]
                          [ $rettype = $ovrd.getReturnType() ]
                                                  [ $ovrd.isConst() != $isconst ]
                                                  [ $0 := $ovrd.getName() ]
       </pattern>
            </error>
        </checker>
        <checker id="CWARN.NULLCHECK.FUNCNAME">
            <error enabled="true" id="CWARN.NULLCHECK.FUNCNAME" identification="" message="Direct comparison of function address against 0" severity="8" title="Function address was directly compared against 0" upkid="115">
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code=KTC_OPCODE_EQ | @Code=KTC_OPCODE_NE ] ]
                                                  [ Left.isFunction() ]
                                                  [ Right.getIntValue() = 0 ]
       </pattern>
                <pattern>
                                    // BinaryExpr [ Op::Op [ @Code=KTC_OPCODE_EQ | @Code=KTC_OPCODE_NE ] ]
                                                  [ Right.isFunction() ]
                                                  [ Left.getIntValue() = 0 ]
       </pattern>
            </error>
        </checker>
        <checker id="CWARN.COPY.NOASSIGN">
            <error autogroupby="0" enabled="false" id="CWARN.COPY.NOASSIGN" identification="" message="Class '{0}' defines a copy constructor, but no assignment operator" severity="8" title="Class defines copy constructor, but no assignment operator" upkid="101">
                <pattern>
                                    // ClassType
                                       [ MemberDecls[*]::MemberDecl
                                           / MemberDeclarators[*]::MemberDeclarator [ isCopyConstructor() ]
                                        | MemberDecls[*]::MemberFunc / FuncDef::FuncDef
                                           / Declarator::Declarator [ isCopyConstructor() ] ]
                                       [ not MemberDecls[*]::MemberDecl
                                           / MemberDeclarators[*]::MemberDeclarator [ isAssignmentOperator() ] ]
                                       [ not MemberDecls[*]::MemberFunc / FuncDef::FuncDef
                                           / Declarator::Declarator [ isAssignmentOperator() ] ]
                                       [ $0 := getName() ]
           </pattern>
            </error>
        </checker>
        <checker id="CWARN.DTOR.NONVIRTUAL">
            <error autogroupby="0" enabled="true" id="CWARN.DTOR.NONVIRT.DELETE" identification="" message="Object of class '{0}' with virtual methods and no virtual destructor is deleted" severity="6" title="Delete expression for an object of a class with virtual methods and no virtual destructor" upkid="102">
                <pattern>
                                   // DeleteExpr [ $pointed := Expr.getPointedType() ]
                                                 [ $pointed.hasVirtualMethods() ] 
                                                 [ $method := getSemanticInfo(ancestor::FuncDef) ]
                                                 [ $method.getParent() != $pointed |
                                                   not $method.isVirtual() ]
                                                 [ $destructor := $pointed.getDestructor() ]
                                                 [ $destructor.isPublic() ]
                                                 [ not $destructor.isVirtual() ]
                                                 [ $0 := $pointed.getName() ]
                </pattern>
            </error>
            <error autogroupby="0" enabled="true" id="CWARN.DTOR.NONVIRT.NOTEMPTY" identification="" message="Class '{0}' has virtual methods inherited from a base class, but its destructor is not virtual and not empty" severity="6" title="Class has virtual functions inherited from a base class, but its destructor is not virtual and not empty" upkid="103">
                <pattern>
                                   // FuncDef [ isDestructor() ]
                                              [ isPublic() ]
                                              [ not isVirtual() ]
                                              [ FuncBody::FuncBody / Stmt::CompoundStmt / Stmts[*]::* ]
                                              [ $class := getParent() ]
                                              [ $class.hasInheritedVirtualMethods() ]
                                              [ $0 := $class.getName() ]
                </pattern>
            </error>
        </checker>
        <checker id="CWARN.CHECKERS">
            <error enabled="true" id="CWARN.BOOLOP.INC" identification="" message="Increment or decrement of boolean is deprecated" severity="8" title="A boolean is incremented or decremented" upkid="94">
                <pattern>
                       // UnaryExpr [ Op::Op [ @Code = KTC_OPCODE_PREINC | 
                                               @Code = KTC_OPCODE_POSTINC | 
                                               @Code = KTC_OPCODE_PREDEC | 
                                               @Code = KTC_OPCODE_POSTDEC ] ]
                                    [ Expr.getTypeName() = 'bool' ] 
           </pattern>
            </error>
            <error enabled="false" id="CWARN.EMPTY.LABEL" identification="" message="A label statement immediately followed by '}'" severity="8" title="Empty label statement" upkid="104">
                <pattern>
                      // LabeledStmt [ Stmt::Null ] 
           </pattern>
            </error>
            <error enabled="true" id="CWARN.RET.MAIN" identification="" message="Return type of 'main' should be 'int'" severity="8" title="Bad return type of main" upkid="120">
                <pattern>
                      // FuncDef [ getName() = 'main' ]
                                 [ Declarator::Declarator / DirectDeclarator::FuncDeclarator 
                                       [ getReturnType().getTypeName() != 'int' ] ] 
           </pattern>
                <pattern>
                      // FuncDef [ getName() = 'main' ]
                                 [ Declarator::Declarator / DirectDeclarator::KRFuncDeclarator 
                                       [ getReturnType().getTypeName() != 'int' ] ] 
           </pattern>
            </error>
            <error enabled="false" id="CWARN.EMPTY.TYPEDEF" identification="" message="The declarator in a typedef is missing" severity="8" title="Missing typedef name" upkid="105">
                <pattern>
                       // Decl [ DeclSpecs[*]::StorageClass [ @Spec = KTC_STORAGECLASS_TYPEDEF ] ] 
                               [ InitDeclarators::Null ]
                   
           </pattern>
            </error>
            <error autogroupby="0" enabled="true" id="CWARN.SIGNEDBIT" identification="" message="Bit field '{0}' has one bit and is signed" severity="8" title="Signed one bit field" upkid="121">
                <pattern>
                      // MemberDecl  
                             [ MemberDeclarators[*]::MemberDeclarator [ Bits::LiteralExpr [ getIntValue() = 1 ] ] 
                                                                      [ $0 := getName() ]
                             [ Declarator::Declarator.isSigned() ] ]
           </pattern>
            </error>
            <error enabled="false" id="CWARN.INLINE.NONFUNC" identification="" message="The 'inline' keyword is applied to something other than a function or method" severity="8" title="'inline' used with non-function" upkid="109">
                <pattern>
                      // Decl [ DeclSpecs[*]::FuncSpec [ @Spec = KTC_FUNCSPECIFIER_INLINE ] ] 
                              [ not InitDeclarators[*]::InitDeclarator [ isFunction() | 
                                                                         isFunctionTemplate() | 
                                                                         isFunctionInstantiation() | 
                                                                         isFunctionSpecialization()] ]
                </pattern>
                <pattern>
                     // MemberDecl [ DeclSpecs[*]::FuncSpec [ @Spec = KTC_FUNCSPECIFIER_INLINE ] ] 
                                   [ not MemberDeclarators[*]::MemberDeclarator [ isFunction() | 
                                                                                  isFunctionTemplate() | 
                                                                                  isFunctionInstantiation() | 
                                                                                  isFunctionSpecialization() ] ]
                </pattern>
            </error>
            <error enabled="false" id="CWARN.IMPLICITINT" identification="" message="Use of anachronistic 'implicit int' rule in declaration" severity="8" title="Anachronistic 'implicit int'" upkid="108">
                <pattern>
                      // FuncDef [ not DeclSpecs[*]::AnyTypeOf ] 
                                 [ not DeclSpecs[*]::ReservedTypeSpec ]
                                 [ not DeclSpecs[*]::ClassType ]                
                                 [ not DeclSpecs[*]::EnumType ]
                                 [ not DeclSpecs[*]::TypeName ]
                                 [ not Declarator.isConstructor() ]
                                 [ not Declarator.isDestructor() ]
                                 [ not Declarator.isConvFunc() ] 
           </pattern>
                <pattern>
                      // Decl [ not InitDeclarators::Null ] 
                              [ not DeclSpecs[*]::AnyTypeOf ] 
                              [ not DeclSpecs[*]::ReservedTypeSpec ]
                              [ not DeclSpecs[*]::ClassType ]                
                              [ not DeclSpecs[*]::EnumType ]
                              [ not DeclSpecs[*]::TypeName ]
           </pattern>
                <pattern>
                      // MemberDecl [ not MemberDeclarators::Null ]
                                    [ not DeclSpecs[*]::AnyTypeOf ] 
                                    [ not DeclSpecs[*]::ReservedTypeSpec ]
                                    [ not DeclSpecs[*]::ClassType ]                
                                    [ not DeclSpecs[*]::EnumType ]
                                    [ not DeclSpecs[*]::TypeName ]
                                    [ not isConstructor(MemberDeclarators[*]::*) ]
                                    [ not isDestructor(MemberDeclarators[*]::*) ]
                                    [ not isConvFunc(MemberDeclarators[*]::*) ] 
           </pattern>
            </error>
            <error autogroupby="0" enabled="false" id="CWARN.FUNCADDR" identification="" message="Address of function '{0}' is used instead of a call to this function" severity="6" title="Function address is used instead of a call to this function" upkid="106">
                <pattern>
                      // IdExpr [ isFunction() ]
                                [ parent::AnyExpr [ Op::Op [ not isOverloaded() ]
                                                           [ @Code != KTC_OPCODE_NONE ] 
                                                           [ @Code != KTC_OPCODE_COMMA ] 
                                                           [ @Code != KTC_OPCODE_EQ ] 
                                                           [ @Code != KTC_OPCODE_NE ] 
                                                           [ @Code != KTC_OPCODE_CAST ] 
                                                           [ @Code != KTC_OPCODE_ADDRESS ] 
                                                           [ @Code != KTC_OPCODE_ROUND_BRACKETS ] 
                                                           [ @Code != KTC_OPCODE_COND ] 
                                                           [ @Code != KTC_OPCODE_ASSIGN ] ] |
                                  parent::IfStmt |
                                  parent::DoStmt |
                                  parent::ForStmt |
                                  parent::WhileStmt |
                                  parent::SwitchStmt ]
                                [ $0 := getName() ]
                </pattern>
                <pattern>
                      // MemberExpr [ isFunction() ]
                                    [ parent::AnyExpr [ Op::Op [ not isOverloaded() ]
                                                               [ @Code != KTC_OPCODE_NONE ] 
                                                               [ @Code != KTC_OPCODE_COMMA ] 
                                                               [ @Code != KTC_OPCODE_EQ ] 
                                                               [ @Code != KTC_OPCODE_NE ] 
                                                               [ @Code != KTC_OPCODE_CAST ] 
                                                               [ @Code != KTC_OPCODE_ADDRESS ] 
                                                               [ @Code != KTC_OPCODE_ROUND_BRACKETS ] 
                                                               [ @Code != KTC_OPCODE_COND ]
                                                               [ @Code != KTC_OPCODE_ASSIGN ] ] |
                                      parent::IfStmt |
                                      parent::DoStmt |
                                      parent::ForStmt |
                                      parent::WhileStmt |
                                      parent::SwitchStmt ]
                                    [ $0 := Name.getName() ]
                </pattern>
                <pattern>
                      // ConditionalExpr / Cond::IdExpr [ isFunction() ]
                                                        [ $0 := getName() ]
                </pattern>
                <pattern>
                      // ConditionalExpr / Cond::MemberExpr [ isFunction() ]
                                                            [ $0 := Name.getName() ]
                </pattern>
            </error>
            <error enabled="false" id="CWARN.CONSTCOND.SWITCH" identification="" message="The condition of 'switch' statement is constant" severity="8" title="'switch' selector expression is constant" upkid="98">
                <pattern>
                      // SwitchStmt [ not comesFromMacro() ]
                                    / Cond::* [ isConstant() ] 
                                              [ not descendant-or-self::SizeOfExpr ]
                                              [ not descendant-or-self::UnaryExpr 
                                                   [ Op::Op [ @Code = KTC_OPCODE_SIZEOF ] ] ]
           </pattern>
            </error>
            <error enabled="false" id="CWARN.CONSTCOND.IF" identification="" message="The condition in 'if' statement is constant" severity="8" title="'if' controlling expression is constant" upkid="97">
                <pattern>
                      // IfStmt [ not comesFromMacro() ]
                                / Cond::* [ isConstant() ] 
                                          [ not descendant-or-self::SizeOfExpr ]
                                          [ not descendant-or-self::UnaryExpr 
                                               [ Op::Op [ @Code = KTC_OPCODE_SIZEOF ] ] ]
                  </pattern>
            </error>
            <error enabled="false" id="CWARN.CONSTCOND.DO" identification="" message="The condition in 'do' statement is constant" severity="8" title="'do' controlling expression is constant" upkid="96">
                <pattern>
                      // DoStmt [ not comesFromMacro() ]
                                [ not Cond::LiteralExpr [ @Value=1 | @Value=0 ] ]
                                [ not Cond::BoolLiteralExpr [ @Value=KTC_BOOLVALUE_TRUE | @Value=KTC_BOOLVALUE_FALSE ] ]
                                / Cond::* [ isConstant() ]
                                          [ not descendant-or-self::SizeOfExpr ]
                                          [ not descendant-or-self::UnaryExpr 
                                               [ Op::Op [ @Code = KTC_OPCODE_SIZEOF ] ] ]
                 </pattern>
            </error>
            <error enabled="false" id="CWARN.CONSTCOND.WHILE" identification="" message="The condition in 'while' statement is constant" severity="8" title="'while' controlling expression is constant" upkid="100">
                <pattern>
                      // WhileStmt [ not comesFromMacro() ]
                                   [ not Cond::LiteralExpr [ @Value=1 ] ]
                                   [ not Cond::BoolLiteralExpr [ @Value=KTC_BOOLVALUE_TRUE ] ]
                                   / Cond::* [ isConstant() ] 
                                             [ not descendant-or-self::SizeOfExpr ]
                                             [ not descendant-or-self::UnaryExpr 
                                                  [ Op::Op [ @Code = KTC_OPCODE_SIZEOF ] ] ]
                </pattern>
            </error>
            <error enabled="false" id="CWARN.CONSTCOND.TERNARY" identification="" message="The condition in conditional expression is constant" severity="8" title="Controlling condition in conditional expression is constant" upkid="99">
                <pattern>
                      // ConditionalExpr [ Op::Op [ not comesFromMacro() ] ]
                                         / Cond::* [ isConstant() ] 
                                                   [ not descendant-or-self::SizeOfExpr ]
                                                   [ not descendant-or-self::UnaryExpr 
                                                        [ Op::Op [ @Code = KTC_OPCODE_SIZEOF ] ] ]
               </pattern>
            </error>
            <error enabled="false" id="CWARN.PACKED.TYPEDEF" identification="" message="gcc 'packed' attribute is applied to a structure or union in type definition" severity="8" title="'packed' attribute ignored in typedef" upkid="117">
                <pattern>
                      // Decl [ DeclSpecs[*]::ClassType 
                                    / AttributeSpecs[*]::AttributeSpec 
                                          / Attributes[*]::Attribute 
                                                [ @Name = KTC_ATTRIBUTE_PACKED ] ]
                              [ DeclSpecs[*]::StorageClass 
                                    [ @Spec = KTC_STORAGECLASS_TYPEDEF ] ]
                </pattern>
            </error>
            <error autogroupby="0" enabled="false" id="CWARN.HIDDEN.PARAM" identification="" message="A formal parameter '{1}' of function '{0}' is hidden by a local variable" severity="8" title="Parameter hidden by local variable" upkid="107">
                <pattern>
                      // Decl [ InitDeclarators[*]::InitDeclarator [ $local := getName() ] ]
                              [ not ancestor::FuncDeclarator ]
                              [ ancestor::FuncBody 
                                   [ parent::FuncDef [ $0 := getName() ] / Declarator::Declarator / 
                                        DirectDeclarator::FuncDeclarator / Params[*]::Decl / 
                                            InitDeclarators[*]::InitDeclarator [ getName() = $local ] ] 
                                   [ $body := this() ] ]
                              [ not ancestor::ClassType / ancestor::FuncBody [ this() = $body ] ] 
                              [ $1 := $local ]
                </pattern>
            </error>
            <error autogroupby="0" enabled="false" id="CWARN.CMPCHR.EOF" identification="" message="A 'char' expression is compared with EOF constant" severity="8" title="A 'char' expression compared with EOF constant" upkid="95">
                <pattern>
                      // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_EQ | @Code = KTC_OPCODE_NE ] ]
                                    [ Left.getBaseIntegralTypeName() = 'char' ]
                                    [ Right:: { ParensExpr / Expr:: } AnyExpr [ getIntValue() = 0-1 ] 
                                                                              [ pretty() = 'EOF' ] ]
                </pattern>
            </error>
        </checker>
    </checkergroup>
    <checkergroup api="tree_pattern" directory="C:\Klocwork\User 9.2\plugins" id="PORTING.KAST" language="C/C++">
        <checker id="PORTING.CHAR">
            <error autogroupby="0" enabled="false" id="PORTING.SIGNED.CHAR" identification="" message="'char' used without explicitly specifying signedness" severity="6" title="'char' used without explicitly specifying signedness" upkid="242">
                <pattern>
                        // BuiltinType [ @Spec = KTC_BUILTINTYPE_CHAR ]
                                       [ not parent::Node [ DeclSpecs[*]::TypeAdjective [ @Spec = KTC_ADJECTIVE_UNSIGNED | @Spec = KTC_ADJECTIVE_SIGNED ] ] ]
                                       [ not isMacroDefined('KW_SIGNED_CHAR') ]
                                       [ not isMacroDefined('KW_UNSIGNED_CHAR') ]
                    </pattern>
            </error>
            <error autogroupby="0" enabled="false" id="PORTING.UNSIGNEDCHAR.RELOP" identification="" message="Do not use relational operations between explicitly signed/unsigned char and char without signedness specification" severity="6" title="Relational operations used between explicitly signed/unsigned char and char without signedness specification" upkid="248">
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code=KTC_OPCODE_LT | 
                                             @Code=KTC_OPCODE_GT | 
                                             @Code=KTC_OPCODE_LE | 
                                             @Code=KTC_OPCODE_GE |
                                             @Code=KTC_OPCODE_EQ |
                                             @Code=KTC_OPCODE_NE ] ]
                                  [ Left.getInitialDefinedType().getTypeName() = 'char' ]
                                  [ not Left::LiteralExpr ]
                                  [ not Right::LiteralExpr ]
                                  [ $right := Right.getInitialDefinedType() ]
                                  [ $right.isUnsigned() | $right.isSigned() ]
                </pattern>
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code=KTC_OPCODE_LT | 
                                             @Code=KTC_OPCODE_GT | 
                                             @Code=KTC_OPCODE_LE | 
                                             @Code=KTC_OPCODE_GE |
                                             @Code=KTC_OPCODE_EQ |
                                             @Code=KTC_OPCODE_NE ] ]
                                  [ Right.getInitialDefinedType().getTypeName() = 'char']
                                  [ not Right::LiteralExpr ]
                                  [ not Left::LiteralExpr ]
                                  [ $left := Left.getInitialDefinedType() ]
                                  [ $left.isUnsigned() | $left.isSigned() ]
                </pattern>
            </error>
            <error enabled="false" id="PORTING.UNSIGNEDCHAR.OVERFLOW.TRUE" identification="" message="Relational expression may be always true depending on 'char' type signedness" severity="6" title="Relational expression may be always true depending on 'char' type signedness" upkid="247">
                <pattern>
                    // BinaryExpr [ Op::Op [ $opcode := @Code ] ]
                                  [ $opcode = KTC_OPCODE_LT |
                                    $opcode = KTC_OPCODE_GT |
                                    $opcode = KTC_OPCODE_LE |
                                    $opcode = KTC_OPCODE_GE |
                                    $opcode = KTC_OPCODE_NE ]
                                  [ Left.getInitialDefinedType().getTypeName() = 'char' ]
                                  [ $rightvalue := Right.getIntValue() ]
                                  [ Right::* [ $opcode = KTC_OPCODE_LT | $opcode = KTC_OPCODE_NE ]
                                             [ $rightvalue > 127 ] |
                                    Right::* [ $opcode = KTC_OPCODE_LE ]
                                             [ $rightvalue >= 127 ] |
                                    Right::* [ $opcode = KTC_OPCODE_GT | $opcode = KTC_OPCODE_NE ]
                                             [ $rightvalue &lt; 0 ] |
                                    Right::* [ $opcode = KTC_OPCODE_GE ]
                                             [ $rightvalue &lt;= 0 ] ]
                </pattern>
                <pattern>
                    // BinaryExpr [ Op::Op [ $opcode := @Code ] ]
                                  [ $opcode = KTC_OPCODE_LT |
                                    $opcode = KTC_OPCODE_GT |
                                    $opcode = KTC_OPCODE_LE |
                                    $opcode = KTC_OPCODE_GE |
                                    $opcode = KTC_OPCODE_NE ]
                                  [ Right.getInitialDefinedType().getTypeName() = 'char' ]
                                  [ $leftvalue := Left.getIntValue() ]
                                  [ Left::* [ $opcode = KTC_OPCODE_GT | $opcode = KTC_OPCODE_NE ]
                                            [ $leftvalue > 127 ] |
                                    Left::* [ $opcode = KTC_OPCODE_GE ]
                                            [ $leftvalue >= 127 ] |
                                    Left::* [ $opcode = KTC_OPCODE_LT | $opcode = KTC_OPCODE_NE ]
                                            [ $leftvalue &lt; 0 ] |
                                    Left::* [ $opcode = KTC_OPCODE_LE ]
                                            [ $leftvalue &lt;= 0 ] ]
                </pattern>
            </error>
            <error enabled="false" id="PORTING.UNSIGNEDCHAR.OVERFLOW.FALSE" identification="" message="Relational expression may be always false depending on 'char' type signedness" severity="6" title="Relational expression may be always false depending on 'char' type signedness" upkid="246">
                <pattern>
                    // BinaryExpr [ Op::Op [ $opcode := @Code ] ]
                                  [ $opcode = KTC_OPCODE_LT |
                                    $opcode = KTC_OPCODE_GT |
                                    $opcode = KTC_OPCODE_LE |
                                    $opcode = KTC_OPCODE_GE |
                                    $opcode = KTC_OPCODE_EQ ]
                                  [ Left.getInitialDefinedType().getTypeName() = 'char' ]
                                  [ $rightvalue := Right.getIntValue() ]
                                  [ Right::* [ $opcode = KTC_OPCODE_LT ]
                                             [ $rightvalue &lt;= 0 ] |
                                    Right::* [ $opcode = KTC_OPCODE_LE | $opcode = KTC_OPCODE_EQ ]
                                             [ $rightvalue &lt; 0 ] |
                                    Right::* [ $opcode = KTC_OPCODE_GT ]
                                             [ $rightvalue >= 127 ] |
                                    Right::* [ $opcode = KTC_OPCODE_GE | $opcode = KTC_OPCODE_EQ ]
                                             [ $rightvalue > 127 ] ]
                </pattern>
                <pattern>
                    // BinaryExpr [ Op::Op [ $opcode := @Code ] ]
                                  [ $opcode = KTC_OPCODE_LT |
                                    $opcode = KTC_OPCODE_GT |
                                    $opcode = KTC_OPCODE_LE |
                                    $opcode = KTC_OPCODE_GE |
                                    $opcode = KTC_OPCODE_EQ ]
                                  [ Right.getInitialDefinedType().getTypeName() = 'char' ]
                                  [ $leftvalue := Left.getIntValue() ]
                                  [ Left::* [ $opcode = KTC_OPCODE_GT ]
                                            [ $leftvalue &lt;= 0 ] |
                                    Left::* [ $opcode = KTC_OPCODE_GE | $opcode = KTC_OPCODE_EQ ]
                                            [ $leftvalue &lt; 0 ] |
                                    Left::* [ $opcode = KTC_OPCODE_LT ]
                                            [ $leftvalue >= 127 ] |
                                    Left::* [ $opcode = KTC_OPCODE_LE | $opcode = KTC_OPCODE_EQ ]
                                            [ $leftvalue > 127 ] ]
                </pattern>
            </error>
        </checker>
        <checker id="PORTING.CAST">
            <error enabled="false" id="PORTING.CAST.SIZE" identification="" message="Expression is cast to a type of potentially different size" severity="6" title="Expression is cast to a type of potentially different size" upkid="234">
                <pattern>
                    // CastExpr [ Type::TypeId [ getInitialDefinedType().isIntegral() ] [ $basetype := getBaseIntegralTypeName() ] ]
                                [ Expr::AnyExpr [ getInitialDefinedType().isIntegral() ] [ $basetype != getBaseIntegralTypeName() ] ]
                </pattern>
            </error>
            <error enabled="false" id="PORTING.CAST.FLTPNT" identification="" message="Cast between types that are not both float point or non float point" severity="6" title="Cast between types that are not both float point or non float point" upkid="230">
                <pattern>
                    // CastExpr [ Type::TypeId [ $isflt := getInitialDefinedType().isFloatPoint() ] ]
                                [ Expr::AnyExpr [ $isflt != getInitialDefinedType().isFloatPoint() ] ]
                </pattern>
            </error>
            <error enabled="false" id="PORTING.CAST.PTR" identification="" message="Cast between types that are not both pointers or not pointers" severity="6" title="Cast between types that are not both pointers or not pointers" upkid="231">
                <pattern>
                    // CastExpr [ Type::TypeId [ $isok := getInitialDefinedType().isPointer() ] ]
                                [ Expr::AnyExpr [ $isok != getInitialDefinedType().isPointer() ] 
                                                [ name() != 'LiteralExpr' ] 
                                                [ getIntValue() != 0 ] ]
                </pattern>
            </error>
            <error enabled="false" id="PORTING.CAST.PTR.SIZE" identification="" message="Attempt to cast an expression to a type of a potentially incompatible size" severity="6" title="Attempt to cast an expression to a type of a potentially incompatible size" upkid="233">
                <pattern>
                    // CastExpr [ Type::TypeId [ $cptype := getInitialDefinedType().getPointedType() ] 
                                               [ $cptype.getInitialDefinedType().isIntegral() ] 
                                               [ $basetype := $cptype.getBaseIntegralTypeName() ] ]
                                [ Expr::AnyExpr [ $optype := getInitialDefinedType().getPointedType() ]
                                                [ $optype.getInitialDefinedType().isIntegral() ]
                                                [ $basetype != $optype.getBaseIntegralTypeName() ] ]
                </pattern>
            </error>
            <error enabled="false" id="PORTING.CAST.PTR.FLTPNT" identification="" message="Cast between pointers to types that are not both float point or non float point" severity="6" title="Cast between pointers to types that are not both float point or non float point" upkid="232">
                <pattern>
                    // CastExpr [ Type::TypeId [ $isflt := getInitialDefinedType().getPointedType().getInitialDefinedType().isFloatPoint() ] ]
                                [ Expr::AnyExpr [ $isflt != getInitialDefinedType().getPointedType().getInitialDefinedType().isFloatPoint() ] ]
                </pattern>
            </error>
        </checker>
        <checker id="PORTING.STRUCT">
            <error enabled="false" id="PORTING.UNIONS" identification="" message="Use of a union within an enclosing struct/class/other union is discouraged" severity="6" title="Union is used within an enclosing struct/class/other union" upkid="245">
                <pattern>
                    // MemberDecl [ DeclSpecs[*]::ClassType [ @Tag = KTC_CLASSTAG_UNION ] ]
                </pattern>
            </error>
            <error enabled="false" id="PORTING.STRUCT.BOOL" identification="" message="Struct/class has a bool member" severity="6" title="Struct/class has a bool member" upkid="244">
                <pattern>
                    // MemberDecl [ parent::ClassType [ @Tag = KTC_CLASSTAG_STRUCT | @Tag = KTC_CLASSTAG_CLASS ] ]
                                  [ MemberDeclarators[*]::MemberDeclarator [ getInitialDefinedType().getTypeName() = 'bool' ] ]
                </pattern>
            </error>
        </checker>
        <checker id="PORTING.SWAP.MACROS">
            <error enabled="false" id="PORTING.BYTEORDER.SIZE" identification="" message="An incompatible type is used with a network macro such as 'ntohl'" severity="6" title="An incompatible type is used with a network macro such as 'ntohl'" upkid="229">
                <pattern>
                    //CallExpr [ Func::IdExpr [ $name := @Id] [ $name = 'htons' | $name = 'ntohs' ] ]
                               [ Args[0]::AnyExpr [ getTypeSize() != 2 ] ]
                </pattern>
                <pattern>
                    //CallExpr [ Func::IdExpr [ $name := @Id] [ $name = 'htonl' | $name = 'ntohl' ] ]
                               [ Args[0]::AnyExpr [ getTypeSize() != 4 ] ]
                </pattern>
            </error>
        </checker>
        <checker id="PORTING.CMPSPEC.EFFECTS">
            <error enabled="false" id="PORTING.CMPSPEC.EFFECTS.ASSIGNMENT" identification="" message="Do not use an assignment in a function parameter" severity="6" title="Assignment in a function parameter" upkid="235">
                <pattern>
                    // CallExpr [ Args[*]::AnyExpr / descendant-or-self::BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_ASSIGN ] ] 
]
                </pattern>
            </error>
        </checker>
        <checker id="PORTING.BITFIELDS">
            <error enabled="false" id="PORTING.BITFIELDS" identification="" message="Do not use bitfields within a structure" severity="6" title="Usage of bitfields within a structure" upkid="227">
                <pattern>
                    // MemberDeclarator [ Bits[*]::AnyExpr ] [ not isEndianChecked() ]
                </pattern>
            </error>
        </checker>
        <checker id="PORTING.MATHDATATYPE">
            <error enabled="false" id="PORTING.CMPSPEC.TYPE.LONGLONG" identification="" message="Do not use a 'long long' type as this is architecture dependent" severity="6" title="Use of 'long long'" upkid="237">
                <pattern>
                    // Declarator [ DirectDeclarator.getInitialDefinedType().getTypeName().contains('long long') ]
                </pattern>
            </error>
            <error enabled="false" id="PORTING.CMPSPEC.TYPE.BOOL" identification="" message="Assignment to a 'bool' type is larger than 1 byte" severity="6" title="Assignment to a 'bool' type is larger than 1 byte" upkid="236">
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_ASSIGN ] ]
                                  [ Left::AnyExpr [ isBoolean() ] ] 
                                  [ Right::AnyExpr [ $value := getIntValue() ]
                                                   [ $value &lt; 0 | $value > 127 ] ]
                </pattern>
                <pattern>
                    // BinaryExpr [ Op::Op [ @Code = KTC_OPCODE_ASSIGN ] ]
                                  [ Left::AnyExpr [ isBoolean() ] ]
                                  [ not Right::AnyExpr [ $hidden := getIntValue() ] ] 
                                  [ Right::AnyExpr [ getTypeSize() > 1 ] ]
                </pattern>
            </error>
        </checker>
    </checkergroup>
    <checkergroup api="tree_pattern" directory="C:\Klocwork\User 9.2\plugins\csharp" id="C# tree checkers" language="CSharp">
        <checker id="CS.TREE">
            <error enabled="true" id="CS.IFACE.EMPTY" identification="" message="Empty interface" severity="8" title="Empty interface" upkid="69">
                <pattern>
					// InterfaceDecl [ body::Null ]
					                 [ not base[1]::* ]
				</pattern>
            </error>
            <error enabled="true" id="CS.HIDDEN.MEMBER.LOCAL.CLASS" identification="" message="Data member '{0}' of class '{1}' is hidden by a local variable" severity="8" title="Member is hidden by a local variable" upkid="65">
                <pattern>
					// VarDeclarator [ $name := @ident ] 
					                 [ ancestor::Block / parent::* [ $mname := name() ]
					                                               [ $mname = 'MethodDecl' | 
					                                                 $mname = 'ConstructorDecl' |
					                                                 $mname = 'DestructorDecl' |
					                                                 $mname = 'OperatorDecl' ]
					                                               / parent::ClassDecl [ getLanguageType().getScopeMember($name) != 0 ]
                                                                                                           [ $1 := @ident ] ]				
                                                         [ $0 := $name ]
				</pattern>
            </error>
            <error enabled="true" id="CS.HIDDEN.MEMBER.LOCAL.STRUCT" identification="" message="Data member '{0}' of struct '{1}' is hidden by a local variable" severity="8" title="Member is hidden by a local variable" upkid="66">
                <pattern>
					// VarDeclarator [ $name := @ident ] 
					                 [ ancestor::Block / parent::* [ $mname := name() ]
					                                               [ $mname = 'MethodDecl' | 
					                                                 $mname = 'ConstructorDecl' |
					                                                 $mname = 'DestructorDecl' |
					                                                 $mname = 'OperatorDecl' ]
					                                               / parent::StructDecl [ getLanguageType().getScopeMember($name) != 0 ]
                                                                                                            [ $1 := @ident ] ]				
                                                         [ $0 := $name ]
				</pattern>
            </error>
            <error enabled="true" id="CS.HIDDEN.MEMBER.PARAM.CLASS" identification="" message="Data member '{0}' of class '{1}' is hidden by a function parameter" severity="8" title="Member is hidden by a parameter" upkid="67">
                <pattern>
					// FixedParameter [ $name := @ident ] 
					                  [ ancestor::ClassDecl [ getLanguageType().getScopeMember($name) != 0 ]
                                                                                [ $1 := @ident ] ]	
					                  [ not ancestor::ConstructorDecl ]			                        
					                  [ $0 := $name ]
				</pattern>
            </error>
            <error enabled="true" id="CS.HIDDEN.MEMBER.PARAM.STRUCT" identification="" message="Data member '{0}' of struct '{1}' is hidden by a function parameter" severity="8" title="Member is hidden by a parameter" upkid="68">
                <pattern>
					// FixedParameter [ $name := @ident ] 
					                  [ ancestor::StructDecl [ getLanguageType().getScopeMember($name) != 0 ]
                                                                                 [ $1 := @ident ] ]	
					                  [ not ancestor::ConstructorDecl ]			                        
					                  [ $0 := $name ]
				</pattern>
            </error>
            <error enabled="true" id="CS.EMPTY.CATCH" identification="" message="Catch clause is empty" severity="8" title="Empty catch clause" upkid="62">
                <pattern>
					// CatchClause [ catchBody::Block / stmts::Null ]
				</pattern>
            </error>
            <error enabled="true" id="CS.FLOAT.EQCHECK" identification="" message="Equality check on floating point type" severity="8" title="Equality check on floating point type" upkid="63">
                <pattern>
					// BinaryExpr [ @operation = CSCONST_EQUAL | @operation = CSCONST_NEQUAL ]
					              [ leftExpr.isFloatPoint() | rightExpr.isFloatPoint() ] 
				</pattern>
            </error>
            <error enabled="true" id="CS.CTOR.VIRTUAL" identification="" message="Virtual method is called from constructor" severity="8" title="Virtual member call in constructor" upkid="61">
                <pattern>
					// InvocationExpr [ $parent := getParent() ]
					                  [ ancestor::ConstructorDecl [ $parent = getParent() ] ]
					                  [ isVirtual() ]
				</pattern>
            </error>
            <error enabled="true" id="CS.WRONGUSE.REFEQ" identification="" message="'Object.ReferenceEquals' is called with a value type argument" severity="8" title="Improper usage of Object.ReferenceEquals" upkid="93">
                <pattern>
					// InvocationExpr [ expr::SimpleName [ @ident = 'ReferenceEquals' ] |
					                    expr::MemberAccessPrimaryExpr [ @ident = 'ReferenceEquals' ] | 
					                    expr::MemberAccessQualifiedAliasExpr [ @ident = 'ReferenceEquals' ] ]
					                  [ arguments[0]::Argument [ isValueType() ] |
					                    arguments[1]::Argument [ isValueType() ] ]
				</pattern>
            </error>
            <error enabled="true" id="CS.WRONGSIG.CMPTO" identification="" message="Method 'CompareTo' has wrong signature" severity="8" title="Wrong signature of 'CompareTo' method" upkid="92">
                <pattern>
					// MethodDecl [ name::SimpleName [ @ident = 'CompareTo' ] ]
					              [ not returnType::PredefinedType [ @type = CSCONST_INT ] | 
					                @modifiers != 4 |
					                not formalParameters::FormalParameter |
					                not formalParameters::FormalParameter / arglistOrParameterArray::Null |
					                formalParameters::FormalParameter / fixedParameters[1]::* |
					                not formalParameters::FormalParameter / fixedParameters[0]::FixedParameter 
					                                                          [ type::UserDefinedType [ name::SimpleName [ @ident = 'Object' ] |
					                                                                                    name::QualifiedName [ @ident = 'System' ] 
					                                                                                                        / qualifier::SimpleName [ @ident = 'Object' ] ] |
					                                                            type::PredefinedType [ @type = CSCONST_OBJECT ] ] ]
				</pattern>
            </error>
            <error enabled="true" id="CS.FRACTION.LOSS" identification="" message="Possible loss of fraction when dividing integral values and assigning result to float point entity" severity="8" title="Possible loss of fraction" upkid="64">
                <pattern>
					// BinaryExpr [ @operation = CSCONST_ASSIGN ]
					              [ leftExpr.isFloatPoint() ]
					              [ rightExpr::BinaryExpr [ @operation = CSCONST_DIV | 
					                                        @operation = CSCONST_MOD | 
					                                        @operation = CSCONST_DIVASSIGN | 
					                                        @operation = CSCONST_MODASSIGN ] 
					                                      [ leftExpr.isIntegral() ]
					                                      [ rightExpr.isIntegral() ] ]
				</pattern>
                <pattern>
					// VarDeclarator [ isFloatPoint() ]
					                 [ initializer::VarExprInitializer  / initializer::BinaryExpr [ @operation = CSCONST_DIV | 
					                                                                                @operation = CSCONST_MOD | 
					                                                                                @operation = CSCONST_DIVASSIGN | 
					                                                                                @operation = CSCONST_MODASSIGN ] 
					                                                                              [ leftExpr.isIntegral() ]
					                                                                              [ rightExpr.isIntegral() ] ]			
				</pattern>
            </error>
            <error enabled="true" id="CS.ASSIGN.SELF" identification="" message="Expression is assigned to itself" severity="8" title="Assignment of expression to itself" upkid="54">
                <pattern>
					// BinaryExpr [ @operation = CSCONST_ASSIGN ]
					              [ leftExpr.entityEquals(rightExpr::*) ]	
				</pattern>
            </error>
            <error enabled="true" id="CS.OVRD.EQUALS" identification="" message="'Equals' operator is overridden on a public reference type" severity="8" title="Overriding 'Equals' operator on a reference type" upkid="85">
                <pattern>
					// ClassDecl [ isPublic() ]
					             / body[*]::MethodDecl [ name::SimpleName [ @ident = 'Equals' ] ] 
					                                   [ formalParameters::FormalParameter [ fixedParameters[0]::* [ isReferenceType() ] ]
					                                                                       [ not fixedParameters[1]::* ] ]
				</pattern>
            </error>
            <error enabled="true" id="CS.CMP.VAL.NULL" identification="" message="Value type expression is possibly compared with 'null'" severity="8" title="Possible comparing value type expression with 'null'" upkid="55">
                <pattern>
					// BinaryExpr [ @operation = CSCONST_EQUAL | @operation = CSCONST_NEQUAL ]
					              [ leftExpr::* [ isTypeParameter() ]
					                            [ not isReferenceType() ] ]
					              [ rightExpr::ConstExpr [ @value = 'null' ] ]
				</pattern>
                <pattern>
					// BinaryExpr [ @operation = CSCONST_EQUAL | @operation = CSCONST_NEQUAL ]
					              [ rightExpr::* [ isTypeParameter() ]
					                             [ not isReferenceType() ] ]
					              [ leftExpr::ConstExpr [ @value = 'null' ] ]
				</pattern>
            </error>
            <error enabled="true" id="CS.LOOP.STR.CONCAT" identification="" message="String concatenation in a loop" severity="8" title="String concatenation in a loop" upkid="70">
                <pattern>
					// BinaryExpr [ @operation = CSCONST_PLUSASSIGN ]
					              [ $typename := leftExpr.getTypeName() ]
					              [ $typename = 'string' | $typename = 'String' ]
					              [ ancestor::ForStmt | ancestor::DoStmt | ancestor::WhileStmt | ancestor::ForeachStmt ]
				</pattern>
            </error>
            <error enabled="true" id="CS.CONSTCOND.SWITCH" identification="" message="The condition of 'switch' statement is constant" severity="8" title="'switch' selector expression is constant" upkid="58">
                <pattern>
					// SwitchStmt / switchExpr::* [ isConstant() ]
				</pattern>
            </error>
            <error enabled="true" id="CS.CONSTCOND.IF" identification="" message="The condition in 'if' statement is always true or always false" severity="8" title="'if' controlling expression is always true or always false" upkid="57">
                <pattern>
					// IfStmt / condition::* [ isConstant() ]
				</pattern>
            </error>
            <error enabled="true" id="CS.CONSTCOND.DO" identification="" message="The condition in 'do' statement is always true or always false" severity="8" title="'do' controlling expression is always true or always false" upkid="56">
                <pattern>
					// DoStmt [ not expr::ConstExpr [ @type=CSCONST_BOOL ] 
					                                [ @value='true' | @value='false' ] ]
					          / expr::* [ isConstant() ]
				</pattern>
            </error>
            <error enabled="true" id="CS.CONSTCOND.WHILE" identification="" message="The condition in 'while' statement is always true or always false" severity="8" title="'while' controlling expression is always true or always false" upkid="60">
                <pattern>
					// WhileStmt [ not expr::ConstExpr [ @type=CSCONST_BOOL ] 
					                                   [ @value='true' ] ]
					             / expr::* [ isConstant() ] 
				</pattern>
            </error>
            <error enabled="true" id="CS.CONSTCOND.TERNARY" identification="" message="The condition in conditional expression is always true or always false" severity="8" title="Controlling condition in conditional expression is always true or always false" upkid="59">
                <pattern>
					// ConditionalExpr / condition::* [ isConstant() ] 
				</pattern>
            </error>
        </checker>
    </checkergroup>
    <checkergroup api="path" directory="C:\Klocwork\User 9.2\plugins\csharp" id="builtin C# path checkers" language="CSharp">
        <checker id="CS.NREKB"/>
        <checker id="GENERAL_KB"/>
        <checker id="CS.NRE">
            <error autogroupby="0" enabled="true" id="CS.NRE.GEN.MUST" identification="" message="Null object reference '{0}' that comes from {1} will be dereferenced {2}." severity="1" title="Null object reference will be dereferenced" upkid="84">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.GEN.MIGHT" identification="" message="Null object reference '{0}' that comes from {1} may be dereferenced {2}." severity="1" title="Null object reference may be dereferenced" upkid="83">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.GEN.CALL.MIGHT" identification="" message="Null object reference '{0}' that comes from {1} may be passed to function and can be dereferenced there {2}." severity="1" title="Null object reference may be passed to function that may dereference it" upkid="81">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.GEN.CALL.MUST" identification="" message="Null object reference '{0}' that comes from {1} will be passed to function and can be dereferenced there {2}." severity="1" title="Null object reference will be passed to function that may dereference it" upkid="82">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.FUNC.CALL.MUST" identification="" message="Object reference '{0}' returned from {1} may be null, will be passed to function and may be dereferenced there {2}." severity="3" title="Result of function that may return null will be passed to another function that may dereference it" upkid="78">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.FUNC.CALL.MIGHT" identification="" message="Object reference '{0}' returned from {1} may be null, may be passed to function and may be dereferenced there {2}." severity="3" title="Result of function that may return null may be passed to another function that may dereference it" upkid="77">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.CHECK.MUST" identification="" message="Object reference '{0}' checked for null {1} will be dereferenced {2}." severity="3" title="Object reference will be dereferenced after it was positively checked for null" upkid="74">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.CHECK.MIGHT" identification="" message="Object reference '{0}' checked for null {1} may be dereferenced {2}." severity="3" title="Object reference may be dereferenced after it was positively checked for null" upkid="73">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.CHECK.CALL.MIGHT" identification="" message="Object reference '{0}' checked for null {1} may be passed to function and may be dereferenced there {2}." severity="3" title="Object reference may be passed to function that can dereference it after it was positively checked for null" upkid="71">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.CHECK.CALL.MUST" identification="" message="Object reference '{0}' checked for null {1} will be passed to function and may be dereferenced there {2}." severity="3" title="Object reference will be passed to function that may dereference it after it was positively checked for null" upkid="72">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.FUNC.MUST" identification="" message="Object reference '{0}' returned from {1} may be null and will be dereferenced {2}." severity="3" title="Result of function that may return null will be dereferenced" upkid="80">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.FUNC.MIGHT" identification="" message="Object reference '{0}' returned from {1} may be null and may be dereferenced {2}." severity="3" title="Result of function that can return null may be dereferenced" upkid="79">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.CONST.CALL" identification="" message="Constant null may be dereferenced {2}." severity="3" title="null is passed to function that can dereference it" upkid="75">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.NRE.CONST.DEREF" identification="" message="Constant null object reference is dereferenced {2}." severity="3" title="null is dereferenced" upkid="76">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
        </checker>
        <checker id="CS.RNRE">
            <error autogroupby="0" enabled="true" id="CS.RNRE" identification="" message="Suspicious dereference of object reference '{0}' before null check at line {1}" severity="3" title="Suspicious dereference before null check" upkid="87">
                <deplist>
                    <requires id="CS.NREKB"/>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
        </checker>
        <checker id="CS.RLK">
            <error autogroupby="0" enabled="true" id="CS.RLK" identification="" message="Object referenced by '{0}' is lost, but related resources are not disposed" severity="3" title="Resource leak" upkid="86">
                <deplist>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
        </checker>
        <checker id="CS.FORWARD.CAST">
            <error autogroupby="0" enabled="true" id="CS.WRONG.CAST" identification="" message="An invalid cast. '{0}' cannot be cast to '{1}'." severity="3" title="Object is incorrectly cast to another object" upkid="90">
                <deplist>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="false" id="CS.UNCHECKED.CAST" identification="" message="An invalid cast. '{0}' cannot be cast to '{1}'." severity="3" title="Object with type 'Object' is incorrectly cast to another object" upkid="88">
                <deplist>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="true" id="CS.WRONG.CAST.MIGHT" identification="" message="An invalid cast. '{0}' cannot be cast to '{1}'." severity="3" title="Object may be incorrectly cast to another object" upkid="91">
                <deplist>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
            <error autogroupby="0" enabled="false" id="CS.UNCHECKED.LOOPITER.CAST" identification="" message="An invalid cast. '{0}' cannot be cast to '{1}'." severity="3" title="Object with type 'Object' is incorrectly cast to another object in a loop" upkid="89">
                <deplist>
                    <requires id="GENERAL_KB"/>
                </deplist>
            </error>
        </checker>
    </checkergroup>
</checkers>